{"ast":null,"code":"import _objectSpread from \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\scrum-board\\\\Board.jsx\";\nimport React, { Component } from \"react\";\nimport { Icon, IconButton, Avatar, Tooltip, FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport ScrumBoardContainer from \"./ScrumBoardContainer\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { addNewCardInList } from \"./ScrumBoardService\";\nimport { EgretMenu } from \"egret\";\nimport { getBoardById, addListInBoard, getAllMembers, getAllLabels, addMemberInBoard, deleteMemberFromBoard } from \"../../redux/actions/ScrumBoardActions\";\n\nclass Board extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      board: {\n        title: \"\",\n        members: [],\n        list: []\n      }\n    };\n\n    this.handleAddList = listTitle => {\n      if (listTitle !== \"\") {\n        this.props.addListInBoard({\n          boardId: this.state.board.id,\n          listTitle\n        });\n      }\n    };\n\n    this.handleAddNewCard = cardData => {\n      addNewCardInList(_objectSpread({\n        boardId: this.props.match.params.id\n      }, cardData)).then(list => {\n        this.setState({\n          board: _objectSpread(_objectSpread({}, this.state.board), {}, {\n            list: [...list.data]\n          })\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      let memberId = event.target.value;\n      let _this$state$board = this.state.board,\n          members = _this$state$board.members,\n          id = _this$state$board.id;\n      let _this$props = this.props,\n          deleteMemberFromBoard = _this$props.deleteMemberFromBoard,\n          addMemberInBoard = _this$props.addMemberInBoard;\n\n      if (members.some(member => member.id === memberId)) {\n        deleteMemberFromBoard({\n          boardId: id,\n          memberId\n        });\n      } else addMemberInBoard({\n        boardId: id,\n        memberId\n      });\n    };\n  }\n\n  componentDidMount() {\n    let boardId = this.props.match.params.id;\n    this.props.getBoardById(boardId);\n    this.props.getAllMembers();\n    this.props.getAllLabels();\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    return {\n      board: _objectSpread({}, nextProps.board)\n    };\n  }\n\n  render() {\n    let _this$state$board2 = this.state.board,\n        _this$state$board2$me = _this$state$board2.members,\n        members = _this$state$board2$me === void 0 ? [] : _this$state$board2$me,\n        title = _this$state$board2.title,\n        _this$state$board2$li = _this$state$board2.list,\n        list = _this$state$board2$li === void 0 ? [] : _this$state$board2$li;\n    let _this$props$memberLis = this.props.memberList,\n        memberList = _this$props$memberLis === void 0 ? [] : _this$props$memberLis;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"scrum-board m-sm-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-wrap flex-middle flex-space-between mb-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/scrum-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, \"arrow_back\"))), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0 ml-8 capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, title), /*#__PURE__*/React.createElement(IconButton, {\n      className: \"ml-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, \"star_outline\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex position-relative face-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, members.map((member, index) => /*#__PURE__*/React.createElement(Tooltip, {\n      key: index,\n      title: member.name,\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: \"avatar\",\n      src: member.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(EgretMenu, {\n      horizontalPosition: \"right\",\n      shouldCloseOnItemClick: false,\n      menuButton: /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Add\",\n        fontSize: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        className: \"avatar ml--12 cursor-pointer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 19\n        }\n      }, \"+\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, memberList.map(user => /*#__PURE__*/React.createElement(FormControlLabel, {\n      className: \"ml-0\",\n      key: user.id,\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        checked: members.some(member => member.id === user.id),\n        onChange: this.handleChange,\n        value: user.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }),\n      label: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        src: user.avatar,\n        className: \"size-24\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"ml-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 23\n        }\n      }, user.name)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"position-relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ScrumBoardContainer, {\n      list: list,\n      handleAddList: this.handleAddList,\n      handleAddNewCard: this.handleAddNewCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  getBoardById: PropTypes.func.isRequired,\n  addListInBoard: PropTypes.func.isRequired,\n  getAllMembers: PropTypes.func.isRequired,\n  getAllLabels: PropTypes.func.isRequired,\n  addMemberInBoard: PropTypes.func.isRequired,\n  deleteMemberFromBoard: PropTypes.func.isRequired,\n  board: state.scrumboard.board,\n  memberList: state.scrumboard.memberList,\n  labelList: state.scrumboard.labelList\n});\n\nexport default connect(mapStateToProps, {\n  getBoardById,\n  addListInBoard,\n  getAllMembers,\n  getAllLabels,\n  addMemberInBoard,\n  deleteMemberFromBoard\n})(Board);","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/scrum-board/Board.jsx"],"names":["React","Component","Icon","IconButton","Avatar","Tooltip","FormControlLabel","Checkbox","ScrumBoardContainer","Link","connect","PropTypes","addNewCardInList","EgretMenu","getBoardById","addListInBoard","getAllMembers","getAllLabels","addMemberInBoard","deleteMemberFromBoard","Board","state","board","title","members","list","handleAddList","listTitle","props","boardId","id","handleAddNewCard","cardData","match","params","then","setState","data","handleChange","event","memberId","target","value","some","member","componentDidMount","getDerivedStateFromProps","nextProps","prevState","render","memberList","map","index","name","avatar","user","mapStateToProps","func","isRequired","scrumboard","labelList"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Icon,\n  IconButton,\n  Avatar,\n  Tooltip,\n  FormControlLabel,\n  Checkbox\n} from \"@material-ui/core\";\nimport ScrumBoardContainer from \"./ScrumBoardContainer\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { addNewCardInList } from \"./ScrumBoardService\";\nimport { EgretMenu } from \"egret\";\n\nimport {\n  getBoardById,\n  addListInBoard,\n  getAllMembers,\n  getAllLabels,\n  addMemberInBoard,\n  deleteMemberFromBoard\n} from \"../../redux/actions/ScrumBoardActions\";\n\nclass Board extends Component {\n  state = {\n    board: {\n      title: \"\",\n      members: [],\n      list: []\n    }\n  };\n\n  componentDidMount() {\n    let boardId = this.props.match.params.id;\n    this.props.getBoardById(boardId);\n    this.props.getAllMembers();\n    this.props.getAllLabels();\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    return {\n      board: { ...nextProps.board }\n    };\n  }\n\n  handleAddList = listTitle => {\n    if (listTitle !== \"\") {\n      this.props.addListInBoard({\n        boardId: this.state.board.id,\n        listTitle\n      });\n    }\n  };\n\n  handleAddNewCard = cardData => {\n    addNewCardInList({\n      boardId: this.props.match.params.id,\n      ...cardData\n    }).then(list => {\n      this.setState({ board: { ...this.state.board, list: [...list.data] } });\n    });\n  };\n\n  handleChange = event => {\n    let memberId = event.target.value;\n    let { members, id } = this.state.board;\n    let { deleteMemberFromBoard, addMemberInBoard } = this.props;\n    if (members.some(member => member.id === memberId)) {\n      deleteMemberFromBoard({ boardId: id, memberId });\n    } else addMemberInBoard({ boardId: id, memberId });\n  };\n\n  render() {\n    let { members = [], title, list = [] } = this.state.board;\n    let { memberList = [] } = this.props;\n\n    return (\n      <div className=\"scrum-board m-sm-30\">\n        <div className=\"flex flex-wrap flex-middle flex-space-between mb-16\">\n          <div className=\"flex flex-middle\">\n            <Link to=\"/scrum-board\">\n              <IconButton>\n                <Icon>arrow_back</Icon>\n              </IconButton>\n            </Link>\n            <h5 className=\"m-0 ml-8 capitalize\">{title}</h5>\n            <IconButton className=\"ml-8\">\n              <Icon>star_outline</Icon>\n            </IconButton>\n          </div>\n\n          <div className=\"flex position-relative face-group\">\n            {members.map((member, index) => (\n              <Tooltip key={index} title={member.name} fontSize=\"large\">\n                <Avatar className=\"avatar\" src={member.avatar} />\n              </Tooltip>\n            ))}\n            <EgretMenu\n              horizontalPosition=\"right\"\n              shouldCloseOnItemClick={false}\n              menuButton={\n                <Tooltip title={\"Add\"} fontSize=\"large\">\n                  <Avatar className=\"avatar ml--12 cursor-pointer\">+</Avatar>\n                </Tooltip>\n              }\n            >\n              {memberList.map(user => (\n                <FormControlLabel\n                  className=\"ml-0\"\n                  key={user.id}\n                  control={\n                    <Checkbox\n                      checked={members.some(member => member.id === user.id)}\n                      onChange={this.handleChange}\n                      value={user.id}\n                    />\n                  }\n                  label={\n                    <div className=\"flex flex-middle\">\n                      <Avatar src={user.avatar} className=\"size-24\"></Avatar>\n                      <span className=\"ml-12\">{user.name}</span>\n                    </div>\n                  }\n                />\n              ))}\n            </EgretMenu>\n            {/* <Avatar className=\"number-avatar avatar\">+3</Avatar> */}\n          </div>\n        </div>\n\n        <div className=\"position-relative\">\n          <ScrumBoardContainer\n            list={list}\n            handleAddList={this.handleAddList}\n            handleAddNewCard={this.handleAddNewCard}\n          ></ScrumBoardContainer>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  getBoardById: PropTypes.func.isRequired,\n  addListInBoard: PropTypes.func.isRequired,\n  getAllMembers: PropTypes.func.isRequired,\n  getAllLabels: PropTypes.func.isRequired,\n  addMemberInBoard: PropTypes.func.isRequired,\n  deleteMemberFromBoard: PropTypes.func.isRequired,\n  board: state.scrumboard.board,\n  memberList: state.scrumboard.memberList,\n  labelList: state.scrumboard.labelList\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    getBoardById,\n    addListInBoard,\n    getAllMembers,\n    getAllLabels,\n    addMemberInBoard,\n    deleteMemberFromBoard\n  }\n)(Board);\n"]},"metadata":{},"sourceType":"module"}