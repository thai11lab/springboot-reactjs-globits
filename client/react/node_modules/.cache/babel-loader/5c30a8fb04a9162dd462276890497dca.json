{"ast":null,"code":"var _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\ecommerce\\\\Checkout.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { Card, Grid, FormControlLabel, Checkbox, Button, MenuItem, Divider } from \"@material-ui/core\";\nimport { countries } from \"./Country\";\nimport PaymentDialog from \"./PaymentDialog\";\nimport { PropTypes } from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass Checkout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      company: \"\",\n      email: \"\",\n      mobile: \"\",\n      country: \"United States\",\n      city: \"\",\n      address: \"\",\n      open: false\n    };\n\n    this.getTotalCost = () => {\n      let _this$props$cartList = this.props.cartList,\n          cartList = _this$props$cartList === void 0 ? [] : _this$props$cartList;\n      let totalCost = 0;\n      cartList.map(product => {\n        totalCost += product.amount * product.price;\n      });\n      return totalCost;\n    };\n\n    this.handleChange = event => {\n      event.persist();\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = () => {\n      this.toggleDialog();\n    };\n\n    this.toggleDialog = () => {\n      this.setState({\n        open: !this.state.open\n      });\n    };\n  }\n\n  render() {\n    let _this$state = this.state,\n        firstName = _this$state.firstName,\n        lastName = _this$state.lastName,\n        company = _this$state.company,\n        email = _this$state.email,\n        mobile = _this$state.mobile,\n        country = _this$state.country,\n        city = _this$state.city,\n        address = _this$state.address;\n    let _this$props$cartList2 = this.props.cartList,\n        cartList = _this$props$cartList2 === void 0 ? [] : _this$props$cartList2;\n    return /*#__PURE__*/React.createElement(Card, {\n      className: \"checkout m-sm-30 p-sm-24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ValidatorForm, {\n      ref: \"form\",\n      onSubmit: this.handleSubmit,\n      onError: errors => null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"font-weight-500 mt-0 mb-24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \"Billing Details\"), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 7,\n      md: 7,\n      sm: 12,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      className: \"mb-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      variant: \"outlined\",\n      label: \"First Name\",\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"firstName\",\n      value: firstName,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      variant: \"outlined\",\n      label: \"Last Name\",\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"lastName\",\n      value: lastName,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"mb-20\",\n      variant: \"outlined\",\n      label: \"Company\",\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"company\",\n      value: company,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      className: \"mb-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      variant: \"outlined\",\n      label: \"Email\",\n      onChange: this.handleChange,\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      validators: [\"required\", \"isEmail\"],\n      errorMessages: [\"this field is required\", \"email is not valid\"],\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      variant: \"outlined\",\n      label: \"Mobile\",\n      onChange: this.handleChange,\n      type: \"number\",\n      name: \"mobile\",\n      value: mobile,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      className: \"mb-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      label: \"Country\",\n      select: true,\n      name: \"country\",\n      variant: \"outlined\",\n      value: country,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }, countries.map(country => /*#__PURE__*/React.createElement(MenuItem, {\n      key: country.code,\n      value: country.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 23\n      }\n    }, country.name)))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      variant: \"outlined\",\n      label: \"City\",\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"city\",\n      value: city,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(TextValidator, {\n      variant: \"outlined\",\n      className: \"mb-20\",\n      label: \"Address\\\\\",\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"address\",\n      value: address,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 26\n        }\n      }),\n      label: \"Create an account?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 5,\n      md: 5,\n      sm: 12,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-space-between mb-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, \"Porduct\"), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, \"Total Price\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"checkout__product-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }, cartList.map(product => /*#__PURE__*/React.createElement(Fragment, {\n      key: product.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-space-between py-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted pr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 23\n      }\n    }, product.title), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 23\n      }\n    }, \"$\", product.price * product.amount)), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-space-between mb-32 mt-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 19\n      }\n    }, \"Total\"), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 19\n      }\n    }, \"$\", this.getTotalCost().toFixed(2))), /*#__PURE__*/React.createElement(Button, {\n      className: \"w-100\",\n      color: \"primary\",\n      variant: \"contained\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }, \"Place Order\"))))), /*#__PURE__*/React.createElement(PaymentDialog, {\n      open: this.state.open,\n      toggleDialog: this.toggleDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  cartList: state.ecommerce.cartList,\n  user: state.user\n});\n\nexport default connect(mapStateToProps, {})(Checkout);","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/ecommerce/Checkout.jsx"],"names":["React","Component","Fragment","ValidatorForm","TextValidator","Card","Grid","FormControlLabel","Checkbox","Button","MenuItem","Divider","countries","PaymentDialog","PropTypes","connect","Checkout","state","firstName","lastName","company","email","mobile","country","city","address","open","getTotalCost","props","cartList","totalCost","map","product","amount","price","handleChange","event","persist","setState","target","name","value","handleSubmit","toggleDialog","render","errors","code","id","title","toFixed","mapStateToProps","ecommerce","user"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport {\n  Card,\n  Grid,\n  FormControlLabel,\n  Checkbox,\n  Button,\n  MenuItem,\n  Divider\n} from \"@material-ui/core\";\nimport { countries } from \"./Country\";\nimport PaymentDialog from \"./PaymentDialog\";\nimport { PropTypes } from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass Checkout extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    company: \"\",\n    email: \"\",\n    mobile: \"\",\n    country: \"United States\",\n    city: \"\",\n    address: \"\",\n    open: false\n  };\n\n  getTotalCost = () => {\n    let { cartList = [] } = this.props;\n    let totalCost = 0;\n    cartList.map(product => {\n      totalCost += product.amount * product.price;\n    });\n    return totalCost;\n  };\n\n  handleChange = event => {\n    event.persist();\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = () => {\n    this.toggleDialog();\n  };\n\n  toggleDialog = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  render() {\n    let {\n      firstName,\n      lastName,\n      company,\n      email,\n      mobile,\n      country,\n      city,\n      address\n    } = this.state;\n\n    let { cartList = [] } = this.props;\n\n    return (\n      <Card className=\"checkout m-sm-30 p-sm-24\">\n        <ValidatorForm\n          ref=\"form\"\n          onSubmit={this.handleSubmit}\n          onError={errors => null}\n        >\n          <h5 className=\"font-weight-500 mt-0 mb-24\">Billing Details</h5>\n          <Grid container spacing={3}>\n            <Grid item lg={7} md={7} sm={12} xs={12}>\n              <Grid container spacing={3} className=\"mb-8\">\n                <Grid item xs={6}>\n                  <TextValidator\n                    variant=\"outlined\"\n                    label=\"First Name\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    name=\"firstName\"\n                    value={firstName}\n                    validators={[\"required\"]}\n                    errorMessages={[\"this field is required\"]}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextValidator\n                    variant=\"outlined\"\n                    label=\"Last Name\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    name=\"lastName\"\n                    value={lastName}\n                    validators={[\"required\"]}\n                    errorMessages={[\"this field is required\"]}\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n\n              <TextValidator\n                className=\"mb-20\"\n                variant=\"outlined\"\n                label=\"Company\"\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"company\"\n                value={company}\n                fullWidth\n              />\n\n              <Grid container spacing={3} className=\"mb-8\">\n                <Grid item xs={6}>\n                  <TextValidator\n                    variant=\"outlined\"\n                    label=\"Email\"\n                    onChange={this.handleChange}\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    validators={[\"required\", \"isEmail\"]}\n                    errorMessages={[\n                      \"this field is required\",\n                      \"email is not valid\"\n                    ]}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextValidator\n                    variant=\"outlined\"\n                    label=\"Mobile\"\n                    onChange={this.handleChange}\n                    type=\"number\"\n                    name=\"mobile\"\n                    value={mobile}\n                    validators={[\"required\"]}\n                    errorMessages={[\"this field is required\"]}\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={3} className=\"mb-8\">\n                <Grid item xs={6}>\n                  <TextValidator\n                    label=\"Country\"\n                    select\n                    name=\"country\"\n                    variant=\"outlined\"\n                    value={country}\n                    onChange={this.handleChange}\n                    fullWidth\n                  >\n                    {countries.map(country => (\n                      <MenuItem key={country.code} value={country.name}>\n                        {country.name}\n                      </MenuItem>\n                    ))}\n                  </TextValidator>\n                </Grid>\n                <Grid item xs={6}>\n                  <TextValidator\n                    variant=\"outlined\"\n                    label=\"City\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    name=\"city\"\n                    value={city}\n                    validators={[\"required\"]}\n                    errorMessages={[\"this field is required\"]}\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n\n              <TextValidator\n                variant=\"outlined\"\n                className=\"mb-20\"\n                label=\"Address\\\"\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"address\"\n                value={address}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n                fullWidth\n              />\n\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Create an account?\"\n              />\n            </Grid>\n            <Grid item lg={5} md={5} sm={12} xs={12}>\n              <div className=\"flex flex-space-between mb-16\">\n                <h6 className=\"m-0\">Porduct</h6>\n                <h6 className=\"m-0\">Total Price</h6>\n              </div>\n              <div className=\"checkout__product-list\">\n                {cartList.map(product => (\n                  <Fragment key={product.id}>\n                    <div className=\"flex flex-space-between py-16\">\n                      <span className=\"text-muted pr-8\">{product.title}</span>\n                      <span className=\"text-muted\">\n                        ${product.price * product.amount}\n                      </span>\n                    </div>\n                    <Divider></Divider>\n                  </Fragment>\n                ))}\n                <div className=\"flex flex-space-between mb-32 mt-16\">\n                  <h6 className=\"m-0\">Total</h6>\n                  <h6 className=\"m-0\">${this.getTotalCost().toFixed(2)}</h6>\n                </div>\n                <Button\n                  className=\"w-100\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  type=\"submit\"\n                >\n                  Place Order\n                </Button>\n              </div>\n            </Grid>\n          </Grid>\n        </ValidatorForm>\n\n        <PaymentDialog\n          open={this.state.open}\n          toggleDialog={this.toggleDialog}\n        ></PaymentDialog>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  cartList: state.ecommerce.cartList,\n  user: state.user\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(Checkout);\n"]},"metadata":{},"sourceType":"module"}