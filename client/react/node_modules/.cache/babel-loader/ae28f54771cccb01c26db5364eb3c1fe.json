{"ast":null,"code":"import _objectSpread from \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\scrum-board\\\\CardEditorDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, TextField, Icon, Avatar, Button, Divider, IconButton, Grid, Card, MenuItem, Input, FormControlLabel, Checkbox, Tooltip } from \"@material-ui/core\";\nimport { getTimeDifference, generateRandomId } from \"utils.js\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { EgretMenu } from \"egret\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { updateCardInList } from \"../../redux/actions/ScrumBoardActions\";\n\nclass CardEditorDialog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: \"\",\n      title: \"\",\n      description: \"\",\n      commentText: \"\",\n      fullScreen: false,\n      updateFromProps: true\n    };\n\n    this.closeDialog = () => {\n      if (this.windowResizeListener) window.removeEventListener(\"resize\", this.windowResizeListener);\n      this.props.handleClose();\n    };\n\n    this.makeCoverPhoto = coverImage => {\n      this.setState({\n        coverImage\n      });\n    };\n\n    this.removeAttachments = index => {\n      let _this$state$attachmen = this.state.attachments,\n          attachments = _this$state$attachmen === void 0 ? [] : _this$state$attachmen;\n      attachments.splice(index, 1);\n      this.setState({\n        attachments\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        updateFromProps: false\n      });\n      let target = event.target;\n      let id = target.value;\n\n      if (target.name === \"avatar\") {\n        let _this$state = this.state,\n            cardMembers = _this$state.cardMembers,\n            boardMembers = _this$state.boardMembers;\n        let member = boardMembers.find(user => user.id === id);\n\n        if (!target.checked) {\n          cardMembers.splice(cardMembers.indexOf(member), 1);\n          this.setState({\n            cardMembers\n          });\n        } else {\n          cardMembers.push(member);\n          this.setState({\n            cardMembers\n          });\n        }\n      } else if (target.name === \"label\") {\n        let _this$state2 = this.state,\n            labels = _this$state2.labels,\n            labelList = _this$state2.labelList;\n        let label = labelList.find(item => item.id === parseInt(id));\n\n        if (!target.checked) {\n          labels.splice(labels.indexOf(label), 1);\n          this.setState({\n            labels\n          });\n        } else {\n          labels.push(label);\n          this.setState({\n            labels\n          });\n        }\n      } else if (event.key === \"Enter\" && !event.shiftKey && target.name === \"commentText\") {\n        this.setState({\n          [event.target.name]: event.target.value\n        });\n        this.sendComment();\n      } else {\n        this.setState({\n          [event.target.name]: event.target.value\n        });\n      }\n    };\n\n    this.handleSave = () => {\n      let _this$state3 = this.state,\n          id = _this$state3.id,\n          title = _this$state3.title,\n          coverImage = _this$state3.coverImage,\n          _this$state3$cardMemb = _this$state3.cardMembers,\n          cardMembers = _this$state3$cardMemb === void 0 ? [] : _this$state3$cardMemb,\n          _this$state3$labels = _this$state3.labels,\n          labels = _this$state3$labels === void 0 ? [] : _this$state3$labels,\n          description = _this$state3.description,\n          _this$state3$attachme = _this$state3.attachments,\n          attachments = _this$state3$attachme === void 0 ? [] : _this$state3$attachme,\n          _this$state3$comments = _this$state3.comments,\n          comments = _this$state3$comments === void 0 ? [] : _this$state3$comments,\n          listId = _this$state3.listId,\n          boardId = _this$state3.boardId;\n      let card = {\n        id,\n        title,\n        coverImage,\n        members: cardMembers.map(member => member.id),\n        labels: labels.map(item => item.id),\n        description,\n        attachments,\n        comments\n      };\n      this.props.updateCardInList(boardId, listId, card);\n      this.closeDialog();\n    };\n\n    this.sendComment = () => {\n      let _this$state4 = this.state,\n          comments = _this$state4.comments,\n          user = _this$state4.user,\n          commentText = _this$state4.commentText;\n      if (commentText.trim() !== \"\") comments.push({\n        id: generateRandomId(),\n        uid: user.userId,\n        text: commentText.trim(),\n        time: new Date()\n      });\n      this.setState({\n        comments,\n        commentText: \"\"\n      });\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!prevState.updateFromProps && prevState.updateFromProps !== undefined) return {};\n    let card = nextProps.card,\n        _nextProps$memberList = nextProps.memberList,\n        memberList = _nextProps$memberList === void 0 ? [] : _nextProps$memberList,\n        _nextProps$labelList = nextProps.labelList,\n        labelList = _nextProps$labelList === void 0 ? [] : _nextProps$labelList,\n        board = nextProps.board,\n        user = nextProps.user;\n    let _card$members = card.members,\n        members = _card$members === void 0 ? [] : _card$members,\n        _card$labels = card.labels,\n        labels = _card$labels === void 0 ? [] : _card$labels;\n    let cardMembers = members.map(boardMemberId => memberList.find(member => member.id === boardMemberId));\n    let modifiedLabelList = labels.map(labelId => labelList.find(label => label.id === labelId));\n    let boardMembers = board.members.map(boardMember => memberList.find(member => member.id === boardMember.id));\n    return _objectSpread(_objectSpread({}, card), {}, {\n      boardId: board.id,\n      cardMembers,\n      boardMembers,\n      labels: [...modifiedLabelList],\n      labelList,\n      user,\n      updateFromProps: false\n    });\n  }\n\n  componentDidMount() {\n    if (window.innerWidth < 768) {\n      this.setState({\n        fullScreen: true\n      });\n    }\n\n    if (window) this.windowResizeListener = window.addEventListener(\"resize\", event => {\n      if (event.target.innerWidth < 768) {\n        this.setState({\n          fullScreen: true\n        });\n      } else this.setState({\n        fullScreen: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.windowResizeListener) window.removeEventListener(\"resize\", this.windowResizeListener);\n  }\n\n  render() {\n    let _this$props = this.props,\n        open = _this$props.open,\n        memberList = _this$props.memberList;\n    let _this$state5 = this.state,\n        fullScreen = _this$state5.fullScreen,\n        title = _this$state5.title,\n        _this$state5$cardMemb = _this$state5.cardMembers,\n        cardMembers = _this$state5$cardMemb === void 0 ? [] : _this$state5$cardMemb,\n        _this$state5$boardMem = _this$state5.boardMembers,\n        boardMembers = _this$state5$boardMem === void 0 ? [] : _this$state5$boardMem,\n        _this$state5$labels = _this$state5.labels,\n        labels = _this$state5$labels === void 0 ? [] : _this$state5$labels,\n        _this$state5$labelLis = _this$state5.labelList,\n        labelList = _this$state5$labelLis === void 0 ? [] : _this$state5$labelLis,\n        description = _this$state5.description,\n        _this$state5$attachme = _this$state5.attachments,\n        attachments = _this$state5$attachme === void 0 ? [] : _this$state5$attachme,\n        _this$state5$comments = _this$state5.comments,\n        comments = _this$state5$comments === void 0 ? [] : _this$state5$comments,\n        user = _this$state5.user,\n        commentText = _this$state5.commentText;\n    return /*#__PURE__*/React.createElement(Dialog, {\n      onClose: this.closeDialog,\n      open: open,\n      fullScreen: fullScreen,\n      fullWidth: true,\n      scroll: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"scrum-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"px-sm-24 pt-sm-24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-middle flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }, \"assignment\"), /*#__PURE__*/React.createElement(Input, {\n      style: {\n        fontSize: \"1rem\",\n        fontWeight: 500\n      },\n      className: \"flex-grow-1 px-8 ml-8 capitalize\",\n      type: \"text\",\n      autoFocus: true,\n      name: \"title\",\n      onChange: this.handleChange,\n      disableUnderline: true,\n      value: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      onClick: this.closeDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }\n    }, \"clear\"))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"m-0 ml-40 mb-16 text-small text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, \"Tech Startup Board Hot Backlog\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ml-40 mb-16 flex flex-wrap flex-space-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"m-0 mb-8 uppercase text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, \"cardMembers\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex position-relative face-group-36\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }, cardMembers.map(member => /*#__PURE__*/React.createElement(Avatar, {\n      key: member.id,\n      className: \"avatar\",\n      src: member.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(EgretMenu, {\n      horizontalPosition: \"center\",\n      shouldCloseOnItemClick: false,\n      menuButton: /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Add\",\n        fontSize: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        className: \"avatar ml--12 cursor-pointer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }\n      }, \"+\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 19\n      }\n    }, boardMembers.map(user => /*#__PURE__*/React.createElement(FormControlLabel, {\n      className: \"ml-0\",\n      key: user.id,\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        name: \"avatar\",\n        checked: cardMembers.some(member => member.id === user.id),\n        onChange: this.handleChange,\n        value: user.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 27\n        }\n      }),\n      label: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        src: user.avatar,\n        className: \"size-24\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"ml-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 29\n        }\n      }, user.name)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 23\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"m-0 mb-8 uppercase text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }\n    }, \"labels\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }\n    }, labels.map(label => /*#__PURE__*/React.createElement(Button, {\n      key: label.id,\n      size: \"small\",\n      variant: \"contained\",\n      className: \"capitalize mr-4 text-white text-small bg-\".concat(label.color),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 21\n      }\n    }, label.title)), /*#__PURE__*/React.createElement(EgretMenu, {\n      horizontalPosition: \"right\",\n      shouldCloseOnItemClick: false,\n      menuButton: /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Add\",\n        fontSize: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"bg-light-gray\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 25\n        }\n      }, \"+\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 19\n      }\n    }, labelList.map(label => /*#__PURE__*/React.createElement(FormControlLabel, {\n      className: \"ml-0\",\n      key: label.id,\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        checked: labels.some(item => item.id === label.id),\n        onChange: this.handleChange,\n        value: label.id,\n        name: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 27\n        }\n      }),\n      label: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"border-radius-4 size-24 bg-\".concat(label.color),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"ml-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 29\n        }\n      }, label.title)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 23\n      }\n    }))))))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Scrollbar, {\n      className: \"position-relative pt-16 mb-16\",\n      style: {\n        maxHeight: \"45vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"px-sm-24 pt-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-middle mb-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 17\n      }\n    }, \"description\"), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"m-0 ml-16 uppercase text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }\n    }, \"description\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ml-40 mb-16 flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      className: \"text-muted\",\n      onChange: this.handleChange,\n      name: \"description\",\n      value: description,\n      variant: \"outlined\",\n      fullWidth: true,\n      multiline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-space-between flex-middle mb-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 19\n      }\n    }, \"attach_file\"), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"m-0 ml-16 uppercase text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 19\n      }\n    }, \"attachments\")), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"upload-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"text-primary uppercase font-weight-500\",\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 19\n      }\n    }, \"+ add an attachment\")), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"display-none\",\n      id: \"upload-file\",\n      type: \"file\",\n      multiple: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ml-40 mb-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 17\n      }\n    }, attachments.map((file, id) => /*#__PURE__*/React.createElement(Grid, {\n      key: id,\n      item: true,\n      lg: 6,\n      md: 6,\n      sm: 12,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"p-4 flex flex-middle bg-default h-100\",\n      elevation: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-middle border-radius-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: file.url,\n      alt: \"image cover photo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ml-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"m-0 text-muted capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 27\n      }\n    }, file.name), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-muted text-small capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 27\n      }\n    }, file.size)), /*#__PURE__*/React.createElement(EgretMenu, {\n      horizontalPosition: \"center\",\n      menuButton: /*#__PURE__*/React.createElement(IconButton, {\n        className: \"ml-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 31\n        }\n      }, \"more_vert\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      className: \"flex flex-middle\",\n      onClick: () => this.makeCoverPhoto(file.url),\n      style: {\n        minWidth: 165\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 29\n      }\n    }, \" insert_photo \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"pl-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 29\n      }\n    }, \" Make Cover \")), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => this.removeAttachments(id),\n      className: \"flex flex-middle\",\n      style: {\n        minWidth: 165\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 29\n      }\n    }, \" delete \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"pl-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 29\n      }\n    }, \" Remove \"))))))))), /*#__PURE__*/React.createElement(Divider, {\n      className: \"mb-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"px-sm-24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-middle mb-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 17\n      }\n    }, \"message\"), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"m-0 ml-16 uppercase text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 17\n      }\n    }, \"comments\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comments ml-40\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 15\n      }\n    }, comments.map(comment => {\n      let user = memberList.find(user => user.id === comment.uid);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-16\",\n        key: comment.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-middle mb-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        className: \"avatar size-36\",\n        src: user.avatar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ml-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 27\n        }\n      }, user.name), /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 27\n        }\n      }, getTimeDifference(new Date(comment.time)), \" ago\"))), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"m-0 text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 23\n        }\n      }, comment.text));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-middle mb-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: \"avatar size-36\",\n      src: user.photoURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-grow-1 flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      className: \"ml-12 text-muted\",\n      onChange: this.handleChange,\n      onKeyDown: this.handleChange,\n      variant: \"outlined\",\n      name: \"commentText\",\n      value: commentText,\n      fullWidth: true,\n      inputProps: {\n        style: {\n          padding: \"10px\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.sendComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 19\n      }\n    }, \"Send\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"px-sm-24 mb-12 flex flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"mr-12\",\n      onClick: this.closeDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 13\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleSave,\n      variant: \"contained\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 13\n      }\n    }, \"Save\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  updateCardInList: PropTypes.func.isRequired,\n  board: state.scrumboard.board,\n  memberList: state.scrumboard.memberList,\n  labelList: state.scrumboard.labelList,\n  user: state.user\n});\n\nexport default connect(mapStateToProps, {\n  updateCardInList\n})(CardEditorDialog);","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/scrum-board/CardEditorDialog.jsx"],"names":["React","Component","Dialog","TextField","Icon","Avatar","Button","Divider","IconButton","Grid","Card","MenuItem","Input","FormControlLabel","Checkbox","Tooltip","getTimeDifference","generateRandomId","Scrollbar","EgretMenu","PropTypes","connect","updateCardInList","CardEditorDialog","state","id","title","description","commentText","fullScreen","updateFromProps","closeDialog","windowResizeListener","window","removeEventListener","props","handleClose","makeCoverPhoto","coverImage","setState","removeAttachments","index","attachments","splice","handleChange","event","target","value","name","cardMembers","boardMembers","member","find","user","checked","indexOf","push","labels","labelList","label","item","parseInt","key","shiftKey","sendComment","handleSave","comments","listId","boardId","card","members","map","trim","uid","userId","text","time","Date","getDerivedStateFromProps","nextProps","prevState","undefined","memberList","board","boardMemberId","modifiedLabelList","labelId","boardMember","componentDidMount","innerWidth","addEventListener","componentWillUnmount","render","open","fontSize","fontWeight","avatar","some","color","maxHeight","file","url","size","minWidth","comment","photoURL","style","padding","mapStateToProps","func","isRequired","scrumboard"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Dialog,\n  TextField,\n  Icon,\n  Avatar,\n  Button,\n  Divider,\n  IconButton,\n  Grid,\n  Card,\n  MenuItem,\n  Input,\n  FormControlLabel,\n  Checkbox,\n  Tooltip\n} from \"@material-ui/core\";\nimport { getTimeDifference, generateRandomId } from \"utils.js\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { EgretMenu } from \"egret\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { updateCardInList } from \"../../redux/actions/ScrumBoardActions\";\n\nclass CardEditorDialog extends Component {\n  windowResizeListener;\n  state = {\n    id: \"\",\n    title: \"\",\n    description: \"\",\n    commentText: \"\",\n    fullScreen: false,\n    updateFromProps: true\n  };\n\n  closeDialog = () => {\n    if (this.windowResizeListener)\n      window.removeEventListener(\"resize\", this.windowResizeListener);\n    this.props.handleClose();\n  };\n\n  makeCoverPhoto = coverImage => {\n    this.setState({ coverImage });\n  };\n\n  removeAttachments = index => {\n    let { attachments = [] } = this.state;\n    attachments.splice(index, 1);\n    this.setState({ attachments });\n  };\n\n  handleChange = event => {\n    this.setState({ updateFromProps: false });\n\n    let target = event.target;\n    let id = target.value;\n\n    if (target.name === \"avatar\") {\n      let { cardMembers, boardMembers } = this.state;\n      let member = boardMembers.find(user => user.id === id);\n\n      if (!target.checked) {\n        cardMembers.splice(cardMembers.indexOf(member), 1);\n        this.setState({ cardMembers });\n      } else {\n        cardMembers.push(member);\n        this.setState({ cardMembers });\n      }\n    } else if (target.name === \"label\") {\n      let { labels, labelList } = this.state;\n      let label = labelList.find(item => item.id === parseInt(id));\n\n      if (!target.checked) {\n        labels.splice(labels.indexOf(label), 1);\n        this.setState({ labels });\n      } else {\n        labels.push(label);\n        this.setState({ labels });\n      }\n    } else if (\n      event.key === \"Enter\" &&\n      !event.shiftKey &&\n      target.name === \"commentText\"\n    ) {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      this.sendComment();\n    } else {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    }\n  };\n\n  handleSave = () => {\n    let {\n      id,\n      title,\n      coverImage,\n      cardMembers = [],\n      labels = [],\n      description,\n      attachments = [],\n      comments = [],\n      listId,\n      boardId\n    } = this.state;\n\n    let card = {\n      id,\n      title,\n      coverImage,\n      members: cardMembers.map(member => member.id),\n      labels: labels.map(item => item.id),\n      description,\n      attachments,\n      comments\n    };\n    this.props.updateCardInList(boardId, listId, card);\n    this.closeDialog();\n  };\n\n  sendComment = () => {\n    let { comments, user, commentText } = this.state;\n\n    if (commentText.trim() !== \"\")\n      comments.push({\n        id: generateRandomId(),\n        uid: user.userId,\n        text: commentText.trim(),\n        time: new Date()\n      });\n    this.setState({ comments, commentText: \"\" });\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!prevState.updateFromProps && prevState.updateFromProps !== undefined)\n      return {};\n\n    let {\n      card,\n      memberList = [], //all cardMembers\n      labelList = [],\n      board,\n      user\n    } = nextProps;\n\n    let {\n      members = [], //members in card\n      labels = []\n    } = card;\n\n    let cardMembers = members.map(boardMemberId =>\n      memberList.find(member => member.id === boardMemberId)\n    );\n    let modifiedLabelList = labels.map(labelId =>\n      labelList.find(label => label.id === labelId)\n    );\n    let boardMembers = board.members.map(boardMember =>\n      memberList.find(member => member.id === boardMember.id)\n    );\n\n    return {\n      ...card,\n      boardId: board.id,\n      cardMembers,\n      boardMembers,\n      labels: [...modifiedLabelList],\n      labelList,\n      user,\n      updateFromProps: false\n    };\n  }\n\n  componentDidMount() {\n    if (window.innerWidth < 768) {\n      this.setState({ fullScreen: true });\n    }\n    if (window)\n      this.windowResizeListener = window.addEventListener(\"resize\", event => {\n        if (event.target.innerWidth < 768) {\n          this.setState({ fullScreen: true });\n        } else this.setState({ fullScreen: false });\n      });\n  }\n\n  componentWillUnmount() {\n    if (this.windowResizeListener)\n      window.removeEventListener(\"resize\", this.windowResizeListener);\n  }\n\n  render() {\n    let { open, memberList } = this.props;\n    let {\n      fullScreen,\n      title,\n      cardMembers = [],\n      boardMembers = [],\n      labels = [],\n      labelList = [],\n      description,\n      attachments = [],\n      comments = [],\n      user,\n      commentText\n    } = this.state;\n\n    return (\n      <Dialog\n        onClose={this.closeDialog}\n        open={open}\n        fullScreen={fullScreen}\n        fullWidth={true}\n        scroll=\"body\"\n      >\n        <div className=\"scrum-board\">\n          <div className=\"px-sm-24 pt-sm-24\">\n            <div className=\"flex flex-middle\">\n              <div className=\"flex flex-middle flex-grow-1\">\n                <Icon className=\"text-muted\">assignment</Icon>\n                <Input\n                  style={{\n                    fontSize: \"1rem\",\n                    fontWeight: 500\n                  }}\n                  className=\"flex-grow-1 px-8 ml-8 capitalize\"\n                  type=\"text\"\n                  autoFocus\n                  name=\"title\"\n                  onChange={this.handleChange}\n                  disableUnderline={true}\n                  value={title}\n                ></Input>\n              </div>\n              <IconButton size=\"small\" onClick={this.closeDialog}>\n                <Icon>clear</Icon>\n              </IconButton>\n            </div>\n\n            <p className=\"m-0 ml-40 mb-16 text-small text-muted\">\n              Tech Startup Board Hot Backlog\n            </p>\n\n            <div className=\"ml-40 mb-16 flex flex-wrap flex-space-between\">\n              <div>\n                <h6 className=\"m-0 mb-8 uppercase text-muted\">cardMembers</h6>\n                <div className=\"flex position-relative face-group-36\">\n                  {cardMembers.map(member => (\n                    <Avatar\n                      key={member.id}\n                      className=\"avatar\"\n                      src={member.avatar}\n                    />\n                  ))}\n                  <EgretMenu\n                    horizontalPosition=\"center\"\n                    shouldCloseOnItemClick={false}\n                    menuButton={\n                      <Tooltip title={\"Add\"} fontSize=\"large\">\n                        <Avatar className=\"avatar ml--12 cursor-pointer\">\n                          +\n                        </Avatar>\n                      </Tooltip>\n                    }\n                  >\n                    {boardMembers.map(user => (\n                      <FormControlLabel\n                        className=\"ml-0\"\n                        key={user.id}\n                        control={\n                          <Checkbox\n                            name=\"avatar\"\n                            checked={cardMembers.some(\n                              member => member.id === user.id\n                            )}\n                            onChange={this.handleChange}\n                            value={user.id}\n                          />\n                        }\n                        label={\n                          <div className=\"flex flex-middle\">\n                            <Avatar\n                              src={user.avatar}\n                              className=\"size-24\"\n                            ></Avatar>\n                            <span className=\"ml-12\">{user.name}</span>\n                          </div>\n                        }\n                      />\n                    ))}\n                  </EgretMenu>\n                </div>\n              </div>\n              <div>\n                <h6 className=\"m-0 mb-8 uppercase text-muted\">labels</h6>\n                <div className=\"button-group\">\n                  {labels.map(label => (\n                    <Button\n                      key={label.id}\n                      size=\"small\"\n                      variant=\"contained\"\n                      className={`capitalize mr-4 text-white text-small bg-${label.color}`}\n                    >\n                      {label.title}\n                    </Button>\n                  ))}\n                  <EgretMenu\n                    horizontalPosition=\"right\"\n                    shouldCloseOnItemClick={false}\n                    menuButton={\n                      <Tooltip title={\"Add\"} fontSize=\"large\">\n                        <Button className=\"bg-light-gray\" size=\"small\">\n                          +\n                        </Button>\n                      </Tooltip>\n                    }\n                  >\n                    {labelList.map(label => (\n                      <FormControlLabel\n                        className=\"ml-0\"\n                        key={label.id}\n                        control={\n                          <Checkbox\n                            checked={labels.some(item => item.id === label.id)}\n                            onChange={this.handleChange}\n                            value={label.id}\n                            name=\"label\"\n                          />\n                        }\n                        label={\n                          <div className=\"flex flex-middle\">\n                            <div\n                              className={`border-radius-4 size-24 bg-${label.color}`}\n                            ></div>\n                            <span className=\"ml-12\">{label.title}</span>\n                          </div>\n                        }\n                      />\n                    ))}\n                  </EgretMenu>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <Divider></Divider>\n\n          <Scrollbar\n            className=\"position-relative pt-16 mb-16\"\n            style={{ maxHeight: \"45vh\" }}\n          >\n            <div className=\"px-sm-24 pt-16\">\n              <div className=\"flex flex-middle mb-8\">\n                <Icon className=\"text-muted\">description</Icon>\n                <h6 className=\"m-0 ml-16 uppercase text-muted\">description</h6>\n              </div>\n              <div className=\"ml-40 mb-16 flex\">\n                <TextField\n                  className=\"text-muted\"\n                  onChange={this.handleChange}\n                  name=\"description\"\n                  value={description}\n                  variant=\"outlined\"\n                  fullWidth\n                  multiline\n                />\n              </div>\n\n              <div className=\"flex flex-space-between flex-middle mb-16\">\n                <div className=\"flex flex-middle\">\n                  <Icon className=\"text-muted\">attach_file</Icon>\n                  <h6 className=\"m-0 ml-16 uppercase text-muted\">\n                    attachments\n                  </h6>\n                </div>\n\n                <label htmlFor=\"upload-file\">\n                  <Button\n                    className=\"text-primary uppercase font-weight-500\"\n                    component=\"span\"\n                  >\n                    + add an attachment\n                  </Button>\n                </label>\n                <input\n                  className=\"display-none\"\n                  id=\"upload-file\"\n                  type=\"file\"\n                  multiple\n                />\n              </div>\n\n              <div className=\"ml-40 mb-16\">\n                <Grid container spacing={2}>\n                  {attachments.map((file, id) => (\n                    <Grid key={id} item lg={6} md={6} sm={12} xs={12}>\n                      <Card\n                        className=\"p-4 flex flex-middle bg-default h-100\"\n                        elevation={2}\n                      >\n                        <div className=\"flex flex-middle border-radius-8\">\n                          <img src={file.url} alt=\"image cover photo\" />\n                        </div>\n                        <div className=\"ml-16\">\n                          <h6 className=\"m-0 text-muted capitalize\">\n                            {file.name}\n                          </h6>\n                          <small className=\"text-muted text-small capitalize\">\n                            {file.size}\n                          </small>\n                        </div>\n                        <EgretMenu\n                          horizontalPosition=\"center\"\n                          menuButton={\n                            <IconButton className=\"ml-16\">\n                              <Icon>more_vert</Icon>\n                            </IconButton>\n                          }\n                        >\n                          <MenuItem\n                            className=\"flex flex-middle\"\n                            onClick={() => this.makeCoverPhoto(file.url)}\n                            style={{ minWidth: 165 }}\n                          >\n                            <Icon> insert_photo </Icon>\n                            <span className=\"pl-16\"> Make Cover </span>\n                          </MenuItem>\n                          <MenuItem\n                            onClick={() => this.removeAttachments(id)}\n                            className=\"flex flex-middle\"\n                            style={{ minWidth: 165 }}\n                          >\n                            <Icon> delete </Icon>\n                            <span className=\"pl-16\"> Remove </span>\n                          </MenuItem>\n                        </EgretMenu>\n                      </Card>\n                    </Grid>\n                  ))}\n                </Grid>\n              </div>\n            </div>\n\n            <Divider className=\"mb-16\"></Divider>\n\n            <div className=\"px-sm-24\">\n              <div className=\"flex flex-middle mb-16\">\n                <Icon className=\"text-muted\">message</Icon>\n                <h6 className=\"m-0 ml-16 uppercase text-muted\">comments</h6>\n              </div>\n              <div className=\"comments ml-40\">\n                {comments.map(comment => {\n                  let user = memberList.find(user => user.id === comment.uid);\n                  return (\n                    <div className=\"mb-16\" key={comment.id}>\n                      <div className=\"flex flex-middle mb-8\">\n                        <Avatar className=\"avatar size-36\" src={user.avatar} />\n                        <div className=\"ml-12\">\n                          <h6 className=\"m-0\">{user.name}</h6>\n                          <small>\n                            {getTimeDifference(new Date(comment.time))} ago\n                          </small>\n                        </div>\n                      </div>\n                      <p className=\"m-0 text-muted\">{comment.text}</p>\n                    </div>\n                  );\n                })}\n\n                <div className=\"flex flex-middle mb-16\">\n                  <Avatar className=\"avatar size-36\" src={user.photoURL} />\n                  <div className=\"flex-grow-1 flex\">\n                    <TextField\n                      className=\"ml-12 text-muted\"\n                      onChange={this.handleChange}\n                      onKeyDown={this.handleChange}\n                      variant=\"outlined\"\n                      name=\"commentText\"\n                      value={commentText}\n                      fullWidth\n                      inputProps={{\n                        style: {\n                          padding: \"10px\"\n                        }\n                      }}\n                    />\n                  </div>\n                  <Button onClick={this.sendComment}>Send</Button>\n                </div>\n              </div>\n            </div>\n          </Scrollbar>\n\n          <div className=\"px-sm-24 mb-12 flex flex-end\">\n            <Button className=\"mr-12\" onClick={this.closeDialog}>\n              Cancel\n            </Button>\n            <Button\n              onClick={this.handleSave}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Save\n            </Button>\n          </div>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  updateCardInList: PropTypes.func.isRequired,\n  board: state.scrumboard.board,\n  memberList: state.scrumboard.memberList,\n  labelList: state.scrumboard.labelList,\n  user: state.user\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateCardInList }\n)(CardEditorDialog);\n"]},"metadata":{},"sourceType":"module"}