{"ast":null,"code":"var _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\ecommerce\\\\Shop.jsx\";\nimport React, { Component } from \"react\";\nimport { EgretSidenavContainer, EgretSidenav, EgretSidenavContent } from \"egret\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getProductList, getCategoryList, getRatingList, getBrandList } from \"app/redux/actions/EcommerceActions\";\nimport * as _ from \"lodash\";\nimport ShopSidenav from \"./ShopSidenav\";\nimport ShopContainer from \"./ShopContainer\";\n\nclass Shop extends Component {\n  constructor(...args) {\n    super(...args);\n    this.categories = [];\n    this.brands = [];\n    this.state = {\n      open: true,\n      view: \"grid\",\n      page: 0,\n      rowsPerPage: 6,\n      orderBy: \"false\",\n      propsReceived: false,\n      sliderRange: [0, 100],\n      query: \"\",\n      multilevel: \"all\",\n      shipping: false,\n      categories: [],\n      brands: []\n    };\n\n    this.toggleSidenav = () => {\n      this.setState({\n        open: !this.state.open\n      });\n    };\n\n    this.handleSliderChange = (event, newValue) => {\n      this.setState({\n        sliderRange: newValue\n      });\n      this.filterProductOnPriceRange(newValue[0] * 10, newValue[1] * 10);\n    };\n\n    this.setRowsPerPage = event => {\n      this.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n\n    this.handleChangePage = (event, newPage) => {\n      this.setState({\n        page: newPage\n      });\n    };\n\n    this.toggleView = view => this.setState({\n      view\n    });\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSearch = query => {\n      let _this$props$productLi = this.props.productList,\n          productList = _this$props$productLi === void 0 ? [] : _this$props$productLi;\n      this.setState({\n        query\n      });\n\n      if (this.debounceTimer) {\n        clearTimeout(this.debounceTimer);\n      }\n\n      this.debounceTimer = setTimeout(() => {\n        this.setState({\n          productList: productList.filter(product => product.title.toLowerCase().match(this.state.query.toLowerCase()))\n        });\n      }, 250);\n    };\n\n    this.handleMultilevelChange = event => {\n      let eventValue = event.target.value;\n      let range = event.target.value.split(\",\");\n      let _this$props$productLi2 = this.props.productList,\n          productList = _this$props$productLi2 === void 0 ? [] : _this$props$productLi2;\n\n      if (eventValue === \"all\") {\n        this.setState({\n          multilevel: eventValue,\n          productList\n        });\n        return;\n      }\n\n      this.setState({\n        multilevel: eventValue\n      });\n      range = range.map(value => parseInt(value));\n\n      if (range.length === 2) {\n        this.filterProductOnPriceRange(range[0], range[1]);\n      } else {\n        this.setState({\n          productList: productList.filter(product => product.price >= range[0])\n        });\n      }\n    };\n\n    this.handleCategoryChange = event => {\n      let target = event.target;\n      let categories = this.state.categories;\n      let tempCategories;\n\n      if (target.checked) {\n        tempCategories = [...categories, target.name];\n        this.setState({\n          categories: tempCategories,\n          productList: this.filterProductOnProperty(\"category\", tempCategories)\n        });\n      } else {\n        tempCategories = categories.filter(item => item !== target.name);\n        this.setState({\n          categories: tempCategories,\n          productList: this.filterProductOnProperty(\"category\", tempCategories)\n        });\n      }\n    };\n\n    this.handleBrandChange = event => {\n      let target = event.target;\n      let brands = this.state.brands;\n      let tempBrands;\n\n      if (target.checked) {\n        tempBrands = [...brands, target.name];\n        this.setState({\n          brands: tempBrands,\n          productList: this.filterProductOnProperty(\"brand\", tempBrands)\n        });\n      } else {\n        tempBrands = brands.filter(item => item !== target.name);\n        this.setState({\n          brands: tempBrands,\n          productList: this.filterProductOnProperty(\"brand\", tempBrands)\n        });\n      }\n    };\n\n    this.handleRatingClick = rate => {\n      this.setState({\n        productList: this.filterProductOnProperty(\"rating\", [rate])\n      });\n    };\n\n    this.handleFreeShippingClick = () => {\n      let shippingStatus = !this.state.shipping;\n      this.setState({\n        shipping: shippingStatus,\n        productList: this.filterProductOnProperty(\"freeShipping\", [shippingStatus])\n      });\n    };\n\n    this.filterProductOnProperty = (property, value = []) => {\n      let _this$props$productLi3 = this.props.productList,\n          productList = _this$props$productLi3 === void 0 ? [] : _this$props$productLi3;\n\n      if (value.length === 0) {\n        return productList;\n      }\n\n      return productList.filter(product => value.includes(product[property]));\n    };\n\n    this.filterProductOnPriceRange = (lowestPrice, highestPrice) => {\n      let _this$props$productLi4 = this.props.productList,\n          productList = _this$props$productLi4 === void 0 ? [] : _this$props$productLi4;\n      this.setState({\n        productList: productList.filter(product => product.price >= lowestPrice && product.price <= highestPrice)\n      });\n    };\n\n    this.handleClearAllFilter = () => {\n      this.setState({\n        sliderRange: [0, 100],\n        query: \"\",\n        multilevel: \"all\",\n        shipping: false,\n        categories: [],\n        brands: [],\n        productList: this.props.productList\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getProductList();\n    this.props.getCategoryList();\n    this.props.getRatingList();\n    this.props.getBrandList();\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.debounceTimer);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let _nextProps$productLis = nextProps.productList,\n        productList = _nextProps$productLis === void 0 ? [] : _nextProps$productLis;\n\n    if (prevState.propsReceived) {\n      return {};\n    } else if (!prevState.propsReceived && productList.length > 0) return {\n      propsReceived: true,\n      productList\n    };else return {};\n  }\n\n  render() {\n    let _this$state = this.state,\n        _this$state$productLi = _this$state.productList,\n        productList = _this$state$productLi === void 0 ? [] : _this$state$productLi,\n        brands = _this$state.brands,\n        categories = _this$state.categories,\n        sliderRange = _this$state.sliderRange,\n        view = _this$state.view,\n        page = _this$state.page,\n        rowsPerPage = _this$state.rowsPerPage,\n        orderBy = _this$state.orderBy,\n        query = _this$state.query,\n        multilevel = _this$state.multilevel,\n        shipping = _this$state.shipping;\n    let _this$props = this.props,\n        _this$props$categoryL = _this$props.categoryList,\n        categoryList = _this$props$categoryL === void 0 ? [] : _this$props$categoryL,\n        _this$props$ratingLis = _this$props.ratingList,\n        ratingList = _this$props$ratingLis === void 0 ? [] : _this$props$ratingLis,\n        _this$props$brandList = _this$props.brandList,\n        brandList = _this$props$brandList === void 0 ? [] : _this$props$brandList;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop m-sm-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(EgretSidenavContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(EgretSidenav, {\n      width: \"288px\",\n      open: this.state.open,\n      toggleSidenav: this.toggleSidenav,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ShopSidenav, {\n      query: query,\n      categories: categories,\n      brands: brands,\n      multilevel: multilevel,\n      categoryList: categoryList,\n      brandList: brandList,\n      ratingList: ratingList,\n      shipping: shipping,\n      sliderRange: sliderRange,\n      toggleSidenav: this.toggleSidenav,\n      handleSearch: this.handleSearch,\n      handleMultilevelChange: this.handleMultilevelChange,\n      handleSliderChange: this.handleSliderChange,\n      handleCategoryChange: this.handleCategoryChange,\n      handleBrandChange: this.handleBrandChange,\n      handleRatingClick: this.handleRatingClick,\n      handleFreeShippingClick: this.handleFreeShippingClick,\n      handleClearAllFilter: this.handleClearAllFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(EgretSidenavContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ShopContainer, {\n      orderBy: orderBy,\n      view: view,\n      productList: productList,\n      page: page,\n      rowsPerPage: rowsPerPage,\n      toggleView: this.toggleView,\n      toggleSidenav: this.toggleSidenav,\n      handleChange: this.handleChange,\n      handleChangePage: this.handleChangePage,\n      setRowsPerPage: this.setRowsPerPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  getProductList: PropTypes.func.isRequired,\n  getRatingList: PropTypes.func.isRequired,\n  getBrandList: PropTypes.func.isRequired,\n  productList: state.ecommerce.productList,\n  categoryList: state.ecommerce.categoryList,\n  ratingList: state.ecommerce.ratingList,\n  brandList: state.ecommerce.brandList\n});\n\nexport default connect(mapStateToProps, {\n  getProductList,\n  getCategoryList,\n  getRatingList,\n  getBrandList\n})(Shop);","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/ecommerce/Shop.jsx"],"names":["React","Component","EgretSidenavContainer","EgretSidenav","EgretSidenavContent","connect","PropTypes","getProductList","getCategoryList","getRatingList","getBrandList","_","ShopSidenav","ShopContainer","Shop","categories","brands","state","open","view","page","rowsPerPage","orderBy","propsReceived","sliderRange","query","multilevel","shipping","toggleSidenav","setState","handleSliderChange","event","newValue","filterProductOnPriceRange","setRowsPerPage","target","value","handleChangePage","newPage","toggleView","handleChange","name","handleSearch","props","productList","debounceTimer","clearTimeout","setTimeout","filter","product","title","toLowerCase","match","handleMultilevelChange","eventValue","range","split","map","parseInt","length","price","handleCategoryChange","tempCategories","checked","filterProductOnProperty","item","handleBrandChange","tempBrands","handleRatingClick","rate","handleFreeShippingClick","shippingStatus","property","includes","lowestPrice","highestPrice","handleClearAllFilter","componentDidMount","componentWillUnmount","getDerivedStateFromProps","nextProps","prevState","render","categoryList","ratingList","brandList","mapStateToProps","func","isRequired","ecommerce"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,qBADF,EAEEC,YAFF,EAGEC,mBAHF,QAIO,OAJP;AAMA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,cADF,EAEEC,eAFF,EAGEC,aAHF,EAIEC,YAJF,QAKO,oCALP;AAOA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,IAAN,SAAmBb,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAE3Bc,UAF2B,GAEd,EAFc;AAAA,SAG3BC,MAH2B,GAGlB,EAHkB;AAAA,SAK3BC,KAL2B,GAKnB;AACNC,MAAAA,IAAI,EAAE,IADA;AAENC,MAAAA,IAAI,EAAE,MAFA;AAGNC,MAAAA,IAAI,EAAE,CAHA;AAINC,MAAAA,WAAW,EAAE,CAJP;AAKNC,MAAAA,OAAO,EAAE,OALH;AAMNC,MAAAA,aAAa,EAAE,KANT;AAONC,MAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,GAAJ,CAPP;AAQNC,MAAAA,KAAK,EAAE,EARD;AASNC,MAAAA,UAAU,EAAE,KATN;AAUNC,MAAAA,QAAQ,EAAE,KAVJ;AAWNZ,MAAAA,UAAU,EAAE,EAXN;AAYNC,MAAAA,MAAM,EAAE;AAZF,KALmB;;AAAA,SAoB3BY,aApB2B,GAoBX,MAAM;AACpB,WAAKC,QAAL,CAAc;AAAEX,QAAAA,IAAI,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAApB,OAAd;AACD,KAtB0B;;AAAA,SAwB3BY,kBAxB2B,GAwBN,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxC,WAAKH,QAAL,CAAc;AAAEL,QAAAA,WAAW,EAAEQ;AAAf,OAAd;AACA,WAAKC,yBAAL,CAA+BD,QAAQ,CAAC,CAAD,CAAR,GAAc,EAA7C,EAAiDA,QAAQ,CAAC,CAAD,CAAR,GAAc,EAA/D;AACD,KA3B0B;;AAAA,SA6B3BE,cA7B2B,GA6BVH,KAAK,IAAI;AACxB,WAAKF,QAAL,CAAc;AAAER,QAAAA,WAAW,EAAEU,KAAK,CAACI,MAAN,CAAaC;AAA5B,OAAd;AACD,KA/B0B;;AAAA,SAiC3BC,gBAjC2B,GAiCR,CAACN,KAAD,EAAQO,OAAR,KAAoB;AACrC,WAAKT,QAAL,CAAc;AAAET,QAAAA,IAAI,EAAEkB;AAAR,OAAd;AACD,KAnC0B;;AAAA,SAqC3BC,UArC2B,GAqCdpB,IAAI,IAAI,KAAKU,QAAL,CAAc;AAAEV,MAAAA;AAAF,KAAd,CArCM;;AAAA,SAuC3BqB,YAvC2B,GAuCZT,KAAK,IAAI;AACtB,WAAKF,QAAL,CAAc;AAAE,SAACE,KAAK,CAACI,MAAN,CAAaM,IAAd,GAAqBV,KAAK,CAACI,MAAN,CAAaC;AAApC,OAAd;AACD,KAzC0B;;AAAA,SA2C3BM,YA3C2B,GA2CZjB,KAAK,IAAI;AAAA,kCACK,KAAKkB,KADV,CAChBC,WADgB;AAAA,UAChBA,WADgB,sCACF,EADE;AAGtB,WAAKf,QAAL,CAAc;AAAEJ,QAAAA;AAAF,OAAd;;AAEA,UAAI,KAAKoB,aAAT,EAAwB;AACtBC,QAAAA,YAAY,CAAC,KAAKD,aAAN,CAAZ;AACD;;AAED,WAAKA,aAAL,GAAqBE,UAAU,CAAC,MAAM;AACpC,aAAKlB,QAAL,CAAc;AACZe,UAAAA,WAAW,EAAEA,WAAW,CAACI,MAAZ,CAAmBC,OAAO,IACrCA,OAAO,CAACC,KAAR,CAAcC,WAAd,GAA4BC,KAA5B,CAAkC,KAAKnC,KAAL,CAAWQ,KAAX,CAAiB0B,WAAjB,EAAlC,CADW;AADD,SAAd;AAKD,OAN8B,EAM5B,GAN4B,CAA/B;AAOD,KA3D0B;;AAAA,SA6D3BE,sBA7D2B,GA6DFtB,KAAK,IAAI;AAChC,UAAIuB,UAAU,GAAGvB,KAAK,CAACI,MAAN,CAAaC,KAA9B;AACA,UAAImB,KAAK,GAAGxB,KAAK,CAACI,MAAN,CAAaC,KAAb,CAAmBoB,KAAnB,CAAyB,GAAzB,CAAZ;AAFgC,mCAGL,KAAKb,KAHA,CAG1BC,WAH0B;AAAA,UAG1BA,WAH0B,uCAGZ,EAHY;;AAKhC,UAAIU,UAAU,KAAK,KAAnB,EAA0B;AACxB,aAAKzB,QAAL,CAAc;AAAEH,UAAAA,UAAU,EAAE4B,UAAd;AAA0BV,UAAAA;AAA1B,SAAd;AACA;AACD;;AAED,WAAKf,QAAL,CAAc;AAAEH,QAAAA,UAAU,EAAE4B;AAAd,OAAd;AAEAC,MAAAA,KAAK,GAAGA,KAAK,CAACE,GAAN,CAAUrB,KAAK,IAAIsB,QAAQ,CAACtB,KAAD,CAA3B,CAAR;;AAEA,UAAImB,KAAK,CAACI,MAAN,KAAiB,CAArB,EAAwB;AACtB,aAAK1B,yBAAL,CAA+BsB,KAAK,CAAC,CAAD,CAApC,EAAyCA,KAAK,CAAC,CAAD,CAA9C;AACD,OAFD,MAEO;AACL,aAAK1B,QAAL,CAAc;AACZe,UAAAA,WAAW,EAAEA,WAAW,CAACI,MAAZ,CAAmBC,OAAO,IAAIA,OAAO,CAACW,KAAR,IAAiBL,KAAK,CAAC,CAAD,CAApD;AADD,SAAd;AAGD;AACF,KAlF0B;;AAAA,SAoF3BM,oBApF2B,GAoFJ9B,KAAK,IAAI;AAC9B,UAAII,MAAM,GAAGJ,KAAK,CAACI,MAAnB;AAD8B,UAExBpB,UAFwB,GAET,KAAKE,KAFI,CAExBF,UAFwB;AAG9B,UAAI+C,cAAJ;;AACA,UAAI3B,MAAM,CAAC4B,OAAX,EAAoB;AAClBD,QAAAA,cAAc,GAAG,CAAC,GAAG/C,UAAJ,EAAgBoB,MAAM,CAACM,IAAvB,CAAjB;AACA,aAAKZ,QAAL,CAAc;AACZd,UAAAA,UAAU,EAAE+C,cADA;AAEZlB,UAAAA,WAAW,EAAE,KAAKoB,uBAAL,CAA6B,UAA7B,EAAyCF,cAAzC;AAFD,SAAd;AAID,OAND,MAMO;AACLA,QAAAA,cAAc,GAAG/C,UAAU,CAACiC,MAAX,CAAkBiB,IAAI,IAAIA,IAAI,KAAK9B,MAAM,CAACM,IAA1C,CAAjB;AACA,aAAKZ,QAAL,CAAc;AACZd,UAAAA,UAAU,EAAE+C,cADA;AAEZlB,UAAAA,WAAW,EAAE,KAAKoB,uBAAL,CAA6B,UAA7B,EAAyCF,cAAzC;AAFD,SAAd;AAID;AACF,KArG0B;;AAAA,SAuG3BI,iBAvG2B,GAuGPnC,KAAK,IAAI;AAC3B,UAAII,MAAM,GAAGJ,KAAK,CAACI,MAAnB;AAD2B,UAErBnB,MAFqB,GAEV,KAAKC,KAFK,CAErBD,MAFqB;AAG3B,UAAImD,UAAJ;;AACA,UAAIhC,MAAM,CAAC4B,OAAX,EAAoB;AAClBI,QAAAA,UAAU,GAAG,CAAC,GAAGnD,MAAJ,EAAYmB,MAAM,CAACM,IAAnB,CAAb;AACA,aAAKZ,QAAL,CAAc;AACZb,UAAAA,MAAM,EAAEmD,UADI;AAEZvB,UAAAA,WAAW,EAAE,KAAKoB,uBAAL,CAA6B,OAA7B,EAAsCG,UAAtC;AAFD,SAAd;AAID,OAND,MAMO;AACLA,QAAAA,UAAU,GAAGnD,MAAM,CAACgC,MAAP,CAAciB,IAAI,IAAIA,IAAI,KAAK9B,MAAM,CAACM,IAAtC,CAAb;AACA,aAAKZ,QAAL,CAAc;AACZb,UAAAA,MAAM,EAAEmD,UADI;AAEZvB,UAAAA,WAAW,EAAE,KAAKoB,uBAAL,CAA6B,OAA7B,EAAsCG,UAAtC;AAFD,SAAd;AAID;AACF,KAxH0B;;AAAA,SA0H3BC,iBA1H2B,GA0HPC,IAAI,IAAI;AAC1B,WAAKxC,QAAL,CAAc;AACZe,QAAAA,WAAW,EAAE,KAAKoB,uBAAL,CAA6B,QAA7B,EAAuC,CAACK,IAAD,CAAvC;AADD,OAAd;AAGD,KA9H0B;;AAAA,SAgI3BC,uBAhI2B,GAgID,MAAM;AAC9B,UAAIC,cAAc,GAAG,CAAC,KAAKtD,KAAL,CAAWU,QAAjC;AACA,WAAKE,QAAL,CAAc;AACZF,QAAAA,QAAQ,EAAE4C,cADE;AAEZ3B,QAAAA,WAAW,EAAE,KAAKoB,uBAAL,CAA6B,cAA7B,EAA6C,CACxDO,cADwD,CAA7C;AAFD,OAAd;AAMD,KAxI0B;;AAAA,SA0I3BP,uBA1I2B,GA0ID,CAACQ,QAAD,EAAWpC,KAAK,GAAG,EAAnB,KAA0B;AAAA,mCACvB,KAAKO,KADkB,CAC5CC,WAD4C;AAAA,UAC5CA,WAD4C,uCAC9B,EAD8B;;AAElD,UAAIR,KAAK,CAACuB,MAAN,KAAiB,CAArB,EAAwB;AACtB,eAAOf,WAAP;AACD;;AACD,aAAOA,WAAW,CAACI,MAAZ,CAAmBC,OAAO,IAAIb,KAAK,CAACqC,QAAN,CAAexB,OAAO,CAACuB,QAAD,CAAtB,CAA9B,CAAP;AACD,KAhJ0B;;AAAA,SAkJ3BvC,yBAlJ2B,GAkJC,CAACyC,WAAD,EAAcC,YAAd,KAA+B;AAAA,mCAC9B,KAAKhC,KADyB,CACnDC,WADmD;AAAA,UACnDA,WADmD,uCACrC,EADqC;AAEzD,WAAKf,QAAL,CAAc;AACZe,QAAAA,WAAW,EAAEA,WAAW,CAACI,MAAZ,CACXC,OAAO,IAAIA,OAAO,CAACW,KAAR,IAAiBc,WAAjB,IAAgCzB,OAAO,CAACW,KAAR,IAAiBe,YADjD;AADD,OAAd;AAKD,KAzJ0B;;AAAA,SA2J3BC,oBA3J2B,GA2JJ,MAAM;AAC3B,WAAK/C,QAAL,CAAc;AACZL,QAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,GAAJ,CADD;AAEZC,QAAAA,KAAK,EAAE,EAFK;AAGZC,QAAAA,UAAU,EAAE,KAHA;AAIZC,QAAAA,QAAQ,EAAE,KAJE;AAKZZ,QAAAA,UAAU,EAAE,EALA;AAMZC,QAAAA,MAAM,EAAE,EANI;AAOZ4B,QAAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC;AAPZ,OAAd;AASD,KArK0B;AAAA;;AAuK3BiC,EAAAA,iBAAiB,GAAG;AAClB,SAAKlC,KAAL,CAAWpC,cAAX;AACA,SAAKoC,KAAL,CAAWnC,eAAX;AACA,SAAKmC,KAAL,CAAWlC,aAAX;AACA,SAAKkC,KAAL,CAAWjC,YAAX;AACD;;AAEDoE,EAAAA,oBAAoB,GAAG;AACrBhC,IAAAA,YAAY,CAAC,KAAKD,aAAN,CAAZ;AACD;;AAED,SAAOkC,wBAAP,CAAgCC,SAAhC,EAA2CC,SAA3C,EAAsD;AAAA,gCACzBD,SADyB,CAC9CpC,WAD8C;AAAA,QAC9CA,WAD8C,sCAChC,EADgC;;AAEpD,QAAIqC,SAAS,CAAC1D,aAAd,EAA6B;AAC3B,aAAO,EAAP;AACD,KAFD,MAEO,IAAI,CAAC0D,SAAS,CAAC1D,aAAX,IAA4BqB,WAAW,CAACe,MAAZ,GAAqB,CAArD,EACL,OAAO;AACLpC,MAAAA,aAAa,EAAE,IADV;AAELqB,MAAAA;AAFK,KAAP,CADK,KAKF,OAAO,EAAP;AACN;;AAEDsC,EAAAA,MAAM,GAAG;AAAA,sBAaH,KAAKjE,KAbF;AAAA,4CAEL2B,WAFK;AAAA,QAELA,WAFK,sCAES,EAFT;AAAA,QAGL5B,MAHK,eAGLA,MAHK;AAAA,QAILD,UAJK,eAILA,UAJK;AAAA,QAKLS,WALK,eAKLA,WALK;AAAA,QAMLL,IANK,eAMLA,IANK;AAAA,QAOLC,IAPK,eAOLA,IAPK;AAAA,QAQLC,WARK,eAQLA,WARK;AAAA,QASLC,OATK,eASLA,OATK;AAAA,QAULG,KAVK,eAULA,KAVK;AAAA,QAWLC,UAXK,eAWLA,UAXK;AAAA,QAYLC,QAZK,eAYLA,QAZK;AAAA,sBAesD,KAAKgB,KAf3D;AAAA,4CAeDwC,YAfC;AAAA,QAeDA,YAfC,sCAec,EAfd;AAAA,4CAekBC,UAflB;AAAA,QAekBA,UAflB,sCAe+B,EAf/B;AAAA,4CAemCC,SAfnC;AAAA,QAemCA,SAfnC,sCAe+C,EAf/C;AAiBP,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,IAAI,EAAE,KAAKpE,KAAL,CAAWC,IAFnB;AAGE,MAAA,aAAa,EAAE,KAAKU,aAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,WAAD;AACE,MAAA,KAAK,EAAEH,KADT;AAEE,MAAA,UAAU,EAAEV,UAFd;AAGE,MAAA,MAAM,EAAEC,MAHV;AAIE,MAAA,UAAU,EAAEU,UAJd;AAKE,MAAA,YAAY,EAAEyD,YALhB;AAME,MAAA,SAAS,EAAEE,SANb;AAOE,MAAA,UAAU,EAAED,UAPd;AAQE,MAAA,QAAQ,EAAEzD,QARZ;AASE,MAAA,WAAW,EAAEH,WATf;AAUE,MAAA,aAAa,EAAE,KAAKI,aAVtB;AAWE,MAAA,YAAY,EAAE,KAAKc,YAXrB;AAYE,MAAA,sBAAsB,EAAE,KAAKW,sBAZ/B;AAaE,MAAA,kBAAkB,EAAE,KAAKvB,kBAb3B;AAcE,MAAA,oBAAoB,EAAE,KAAK+B,oBAd7B;AAeE,MAAA,iBAAiB,EAAE,KAAKK,iBAf1B;AAgBE,MAAA,iBAAiB,EAAE,KAAKE,iBAhB1B;AAiBE,MAAA,uBAAuB,EAAE,KAAKE,uBAjBhC;AAkBE,MAAA,oBAAoB,EAAE,KAAKM,oBAlB7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,eA2BE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AACE,MAAA,OAAO,EAAEtD,OADX;AAEE,MAAA,IAAI,EAAEH,IAFR;AAGE,MAAA,WAAW,EAAEyB,WAHf;AAIE,MAAA,IAAI,EAAExB,IAJR;AAKE,MAAA,WAAW,EAAEC,WALf;AAME,MAAA,UAAU,EAAE,KAAKkB,UANnB;AAOE,MAAA,aAAa,EAAE,KAAKX,aAPtB;AAQE,MAAA,YAAY,EAAE,KAAKY,YARrB;AASE,MAAA,gBAAgB,EAAE,KAAKH,gBATzB;AAUE,MAAA,cAAc,EAAE,KAAKH,cAVvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA3BF,CADF,CADF;AA8CD;;AA7P0B;;AAgQ7B,MAAMoD,eAAe,GAAGrE,KAAK,KAAK;AAChCV,EAAAA,cAAc,EAAED,SAAS,CAACiF,IAAV,CAAeC,UADC;AAEhC/E,EAAAA,aAAa,EAAEH,SAAS,CAACiF,IAAV,CAAeC,UAFE;AAGhC9E,EAAAA,YAAY,EAAEJ,SAAS,CAACiF,IAAV,CAAeC,UAHG;AAIhC5C,EAAAA,WAAW,EAAE3B,KAAK,CAACwE,SAAN,CAAgB7C,WAJG;AAKhCuC,EAAAA,YAAY,EAAElE,KAAK,CAACwE,SAAN,CAAgBN,YALE;AAMhCC,EAAAA,UAAU,EAAEnE,KAAK,CAACwE,SAAN,CAAgBL,UANI;AAOhCC,EAAAA,SAAS,EAAEpE,KAAK,CAACwE,SAAN,CAAgBJ;AAPK,CAAL,CAA7B;;AAUA,eAAehF,OAAO,CACpBiF,eADoB,EAEpB;AAAE/E,EAAAA,cAAF;AAAkBC,EAAAA,eAAlB;AAAmCC,EAAAA,aAAnC;AAAkDC,EAAAA;AAAlD,CAFoB,CAAP,CAGbI,IAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  EgretSidenavContainer,\n  EgretSidenav,\n  EgretSidenavContent\n} from \"egret\";\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  getProductList,\n  getCategoryList,\n  getRatingList,\n  getBrandList\n} from \"app/redux/actions/EcommerceActions\";\n\nimport * as _ from \"lodash\";\nimport ShopSidenav from \"./ShopSidenav\";\nimport ShopContainer from \"./ShopContainer\";\n\nclass Shop extends Component {\n  debounceTimer;\n  categories = [];\n  brands = [];\n\n  state = {\n    open: true,\n    view: \"grid\",\n    page: 0,\n    rowsPerPage: 6,\n    orderBy: \"false\",\n    propsReceived: false,\n    sliderRange: [0, 100],\n    query: \"\",\n    multilevel: \"all\",\n    shipping: false,\n    categories: [],\n    brands: []\n  };\n\n  toggleSidenav = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  handleSliderChange = (event, newValue) => {\n    this.setState({ sliderRange: newValue });\n    this.filterProductOnPriceRange(newValue[0] * 10, newValue[1] * 10);\n  };\n\n  setRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  handleChangePage = (event, newPage) => {\n    this.setState({ page: newPage });\n  };\n\n  toggleView = view => this.setState({ view });\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSearch = query => {\n    let { productList = [] } = this.props;\n\n    this.setState({ query });\n\n    if (this.debounceTimer) {\n      clearTimeout(this.debounceTimer);\n    }\n\n    this.debounceTimer = setTimeout(() => {\n      this.setState({\n        productList: productList.filter(product =>\n          product.title.toLowerCase().match(this.state.query.toLowerCase())\n        )\n      });\n    }, 250);\n  };\n\n  handleMultilevelChange = event => {\n    let eventValue = event.target.value;\n    let range = event.target.value.split(\",\");\n    let { productList = [] } = this.props;\n\n    if (eventValue === \"all\") {\n      this.setState({ multilevel: eventValue, productList });\n      return;\n    }\n\n    this.setState({ multilevel: eventValue });\n\n    range = range.map(value => parseInt(value));\n\n    if (range.length === 2) {\n      this.filterProductOnPriceRange(range[0], range[1]);\n    } else {\n      this.setState({\n        productList: productList.filter(product => product.price >= range[0])\n      });\n    }\n  };\n\n  handleCategoryChange = event => {\n    let target = event.target;\n    let { categories } = this.state;\n    let tempCategories;\n    if (target.checked) {\n      tempCategories = [...categories, target.name];\n      this.setState({\n        categories: tempCategories,\n        productList: this.filterProductOnProperty(\"category\", tempCategories)\n      });\n    } else {\n      tempCategories = categories.filter(item => item !== target.name);\n      this.setState({\n        categories: tempCategories,\n        productList: this.filterProductOnProperty(\"category\", tempCategories)\n      });\n    }\n  };\n\n  handleBrandChange = event => {\n    let target = event.target;\n    let { brands } = this.state;\n    let tempBrands;\n    if (target.checked) {\n      tempBrands = [...brands, target.name];\n      this.setState({\n        brands: tempBrands,\n        productList: this.filterProductOnProperty(\"brand\", tempBrands)\n      });\n    } else {\n      tempBrands = brands.filter(item => item !== target.name);\n      this.setState({\n        brands: tempBrands,\n        productList: this.filterProductOnProperty(\"brand\", tempBrands)\n      });\n    }\n  };\n\n  handleRatingClick = rate => {\n    this.setState({\n      productList: this.filterProductOnProperty(\"rating\", [rate])\n    });\n  };\n\n  handleFreeShippingClick = () => {\n    let shippingStatus = !this.state.shipping;\n    this.setState({\n      shipping: shippingStatus,\n      productList: this.filterProductOnProperty(\"freeShipping\", [\n        shippingStatus\n      ])\n    });\n  };\n\n  filterProductOnProperty = (property, value = []) => {\n    let { productList = [] } = this.props;\n    if (value.length === 0) {\n      return productList;\n    }\n    return productList.filter(product => value.includes(product[property]));\n  };\n\n  filterProductOnPriceRange = (lowestPrice, highestPrice) => {\n    let { productList = [] } = this.props;\n    this.setState({\n      productList: productList.filter(\n        product => product.price >= lowestPrice && product.price <= highestPrice\n      )\n    });\n  };\n\n  handleClearAllFilter = () => {\n    this.setState({\n      sliderRange: [0, 100],\n      query: \"\",\n      multilevel: \"all\",\n      shipping: false,\n      categories: [],\n      brands: [],\n      productList: this.props.productList\n    });\n  };\n\n  componentDidMount() {\n    this.props.getProductList();\n    this.props.getCategoryList();\n    this.props.getRatingList();\n    this.props.getBrandList();\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.debounceTimer);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let { productList = [] } = nextProps;\n    if (prevState.propsReceived) {\n      return {};\n    } else if (!prevState.propsReceived && productList.length > 0)\n      return {\n        propsReceived: true,\n        productList\n      };\n    else return {};\n  }\n\n  render() {\n    let {\n      productList = [],\n      brands,\n      categories,\n      sliderRange,\n      view,\n      page,\n      rowsPerPage,\n      orderBy,\n      query,\n      multilevel,\n      shipping\n    } = this.state;\n\n    let { categoryList = [], ratingList = [], brandList = [] } = this.props;\n\n    return (\n      <div className=\"shop m-sm-30\">\n        <EgretSidenavContainer>\n          <EgretSidenav\n            width=\"288px\"\n            open={this.state.open}\n            toggleSidenav={this.toggleSidenav}\n          >\n            <ShopSidenav\n              query={query}\n              categories={categories}\n              brands={brands}\n              multilevel={multilevel}\n              categoryList={categoryList}\n              brandList={brandList}\n              ratingList={ratingList}\n              shipping={shipping}\n              sliderRange={sliderRange}\n              toggleSidenav={this.toggleSidenav}\n              handleSearch={this.handleSearch}\n              handleMultilevelChange={this.handleMultilevelChange}\n              handleSliderChange={this.handleSliderChange}\n              handleCategoryChange={this.handleCategoryChange}\n              handleBrandChange={this.handleBrandChange}\n              handleRatingClick={this.handleRatingClick}\n              handleFreeShippingClick={this.handleFreeShippingClick}\n              handleClearAllFilter={this.handleClearAllFilter}\n            ></ShopSidenav>\n          </EgretSidenav>\n          <EgretSidenavContent>\n            <ShopContainer\n              orderBy={orderBy}\n              view={view}\n              productList={productList}\n              page={page}\n              rowsPerPage={rowsPerPage}\n              toggleView={this.toggleView}\n              toggleSidenav={this.toggleSidenav}\n              handleChange={this.handleChange}\n              handleChangePage={this.handleChangePage}\n              setRowsPerPage={this.setRowsPerPage}\n            ></ShopContainer>\n          </EgretSidenavContent>\n        </EgretSidenavContainer>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  getProductList: PropTypes.func.isRequired,\n  getRatingList: PropTypes.func.isRequired,\n  getBrandList: PropTypes.func.isRequired,\n  productList: state.ecommerce.productList,\n  categoryList: state.ecommerce.categoryList,\n  ratingList: state.ecommerce.ratingList,\n  brandList: state.ecommerce.brandList\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProductList, getCategoryList, getRatingList, getBrandList }\n)(Shop);\n"]},"metadata":{},"sourceType":"module"}