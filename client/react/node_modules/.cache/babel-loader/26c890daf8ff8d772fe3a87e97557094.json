{"ast":null,"code":"var _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\Employee1\\\\ExportReactCSV1.js\";\nimport React from \"react\";\nimport EmployeeService1 from \"../Employee1/EmployeeService1\";\nimport { IconButton, Table, TableHead, TableBody, TableRow, TableCell, Icon, TablePagination, Button, Card, TextField, InputAdornment, Grid } from \"@material-ui/core\";\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nexport const ExportReactCSV = ({\n  csvData,\n  fileName\n}) => {\n  const styleButton = {\n    height: \"40px\",\n    position: \"relative\",\n    left: \"500px\"\n  };\n  const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n  const fileExtension = '.xlsx';\n\n  const exportToCSV = (csvData, fileName) => {\n    const ws = XLSX.utils.json_to_sheet(csvData);\n    const wb = {\n      Sheets: {\n        'data': ws\n      },\n      SheetNames: ['data']\n    };\n    /*const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });*/\n\n    const data = new Blob([excelBuffer], {\n      type: fileType\n    });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return /*#__PURE__*/React.createElement(Button, {\n    onClick: e => exportFileExcell1(csvData, fileName),\n    style: styleButton,\n    className: \"mb-16\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"T\\u1EA3i xu\\u1ED1ng Excell\");\n};","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/Employee1/ExportReactCSV1.js"],"names":["React","EmployeeService1","IconButton","Table","TableHead","TableBody","TableRow","TableCell","Icon","TablePagination","Button","Card","TextField","InputAdornment","Grid","FileSaver","XLSX","ExportReactCSV","csvData","fileName","styleButton","height","position","left","fileType","fileExtension","exportToCSV","ws","utils","json_to_sheet","wb","Sheets","SheetNames","data","Blob","excelBuffer","type","saveAs","e","exportFileExcell1"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,SACIC,UADJ,EAEIC,KAFJ,EAGIC,SAHJ,EAIIC,SAJJ,EAKIC,QALJ,EAMIC,SANJ,EAOIC,IAPJ,EAQIC,eARJ,EASIC,MATJ,EAUIC,IAVJ,EAWIC,SAXJ,EAYIC,cAZJ,EAaIC,IAbJ,QAcS,mBAdT;AAeA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,OAAD;AAASC,EAAAA;AAAT,CAAD,KAAsB;AAChD,QAAMC,WAAW,GAAC;AACdC,IAAAA,MAAM,EAAC,MADO;AAEdC,IAAAA,QAAQ,EAAC,UAFK;AAGdC,IAAAA,IAAI,EAAC;AAHS,GAAlB;AAKA,QAAMC,QAAQ,GAAG,iFAAjB;AACA,QAAMC,aAAa,GAAG,OAAtB;;AAEA,QAAMC,WAAW,GAAG,CAACR,OAAD,EAAUC,QAAV,KAAuB;AACvC,UAAMQ,EAAE,GAAGX,IAAI,CAACY,KAAL,CAAWC,aAAX,CAAyBX,OAAzB,CAAX;AACA,UAAMY,EAAE,GAAG;AAAEC,MAAAA,MAAM,EAAE;AAAE,gBAAQJ;AAAV,OAAV;AAA0BK,MAAAA,UAAU,EAAE,CAAC,MAAD;AAAtC,KAAX;AACA;;AACA,UAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACC,WAAD,CAAT,EAAwB;AAACC,MAAAA,IAAI,EAAEZ;AAAP,KAAxB,CAAb;AACAT,IAAAA,SAAS,CAACsB,MAAV,CAAiBJ,IAAjB,EAAuBd,QAAQ,GAAGM,aAAlC;AACH,GAND;;AAQA,sBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAGa,CAAD,IAAKC,iBAAiB,CAACrB,OAAD,EAASC,QAAT,CAAvC;AACQ,IAAA,KAAK,EAAEC,WADf;AAEQ,IAAA,SAAS,EAAC,OAFlB;AAGQ,IAAA,OAAO,EAAC,WAHhB;AAIQ,IAAA,KAAK,EAAC,SAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ;AAQH,CAzBM","sourcesContent":["import React from \"react\";\r\nimport EmployeeService1 from \"../Employee1/EmployeeService1\";\r\nimport {\r\n    IconButton,\r\n    Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableRow,\r\n    TableCell,\r\n    Icon,\r\n    TablePagination,\r\n    Button,\r\n    Card,\r\n    TextField,\r\n    InputAdornment,\r\n    Grid,\r\n  } from \"@material-ui/core\";\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nexport const ExportReactCSV  =({csvData,fileName})=>{\r\n    const styleButton={\r\n        height:\"40px\", \r\n        position:\"relative\",\r\n        left:\"500px\"\r\n      };\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n\r\n    const exportToCSV = (csvData, fileName) => {\r\n        const ws = XLSX.utils.json_to_sheet(csvData);\r\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n        /*const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });*/\r\n        const data = new Blob([excelBuffer], {type: fileType});\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n    }\r\n\r\n    return(\r\n        <Button onClick={(e)=>exportFileExcell1(csvData,fileName)} \r\n                style={styleButton}\r\n                className=\"mb-16\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n        >Tải xuống Excell</Button>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}