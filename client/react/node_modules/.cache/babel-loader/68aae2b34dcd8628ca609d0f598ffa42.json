{"ast":null,"code":"import _objectSpread from \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\AdministrativeUnit\\\\AdministrativeUnitEditorDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid, FormControlLabel, Switch } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { getUserById, updateUser, addNewAdministrativeUnit, updateAdministrativeUnit } from \"./AdministrativeUnitService\";\nimport { generateRandomId } from \"utils\";\n\nclass AdministrativeUnitEditorDialog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      code: \"\",\n      level: 0,\n      isActive: false\n    };\n\n    this.handleChange = (event, source) => {\n      event.persist();\n\n      if (source === \"switch\") {\n        this.setState({\n          isActive: event.target.checked\n        });\n        return;\n      }\n\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = () => {\n      let id = this.state.id;\n\n      if (id) {\n        updateAdministrativeUnit(_objectSpread({}, this.state)).then(() => {\n          this.props.handleOKEditClose();\n        });\n      } else {\n        addNewAdministrativeUnit(_objectSpread({\n          id: generateRandomId()\n        }, this.state)).then(() => {\n          this.props.handleOKEditClose();\n        });\n      }\n    };\n  }\n\n  componentWillMount() {\n    //getUserById(this.props.uid).then(data => this.setState({ ...data.data }));\n    let _this$props = this.props,\n        open = _this$props.open,\n        handleClose = _this$props.handleClose,\n        item = _this$props.item;\n    this.setState(item);\n  }\n\n  render() {\n    let _this$state = this.state,\n        id = _this$state.id,\n        name = _this$state.name,\n        code = _this$state.code,\n        level = _this$state.level,\n        isActive = _this$state.isActive;\n    let _this$props2 = this.props,\n        open = _this$props2.open,\n        handleClose = _this$props2.handleClose,\n        handleOKEditClose = _this$props2.handleOKEditClose;\n    return /*#__PURE__*/React.createElement(Dialog, {\n      onClose: handleClose,\n      open: open,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mb-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, \"Update Member\"), /*#__PURE__*/React.createElement(ValidatorForm, {\n      ref: \"form\",\n      onSubmit: this.handleFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: \"mb-16\",\n      container: true,\n      spacing: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"w-100 mb-16\",\n      label: \"Name\",\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"name\",\n      value: name,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"w-100 mb-16\",\n      label: \"Code\",\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"code\",\n      value: code,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"w-100 mb-16\",\n      label: \"Level\",\n      onChange: this.handleChange,\n      type: \"number\",\n      name: \"level\",\n      value: level,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      className: \"my-20\",\n      control: /*#__PURE__*/React.createElement(Switch, {\n        checked: isActive,\n        onChange: event => this.handleChange(event, \"switch\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }),\n      label: \"Active Customer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-space-between flex-middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.props.handleClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, \"Cancel\")))));\n  }\n\n}\n\nexport default AdministrativeUnitEditorDialog;","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/AdministrativeUnit/AdministrativeUnitEditorDialog.jsx"],"names":["React","Component","Dialog","Button","Grid","FormControlLabel","Switch","ValidatorForm","TextValidator","getUserById","updateUser","addNewAdministrativeUnit","updateAdministrativeUnit","generateRandomId","AdministrativeUnitEditorDialog","state","name","code","level","isActive","handleChange","event","source","persist","setState","target","checked","value","handleFormSubmit","id","then","props","handleOKEditClose","componentWillMount","open","handleClose","item","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Dialog,\n  Button,\n  Grid,\n  FormControlLabel,\n  Switch\n} from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { getUserById, updateUser, addNewAdministrativeUnit,updateAdministrativeUnit } from \"./AdministrativeUnitService\";\nimport { generateRandomId } from \"utils\";\n\nclass AdministrativeUnitEditorDialog extends Component {\n  state = {\n    name: \"\",\n    code: \"\",\n    level:0,\n    isActive: false\n  };\n\n  handleChange = (event, source) => {\n    event.persist();\n    if (source === \"switch\") {\n      this.setState({ isActive: event.target.checked });\n      return;\n    }\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleFormSubmit = () => {\n    let { id } = this.state;\n    if (id) {\n      updateAdministrativeUnit({\n        ...this.state\n      }).then(() => {\n        this.props.handleOKEditClose();\n      });\n    } else {\n      addNewAdministrativeUnit({\n        id: generateRandomId(),\n        ...this.state\n      }).then(() => {\n        this.props.handleOKEditClose();\n      });\n    }\n  };\n\n  componentWillMount() {\n    //getUserById(this.props.uid).then(data => this.setState({ ...data.data }));\n    let { open, handleClose,item } = this.props;\n    this.setState(item);\n  }\n\n  render() {\n    \n    let {\n      id,\n      name,\n      code,\n      level,\n      isActive\n    } = this.state;\n\n    let { open, handleClose,handleOKEditClose} = this.props;\n    return (\n      <Dialog onClose={handleClose} open={open}>\n        <div className=\"p-24\">\n          <h4 className=\"mb-20\">Update Member</h4>\n          <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\n            <Grid className=\"mb-16\" container spacing={4}>\n              <Grid item sm={6} xs={12}>\n                <TextValidator\n                  className=\"w-100 mb-16\"\n                  label=\"Name\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  validators={[\"required\"]}\n                  errorMessages={[\"this field is required\"]}\n                />\n                <TextValidator\n                  className=\"w-100 mb-16\"\n                  label=\"Code\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"code\"\n                  value={code}\n                  validators={[\"required\"]}\n                  errorMessages={[\"this field is required\"]}\n                />\n                <TextValidator\n                  className=\"w-100 mb-16\"\n                  label=\"Level\"\n                  onChange={this.handleChange}\n                  type=\"number\"\n                  name=\"level\"\n                  value={level}\n                  validators={[\"required\"]}\n                  errorMessages={[\"this field is required\"]}\n                />\n              </Grid>\n              <Grid>\n                <FormControlLabel\n                  className=\"my-20\"\n                  control={\n                    <Switch\n                      checked={isActive}\n                      onChange={event => this.handleChange(event, \"switch\")}\n                    />\n                  }\n                  label=\"Active Customer\"\n                />\n              </Grid>\n            </Grid>\n\n            <div className=\"flex flex-space-between flex-middle\">\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Save\n              </Button>\n              <Button onClick={() => this.props.handleClose()}>Cancel</Button>\n            </div>\n          </ValidatorForm>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default AdministrativeUnitEditorDialog;\n"]},"metadata":{},"sourceType":"module"}