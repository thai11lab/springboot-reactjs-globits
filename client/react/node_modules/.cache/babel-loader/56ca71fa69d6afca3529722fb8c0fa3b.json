{"ast":null,"code":"import _objectSpread from \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _createForOfIteratorHelper from \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nvar _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\forms\\\\UploadForm.jsx\";\nimport React, { Component } from \"react\";\nimport { Breadcrumb, SimpleCard, EgretProgressBar } from \"egret\";\nimport { Fab, Icon, Card, Grid, Divider, Button } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport ConstantList from \"../../appConfig\";\n\nclass UploadForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dragClass: \"\",\n      files: [],\n      statusList: [],\n      queProgress: 0\n    };\n\n    this.handleFileUploadOnSelect = event => {\n      let files = event.target.files;\n      this.fileUpload(files[0]).then(res => {\n        console.log(res.data);\n        alert(\"File uploaded successfully.\");\n      });\n    };\n\n    this.handleFileSelect = event => {\n      let files = event.target.files;\n      let list = [];\n\n      var _iterator = _createForOfIteratorHelper(files),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          const iterator = _step.value;\n          list.push({\n            file: iterator,\n            uploading: false,\n            error: false,\n            progress: 0\n          });\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.setState({\n        files: [...list]\n      });\n    };\n\n    this.handleDragOver = event => {\n      event.preventDefault();\n      this.setState({\n        dragClass: \"drag-shadow\"\n      });\n    };\n\n    this.handleDrop = event => {\n      event.preventDefault();\n      event.persist();\n      let files = event.dataTransfer.files;\n      let list = [];\n\n      var _iterator2 = _createForOfIteratorHelper(files),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          const iterator = _step2.value;\n          list.push({\n            file: iterator,\n            uploading: false,\n            error: false,\n            progress: 0\n          });\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      this.setState({\n        dragClass: \"\",\n        files: [...list]\n      });\n      return false;\n    };\n\n    this.handleDragStart = event => {\n      this.setState({\n        dragClass: \"drag-shadow\"\n      });\n    };\n\n    this.handleSingleRemove = index => {\n      let files = [...this.state.files];\n      files.splice(index, 1);\n      this.setState({\n        files: [...files]\n      });\n    };\n\n    this.handleAllRemove = () => {\n      this.setState({\n        files: []\n      });\n    };\n\n    this.uploadSingleFile = index => {\n      let allFiles = [...this.state.files];\n      let file = this.state.files[index];\n      this.fileUpload(file.file).then(res => {\n        console.log(res.data);\n        alert(\"File uploaded successfully.\");\n      });\n      allFiles[index] = _objectSpread(_objectSpread({}, file), {}, {\n        uploading: true,\n        error: false\n      });\n      this.setState({\n        files: [...allFiles]\n      });\n    };\n\n    this.uploadAllFile = () => {\n      let allFiles = [];\n      this.state.files.map(item => {\n        allFiles.push(_objectSpread(_objectSpread({}, item), {}, {\n          uploading: true,\n          error: false\n        }));\n        return item;\n      });\n      this.setState({\n        files: [...allFiles],\n        queProgress: 35\n      });\n    };\n\n    this.handleSingleCancel = index => {\n      let allFiles = [...this.state.files];\n      let file = this.state.files[index];\n      allFiles[index] = _objectSpread(_objectSpread({}, file), {}, {\n        uploading: false,\n        error: true\n      });\n      this.setState({\n        files: [...allFiles]\n      });\n    };\n\n    this.handleCancelAll = () => {\n      let allFiles = [];\n      this.state.files.map(item => {\n        allFiles.push(_objectSpread(_objectSpread({}, item), {}, {\n          uploading: false,\n          error: true\n        }));\n        return item;\n      });\n      this.setState({\n        files: [...allFiles],\n        queProgress: 0\n      });\n    };\n  }\n\n  fileUpload(file) {\n    const url = ConstantList.API_ENPOINT + \"/api/file/upload\";\n    let formData = new FormData();\n    formData.append('uploadfile', file); //Lưu ý tên 'uploadfile' phải trùng với tham số bên Server side\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    return axios.post(url, formData, config);\n  }\n\n  render() {\n    let _this$state = this.state,\n        dragClass = _this$state.dragClass,\n        files = _this$state.files,\n        queProgress = _this$state.queProgress;\n    let isEmpty = files.length === 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"upload-form m-sm-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-sm-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      routeSegments: [{\n        name: \"Others\",\n        path: \"/\"\n      }, {\n        name: \"Upload\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(SimpleCard, {\n      title: \"File Upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-wrap mb-24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"upload-single-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      className: \"capitalize\",\n      color: \"primary\",\n      component: \"span\",\n      variant: \"extended\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      className: \"pr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 19\n      }\n    }, \"cloud_upload\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }, \"Single File\")))), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"display-none\",\n      onChange: this.handleFileSelect,\n      id: \"upload-single-file\",\n      type: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"px-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"upload-single-file-on-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      className: \"capitalize\",\n      color: \"primary\",\n      component: \"span\",\n      variant: \"extended\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      className: \"pr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 19\n      }\n    }, \"cloud_upload\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 19\n      }\n    }, \"Upload File On Select\")))), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"display-none\",\n      onChange: this.handleFileUploadOnSelect,\n      id: \"upload-single-file-on-select\",\n      type: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"px-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"upload-multiple-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      className: \"capitalize\",\n      color: \"primary\",\n      component: \"span\",\n      variant: \"extended\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      className: \"pr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 19\n      }\n    }, \"cloud_upload\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 19\n      }\n    }, \"Multiple File\")))), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"display-none\",\n      onChange: this.handleFileSelect,\n      id: \"upload-multiple-file\",\n      type: \"file\",\n      multiple: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(dragClass, \" upload-drop-box mb-24 flex flex-center flex-middle\"),\n      onDragEnter: this.handleDragStart,\n      onDragOver: this.handleDragOver,\n      onDrop: this.handleDrop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }\n    }, isEmpty ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 15\n      }\n    }, \"Drop your files here\") : /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 15\n      }\n    }, files.length, \" file\", files.length > 1 ? \"s\" : \"\", \" selected...\")), /*#__PURE__*/React.createElement(Card, {\n      className: \"mb-24\",\n      elevation: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      justify: \"center\",\n      alignItems: \"center\",\n      direction: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 4,\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 1,\n      md: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }\n    }, \"Size\"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 2,\n      md: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }\n    }, \"Progress\"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 1,\n      md: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 4,\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }\n    }, \"Actions\"))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }\n    }), isEmpty && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"px-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 25\n      }\n    }, \"Que is empty\"), files.map((item, index) => {\n      let file = item.file,\n          uploading = item.uploading,\n          error = item.error,\n          progress = item.progress;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"px-16 py-16\",\n        key: file.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        justify: \"center\",\n        alignItems: \"center\",\n        direction: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }\n      }, file.name), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 1,\n        md: 1,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }\n      }, (file.size / 1024 / 1024).toFixed(1), \" MB\"), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 2,\n        md: 2,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(EgretProgressBar, {\n        value: progress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 1,\n        md: 1,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }\n      }, error && /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 33\n        }\n      }, \"error\")), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: uploading,\n        onClick: () => this.uploadSingleFile(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 25\n        }\n      }, \"Upload\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"mx-8\",\n        variant: \"contained\",\n        disabled: !uploading,\n        color: \"secondary\",\n        onClick: () => this.handleSingleCancel(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 25\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        className: \"bg-error\",\n        onClick: () => this.handleSingleRemove(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 25\n        }\n      }, \"Remove\")))));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 13\n      }\n    }, \"Queue progress:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"py-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(EgretProgressBar, {\n      value: queProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: isEmpty,\n      onClick: this.uploadAllFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 15\n      }\n    }, \"Upload All\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"mx-8\",\n      variant: \"contained\",\n      color: \"secondary\",\n      disabled: isEmpty,\n      onClick: this.handleCancelAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 15\n      }\n    }, \"Cancel All\"), !isEmpty && /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      className: \"bg-error\",\n      onClick: this.handleAllRemove,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }\n    }, \"Remove All\")))));\n  }\n\n}\n\nexport default UploadForm;","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/forms/UploadForm.jsx"],"names":["React","Component","Breadcrumb","SimpleCard","EgretProgressBar","Fab","Icon","Card","Grid","Divider","Button","axios","ConstantList","UploadForm","state","dragClass","files","statusList","queProgress","handleFileUploadOnSelect","event","target","fileUpload","then","res","console","log","data","alert","handleFileSelect","list","iterator","push","file","uploading","error","progress","setState","handleDragOver","preventDefault","handleDrop","persist","dataTransfer","handleDragStart","handleSingleRemove","index","splice","handleAllRemove","uploadSingleFile","allFiles","uploadAllFile","map","item","handleSingleCancel","handleCancelAll","url","API_ENPOINT","formData","FormData","append","config","headers","post","render","isEmpty","length","name","path","size","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,gBAAjC,QAAyD,OAAzD;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,OAAhC,EAAyCC,MAAzC,QAAuD,mBAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;AACA,MAAMC,UAAN,SAAyBZ,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCa,KADiC,GACzB;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,UAAU,EAAE,EAHN;AAINC,MAAAA,WAAW,EAAE;AAJP,KADyB;;AAAA,SAOjCC,wBAPiC,GAONC,KAAK,IAAI;AAClC,UAAIJ,KAAK,GAAGI,KAAK,CAACC,MAAN,CAAaL,KAAzB;AACA,WAAKM,UAAL,CAAgBN,KAAK,CAAC,CAAD,CAArB,EAA0BO,IAA1B,CAA+BC,GAAG,IAAI;AACpCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAC,QAAAA,KAAK,CAAC,6BAAD,CAAL;AACD,OAHD;AAID,KAbgC;;AAAA,SAcjCC,gBAdiC,GAcdT,KAAK,IAAI;AAC1B,UAAIJ,KAAK,GAAGI,KAAK,CAACC,MAAN,CAAaL,KAAzB;AACA,UAAIc,IAAI,GAAG,EAAX;;AAF0B,iDAIHd,KAJG;AAAA;;AAAA;AAI1B,4DAA8B;AAAA,gBAAnBe,QAAmB;AAC5BD,UAAAA,IAAI,CAACE,IAAL,CAAU;AACRC,YAAAA,IAAI,EAAEF,QADE;AAERG,YAAAA,SAAS,EAAE,KAFH;AAGRC,YAAAA,KAAK,EAAE,KAHC;AAIRC,YAAAA,QAAQ,EAAE;AAJF,WAAV;AAMD;AAXyB;AAAA;AAAA;AAAA;AAAA;;AAa1B,WAAKC,QAAL,CAAc;AACZrB,QAAAA,KAAK,EAAE,CAAC,GAAGc,IAAJ;AADK,OAAd;AAGD,KA9BgC;;AAAA,SAgCjCQ,cAhCiC,GAgChBlB,KAAK,IAAI;AACxBA,MAAAA,KAAK,CAACmB,cAAN;AACA,WAAKF,QAAL,CAAc;AAAEtB,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAnCgC;;AAAA,SAqCjCyB,UArCiC,GAqCpBpB,KAAK,IAAI;AACpBA,MAAAA,KAAK,CAACmB,cAAN;AACAnB,MAAAA,KAAK,CAACqB,OAAN;AAEA,UAAIzB,KAAK,GAAGI,KAAK,CAACsB,YAAN,CAAmB1B,KAA/B;AACA,UAAIc,IAAI,GAAG,EAAX;;AALoB,kDAOGd,KAPH;AAAA;;AAAA;AAOpB,+DAA8B;AAAA,gBAAnBe,QAAmB;AAC5BD,UAAAA,IAAI,CAACE,IAAL,CAAU;AACRC,YAAAA,IAAI,EAAEF,QADE;AAERG,YAAAA,SAAS,EAAE,KAFH;AAGRC,YAAAA,KAAK,EAAE,KAHC;AAIRC,YAAAA,QAAQ,EAAE;AAJF,WAAV;AAMD;AAdmB;AAAA;AAAA;AAAA;AAAA;;AAgBpB,WAAKC,QAAL,CAAc;AACZtB,QAAAA,SAAS,EAAE,EADC;AAEZC,QAAAA,KAAK,EAAE,CAAC,GAAGc,IAAJ;AAFK,OAAd;AAKA,aAAO,KAAP;AACD,KA3DgC;;AAAA,SA6DjCa,eA7DiC,GA6DfvB,KAAK,IAAI;AACzB,WAAKiB,QAAL,CAAc;AAAEtB,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KA/DgC;;AAAA,SAiEjC6B,kBAjEiC,GAiEZC,KAAK,IAAI;AAC5B,UAAI7B,KAAK,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,KAAf,CAAZ;AACAA,MAAAA,KAAK,CAAC8B,MAAN,CAAaD,KAAb,EAAoB,CAApB;AACA,WAAKR,QAAL,CAAc;AACZrB,QAAAA,KAAK,EAAE,CAAC,GAAGA,KAAJ;AADK,OAAd;AAGD,KAvEgC;;AAAA,SAyEjC+B,eAzEiC,GAyEf,MAAM;AACtB,WAAKV,QAAL,CAAc;AAAErB,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KA3EgC;;AAAA,SAwFjCgC,gBAxFiC,GAwFdH,KAAK,IAAI;AAC1B,UAAII,QAAQ,GAAG,CAAC,GAAG,KAAKnC,KAAL,CAAWE,KAAf,CAAf;AACA,UAAIiB,IAAI,GAAG,KAAKnB,KAAL,CAAWE,KAAX,CAAiB6B,KAAjB,CAAX;AACA,WAAKvB,UAAL,CAAgBW,IAAI,CAACA,IAArB,EAA2BV,IAA3B,CAAgCC,GAAG,IAAI;AACnCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAC,QAAAA,KAAK,CAAC,6BAAD,CAAL;AACD,OAHH;AAKAqB,MAAAA,QAAQ,CAACJ,KAAD,CAAR,mCAAuBZ,IAAvB;AAA6BC,QAAAA,SAAS,EAAE,IAAxC;AAA8CC,QAAAA,KAAK,EAAE;AAArD;AAEA,WAAKE,QAAL,CAAc;AACZrB,QAAAA,KAAK,EAAE,CAAC,GAAGiC,QAAJ;AADK,OAAd;AAGD,KArGgC;;AAAA,SAuGjCC,aAvGiC,GAuGjB,MAAM;AACpB,UAAID,QAAQ,GAAG,EAAf;AAEA,WAAKnC,KAAL,CAAWE,KAAX,CAAiBmC,GAAjB,CAAqBC,IAAI,IAAI;AAC3BH,QAAAA,QAAQ,CAACjB,IAAT,iCACKoB,IADL;AAEElB,UAAAA,SAAS,EAAE,IAFb;AAGEC,UAAAA,KAAK,EAAE;AAHT;AAMA,eAAOiB,IAAP;AACD,OARD;AAUA,WAAKf,QAAL,CAAc;AACZrB,QAAAA,KAAK,EAAE,CAAC,GAAGiC,QAAJ,CADK;AAEZ/B,QAAAA,WAAW,EAAE;AAFD,OAAd;AAID,KAxHgC;;AAAA,SA0HjCmC,kBA1HiC,GA0HZR,KAAK,IAAI;AAC5B,UAAII,QAAQ,GAAG,CAAC,GAAG,KAAKnC,KAAL,CAAWE,KAAf,CAAf;AACA,UAAIiB,IAAI,GAAG,KAAKnB,KAAL,CAAWE,KAAX,CAAiB6B,KAAjB,CAAX;AAEAI,MAAAA,QAAQ,CAACJ,KAAD,CAAR,mCAAuBZ,IAAvB;AAA6BC,QAAAA,SAAS,EAAE,KAAxC;AAA+CC,QAAAA,KAAK,EAAE;AAAtD;AAEA,WAAKE,QAAL,CAAc;AACZrB,QAAAA,KAAK,EAAE,CAAC,GAAGiC,QAAJ;AADK,OAAd;AAGD,KAnIgC;;AAAA,SAqIjCK,eArIiC,GAqIf,MAAM;AACtB,UAAIL,QAAQ,GAAG,EAAf;AAEA,WAAKnC,KAAL,CAAWE,KAAX,CAAiBmC,GAAjB,CAAqBC,IAAI,IAAI;AAC3BH,QAAAA,QAAQ,CAACjB,IAAT,iCACKoB,IADL;AAEElB,UAAAA,SAAS,EAAE,KAFb;AAGEC,UAAAA,KAAK,EAAE;AAHT;AAMA,eAAOiB,IAAP;AACD,OARD;AAUA,WAAKf,QAAL,CAAc;AACZrB,QAAAA,KAAK,EAAE,CAAC,GAAGiC,QAAJ,CADK;AAEZ/B,QAAAA,WAAW,EAAE;AAFD,OAAd;AAID,KAtJgC;AAAA;;AA4EjCI,EAAAA,UAAU,CAACW,IAAD,EAAM;AACd,UAAMsB,GAAG,GAAE3C,YAAY,CAAC4C,WAAb,GAAyB,kBAApC;AACA,QAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA6B1B,IAA7B,EAHc,CAGqB;;AACnC,UAAM2B,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAKA,WAAQlD,KAAK,CAACmD,IAAN,CAAWP,GAAX,EAAgBE,QAAhB,EAAyBG,MAAzB,CAAR;AACD;;AAkEDG,EAAAA,MAAM,GAAG;AAAA,sBACiC,KAAKjD,KADtC;AAAA,QACDC,SADC,eACDA,SADC;AAAA,QACUC,KADV,eACUA,KADV;AAAA,QACiBE,WADjB,eACiBA,WADjB;AAEP,QAAI8C,OAAO,GAAGhD,KAAK,CAACiD,MAAN,KAAiB,CAA/B;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,aAAa,EAAE,CAAC;AAAEC,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,IAAI,EAAE;AAAxB,OAAD,EAAgC;AAAED,QAAAA,IAAI,EAAE;AAAR,OAAhC,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAME,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,SAAS,EAAC,MAHZ;AAIE,MAAA,OAAO,EAAC,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CANF,CADF,CADF,eAcE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,QAAQ,EAAE,KAAKrC,gBAFjB;AAGE,MAAA,EAAE,EAAC,oBAHL;AAIE,MAAA,IAAI,EAAC,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,eAoBE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,eAqBE;AAAO,MAAA,OAAO,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,SAAS,EAAC,MAHZ;AAIE,MAAA,OAAO,EAAC,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFF,CANF,CADF,CArBF,eAkCE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,QAAQ,EAAE,KAAKV,wBAFjB;AAGE,MAAA,EAAE,EAAC,8BAHL;AAIE,MAAA,IAAI,EAAC,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlCF,eAwCE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxCF,eAyCE;AAAO,MAAA,OAAO,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,SAAS,EAAC,MAHZ;AAIE,MAAA,OAAO,EAAC,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CANF,CADF,CAzCF,eAsDE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,QAAQ,EAAE,KAAKU,gBAFjB;AAGE,MAAA,EAAE,EAAC,sBAHL;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtDF,CADF,eAgEE;AACE,MAAA,SAAS,YAAKd,SAAL,wDADX;AAEE,MAAA,WAAW,EAAE,KAAK4B,eAFpB;AAGE,MAAA,UAAU,EAAE,KAAKL,cAHnB;AAIE,MAAA,MAAM,EAAE,KAAKE,UAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGwB,OAAO,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADM,gBAGN;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGhD,KAAK,CAACiD,MADT,WACsBjD,KAAK,CAACiD,MAAN,GAAe,CAAf,GAAmB,GAAnB,GAAyB,EAD/C,iBATJ,CAhEF,eA+EE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAwB,MAAA,SAAS,EAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,OAAO,EAAE,CAFX;AAGE,MAAA,OAAO,EAAC,QAHV;AAIE,MAAA,UAAU,EAAC,QAJb;AAKE,MAAA,SAAS,EAAC,KALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAaE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,eAgBE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAmBE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAnBF,CADF,CADF,eA0BE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BF,EA4BGD,OAAO,iBAAI;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA5Bd,EA8BGhD,KAAK,CAACmC,GAAN,CAAU,CAACC,IAAD,EAAOP,KAAP,KAAiB;AAAA,UACpBZ,IADoB,GACiBmB,IADjB,CACpBnB,IADoB;AAAA,UACdC,SADc,GACiBkB,IADjB,CACdlB,SADc;AAAA,UACHC,KADG,GACiBiB,IADjB,CACHjB,KADG;AAAA,UACIC,QADJ,GACiBgB,IADjB,CACIhB,QADJ;AAE1B,0BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,GAAG,EAAEH,IAAI,CAACiC,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,OAAO,EAAE,CAFX;AAGE,QAAA,OAAO,EAAC,QAHV;AAIE,QAAA,UAAU,EAAC,QAJb;AAKE,QAAA,SAAS,EAAC,KALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE,EAA7B;AAAiC,QAAA,EAAE,EAAE,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGjC,IAAI,CAACiC,IADR,CAPF,eAUE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE,EAA7B;AAAiC,QAAA,EAAE,EAAE,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAACjC,IAAI,CAACmC,IAAL,GAAY,IAAZ,GAAmB,IAApB,EAA0BC,OAA1B,CAAkC,CAAlC,CADH,QAVF,eAaE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE,EAA7B;AAAiC,QAAA,EAAE,EAAE,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEjC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAbF,eAgBE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE,EAA7B;AAAiC,QAAA,EAAE,EAAE,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,KAAK,iBAAI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADZ,CAhBF,eAoBE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE,EAA7B;AAAiC,QAAA,EAAE,EAAE,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,QAAQ,EAAED,SAHZ;AAIE,QAAA,OAAO,EAAE,MAAM,KAAKc,gBAAL,CAAsBH,KAAtB,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eASE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,QAAQ,EAAE,CAACX,SAHb;AAIE,QAAA,KAAK,EAAC,WAJR;AAKE,QAAA,OAAO,EAAE,MAAM,KAAKmB,kBAAL,CAAwBR,KAAxB,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,eAkBE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,SAAS,EAAC,UAFZ;AAGE,QAAA,OAAO,EAAE,MAAM,KAAKD,kBAAL,CAAwBC,KAAxB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBF,CADF,CApBF,CADF,CADF;AAqDD,KAvDA,CA9BH,CA/EF,eAuKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE3B,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,eAKE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,QAAQ,EAAE8C,OAHZ;AAIE,MAAA,OAAO,EAAE,KAAKd,aAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eASE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,KAAK,EAAC,WAHR;AAIE,MAAA,QAAQ,EAAEc,OAJZ;AAKE,MAAA,OAAO,EAAE,KAAKV,eALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,EAkBG,CAACU,OAAD,iBACC,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,SAAS,EAAC,UAFZ;AAGE,MAAA,OAAO,EAAE,KAAKjB,eAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnBJ,CALF,CAvKF,CANF,CADF;AAmND;;AA/WgC;;AAkXnC,eAAelC,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Breadcrumb, SimpleCard, EgretProgressBar } from \"egret\";\nimport { Fab, Icon, Card, Grid, Divider, Button } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport ConstantList from \"../../appConfig\";\nclass UploadForm extends Component {\n  state = {\n    dragClass: \"\",\n    files: [],\n    statusList: [],\n    queProgress: 0\n  };\n  handleFileUploadOnSelect = event => {\n    let files = event.target.files;\n    this.fileUpload(files[0]).then(res => {\n      console.log(res.data);\n      alert(\"File uploaded successfully.\")\n    });\n  }\n  handleFileSelect = event => {\n    let files = event.target.files;\n    let list = [];\n\n    for (const iterator of files) {\n      list.push({\n        file: iterator,\n        uploading: false,\n        error: false,\n        progress: 0\n      });\n    }\n\n    this.setState({\n      files: [...list]\n    });\n  };\n\n  handleDragOver = event => {\n    event.preventDefault();\n    this.setState({ dragClass: \"drag-shadow\" });\n  };\n\n  handleDrop = event => {\n    event.preventDefault();\n    event.persist();\n\n    let files = event.dataTransfer.files;\n    let list = [];\n\n    for (const iterator of files) {\n      list.push({\n        file: iterator,\n        uploading: false,\n        error: false,\n        progress: 0\n      });\n    }\n\n    this.setState({\n      dragClass: \"\",\n      files: [...list]\n    });\n\n    return false;\n  };\n\n  handleDragStart = event => {\n    this.setState({ dragClass: \"drag-shadow\" });\n  };\n\n  handleSingleRemove = index => {\n    let files = [...this.state.files];\n    files.splice(index, 1);\n    this.setState({\n      files: [...files]\n    });\n  };\n\n  handleAllRemove = () => {\n    this.setState({ files: [] });\n  };\n  fileUpload(file){\n    const url =ConstantList.API_ENPOINT+\"/api/file/upload\";\n    let formData = new FormData();\n    formData.append('uploadfile',file);//Lưu ý tên 'uploadfile' phải trùng với tham số bên Server side\n    const config = {\n        headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n    }\n    return  axios.post(url, formData,config)\n  }\n\n  uploadSingleFile = index => {\n    let allFiles = [...this.state.files];\n    let file = this.state.files[index];\n    this.fileUpload(file.file).then(res => {\n        console.log(res.data);\n        alert(\"File uploaded successfully.\")\n      })\n\n    allFiles[index] = { ...file, uploading: true, error: false };\n\n    this.setState({\n      files: [...allFiles]\n    });\n  };\n\n  uploadAllFile = () => {\n    let allFiles = [];\n\n    this.state.files.map(item => {\n      allFiles.push({\n        ...item,\n        uploading: true,\n        error: false\n      });\n\n      return item;\n    });\n\n    this.setState({\n      files: [...allFiles],\n      queProgress: 35\n    });\n  };\n\n  handleSingleCancel = index => {\n    let allFiles = [...this.state.files];\n    let file = this.state.files[index];\n\n    allFiles[index] = { ...file, uploading: false, error: true };\n\n    this.setState({\n      files: [...allFiles]\n    });\n  };\n\n  handleCancelAll = () => {\n    let allFiles = [];\n\n    this.state.files.map(item => {\n      allFiles.push({\n        ...item,\n        uploading: false,\n        error: true\n      });\n\n      return item;\n    });\n\n    this.setState({\n      files: [...allFiles],\n      queProgress: 0\n    });\n  };\n\n  render() {\n    let { dragClass, files, queProgress } = this.state;\n    let isEmpty = files.length === 0;\n\n    return (\n      <div className=\"upload-form m-sm-30\">\n        <div className=\"mb-sm-30\">\n          <Breadcrumb\n            routeSegments={[{ name: \"Others\", path: \"/\" }, { name: \"Upload\" }]}\n          />\n        </div>\n        <SimpleCard title=\"File Upload\">\n          <div className=\"flex flex-wrap mb-24\">\n            <label htmlFor=\"upload-single-file\">\n              <Fab\n                className=\"capitalize\"\n                color=\"primary\"\n                component=\"span\"\n                variant=\"extended\"\n              >\n                <div className=\"flex flex-middle\">\n                  <Icon className=\"pr-8\">cloud_upload</Icon>\n                  <span>Single File</span>\n                </div>\n              </Fab>\n            </label>\n            <input\n              className=\"display-none\"\n              onChange={this.handleFileSelect}\n              id=\"upload-single-file\"\n              type=\"file\"\n            />\n            <div className=\"px-16\"></div>\n            <label htmlFor=\"upload-single-file-on-select\">\n              <Fab\n                className=\"capitalize\"\n                color=\"primary\"\n                component=\"span\"\n                variant=\"extended\"\n              >\n                <div className=\"flex flex-middle\">\n                  <Icon className=\"pr-8\">cloud_upload</Icon>\n                  <span>Upload File On Select</span>\n                </div>\n              </Fab>\n            </label>            \n            <input\n              className=\"display-none\"\n              onChange={this.handleFileUploadOnSelect}\n              id=\"upload-single-file-on-select\"\n              type=\"file\"\n            />            \n            <div className=\"px-16\"></div>\n            <label htmlFor=\"upload-multiple-file\">\n              <Fab\n                className=\"capitalize\"\n                color=\"primary\"\n                component=\"span\"\n                variant=\"extended\"\n              >\n                <div className=\"flex flex-middle\">\n                  <Icon className=\"pr-8\">cloud_upload</Icon>\n                  <span>Multiple File</span>\n                </div>\n              </Fab>\n            </label>\n            <input\n              className=\"display-none\"\n              onChange={this.handleFileSelect}\n              id=\"upload-multiple-file\"\n              type=\"file\"\n              multiple\n            />\n          </div>\n\n          <div\n            className={`${dragClass} upload-drop-box mb-24 flex flex-center flex-middle`}\n            onDragEnter={this.handleDragStart}\n            onDragOver={this.handleDragOver}\n            onDrop={this.handleDrop}\n          >\n            {isEmpty ? (\n              <span>Drop your files here</span>\n            ) : (\n              <h5 className=\"m-0\">\n                {files.length} file{files.length > 1 ? \"s\" : \"\"} selected...\n              </h5>\n            )}\n          </div>\n\n          <Card className=\"mb-24\" elevation={2}>\n            <div className=\"p-16\">\n              <Grid\n                container\n                spacing={2}\n                justify=\"center\"\n                alignItems=\"center\"\n                direction=\"row\"\n              >\n                <Grid item lg={4} md={4}>\n                  Name\n                </Grid>\n                <Grid item lg={1} md={1}>\n                  Size\n                </Grid>\n                <Grid item lg={2} md={2}>\n                  Progress\n                </Grid>\n                <Grid item lg={1} md={1}>\n                  Status\n                </Grid>\n                <Grid item lg={4} md={4}>\n                  Actions\n                </Grid>\n              </Grid>\n            </div>\n            <Divider></Divider>\n\n            {isEmpty && <p className=\"px-16\">Que is empty</p>}\n\n            {files.map((item, index) => {\n              let { file, uploading, error, progress } = item;\n              return (\n                <div className=\"px-16 py-16\" key={file.name}>\n                  <Grid\n                    container\n                    spacing={2}\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    direction=\"row\"\n                  >\n                    <Grid item lg={4} md={4} sm={12} xs={12}>\n                      {file.name}\n                    </Grid>\n                    <Grid item lg={1} md={1} sm={12} xs={12}>\n                      {(file.size / 1024 / 1024).toFixed(1)} MB\n                    </Grid>\n                    <Grid item lg={2} md={2} sm={12} xs={12}>\n                      <EgretProgressBar value={progress}></EgretProgressBar>\n                    </Grid>\n                    <Grid item lg={1} md={1} sm={12} xs={12}>\n                      {error && <Icon color=\"error\">error</Icon>}\n                      {/* {uploading && <Icon className=\"text-green\">done</Icon>} */}\n                    </Grid>\n                    <Grid item lg={4} md={4} sm={12} xs={12}>\n                      <div className=\"flex\">\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={uploading}\n                          onClick={() => this.uploadSingleFile(index)}\n                        >\n                          Upload\n                        </Button>\n                        <Button\n                          className=\"mx-8\"\n                          variant=\"contained\"\n                          disabled={!uploading}\n                          color=\"secondary\"\n                          onClick={() => this.handleSingleCancel(index)}\n                        >\n                          Cancel\n                        </Button>\n                        <Button\n                          variant=\"contained\"\n                          className=\"bg-error\"\n                          onClick={() => this.handleSingleRemove(index)}\n                        >\n                          Remove\n                        </Button>\n                      </div>\n                    </Grid>\n                  </Grid>\n                </div>\n              );\n            })}\n          </Card>\n\n          <div>\n            <p className=\"m-0\">Queue progress:</p>\n            <div className=\"py-16\">\n              <EgretProgressBar value={queProgress}></EgretProgressBar>\n            </div>\n            <div className=\"flex\">\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isEmpty}\n                onClick={this.uploadAllFile}\n              >\n                Upload All\n              </Button>\n              <Button\n                className=\"mx-8\"\n                variant=\"contained\"\n                color=\"secondary\"\n                disabled={isEmpty}\n                onClick={this.handleCancelAll}\n              >\n                Cancel All\n              </Button>\n              {!isEmpty && (\n                <Button\n                  variant=\"contained\"\n                  className=\"bg-error\"\n                  onClick={this.handleAllRemove}\n                >\n                  Remove All\n                </Button>\n              )}\n            </div>\n          </div>\n        </SimpleCard>\n      </div>\n    );\n  }\n}\n\nexport default UploadForm;\n"]},"metadata":{},"sourceType":"module"}