{"ast":null,"code":"var _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\CRUD\\\\CrudTable.jsx\";\nimport React, { Component } from \"react\";\nimport { IconButton, Table, TableHead, TableBody, TableRow, TableCell, Icon, TablePagination, Button, Card } from \"@material-ui/core\";\nimport { getAllUser, deleteUser } from \"./TableService\";\nimport MemberEditorDialog from \"./MemberEditorDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport shortid from \"shortid\";\n\nclass CrudTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rowsPerPage: 10,\n      page: 0,\n      userList: [],\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false\n    };\n\n    this.setPage = page => {\n      this.setState({\n        page\n      });\n    };\n\n    this.setRowsPerPage = event => {\n      this.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n\n    this.handleChangePage = (event, newPage) => {\n      this.setPage(newPage);\n    };\n\n    this.handleDialogClose = () => {\n      this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false\n      });\n      this.updatePageData();\n    };\n\n    this.handleDeleteUser = user => {\n      this.setState({\n        user,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    this.handleConfirmationResponse = () => {\n      deleteUser(this.state.user).then(() => {\n        this.handleDialogClose();\n      });\n    };\n\n    this.updatePageData = () => {\n      getAllUser().then(({\n        data\n      }) => this.setState({\n        userList: [...data]\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.updatePageData();\n  }\n\n  render() {\n    let _this$state = this.state,\n        rowsPerPage = _this$state.rowsPerPage,\n        page = _this$state.page,\n        userList = _this$state.userList,\n        shouldOpenConfirmationDialog = _this$state.shouldOpenConfirmationDialog,\n        shouldOpenEditorDialog = _this$state.shouldOpenEditorDialog;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-sm-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-sm-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      routeSegments: [{\n        name: \"CRUD Table\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"mb-16\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => this.setState({\n        shouldOpenEditorDialog: true\n      }, this.state.id = null),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \"Add New Member\"), /*#__PURE__*/React.createElement(Card, {\n      className: \"w-100 overflow-auto\",\n      elevation: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: \"crud-table\",\n      style: {\n        whiteSpace: \"pre\",\n        minWidth: \"750px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, \"STT\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, \"Age\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, \"Balance\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, \"Company\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, userList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((user, index) => /*#__PURE__*/React.createElement(TableRow, {\n      key: shortid.generate(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, user.name), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, user.age), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, \"$\", user.balance), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, user.company), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, user.isActive ? /*#__PURE__*/React.createElement(\"small\", {\n      className: \"border-radius-4 bg-primary text-white px-8 py-2 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, \"active\") : /*#__PURE__*/React.createElement(\"small\", {\n      className: \"border-radius-4 bg-light-gray px-8 py-2 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, \"inactive\")), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0 border-none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => this.setState({\n        uid: user.id,\n        shouldOpenEditorDialog: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, \"edit\")), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => this.handleDeleteUser(user),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      color: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, \"delete\"))))))), /*#__PURE__*/React.createElement(TablePagination, {\n      className: \"px-16\",\n      rowsPerPageOptions: [5, 10, 25],\n      component: \"div\",\n      count: userList.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      backIconButtonProps: {\n        \"aria-label\": \"Previous Page\"\n      },\n      nextIconButtonProps: {\n        \"aria-label\": \"Next Page\"\n      },\n      onChangePage: this.handleChangePage,\n      onChangeRowsPerPage: this.setRowsPerPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }), shouldOpenEditorDialog && /*#__PURE__*/React.createElement(MemberEditorDialog, {\n      handleClose: this.handleDialogClose,\n      open: shouldOpenEditorDialog,\n      uid: this.state.uid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }), shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n      open: shouldOpenConfirmationDialog,\n      onConfirmDialogClose: this.handleDialogClose,\n      onYesClick: this.handleConfirmationResponse,\n      text: \"Are you sure to delete?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default CrudTable;","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/CRUD/CrudTable.jsx"],"names":["React","Component","IconButton","Table","TableHead","TableBody","TableRow","TableCell","Icon","TablePagination","Button","Card","getAllUser","deleteUser","MemberEditorDialog","Breadcrumb","ConfirmationDialog","shortid","CrudTable","state","rowsPerPage","page","userList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","setPage","setState","setRowsPerPage","event","target","value","handleChangePage","newPage","handleDialogClose","updatePageData","handleDeleteUser","user","handleConfirmationResponse","then","data","componentDidMount","render","name","id","whiteSpace","minWidth","slice","map","index","generate","age","balance","company","isActive","uid","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,UADF,EAEEC,KAFF,EAGEC,SAHF,EAIEC,SAJF,EAKEC,QALF,EAMEC,SANF,EAOEC,IAPF,EAQEC,eARF,EASEC,MATF,EAUEC,IAVF,QAWO,mBAXP;AAYA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,gBAAvC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,UAAT,EAAqBC,kBAArB,QAA+C,OAA/C;AACA,OAAOC,OAAP,MAAoB,SAApB;;AAEA,MAAMC,SAAN,SAAwBjB,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCkB,KADgC,GACxB;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,IAAI,EAAE,CAFA;AAGNC,MAAAA,QAAQ,EAAE,EAHJ;AAINC,MAAAA,sBAAsB,EAAE,KAJlB;AAKNC,MAAAA,4BAA4B,EAAE;AALxB,KADwB;;AAAA,SAShCC,OATgC,GAStBJ,IAAI,IAAI;AAChB,WAAKK,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd;AACD,KAX+B;;AAAA,SAahCM,cAbgC,GAafC,KAAK,IAAI;AACxB,WAAKF,QAAL,CAAc;AAAEN,QAAAA,WAAW,EAAEQ,KAAK,CAACC,MAAN,CAAaC;AAA5B,OAAd;AACD,KAf+B;;AAAA,SAiBhCC,gBAjBgC,GAiBb,CAACH,KAAD,EAAQI,OAAR,KAAoB;AACrC,WAAKP,OAAL,CAAaO,OAAb;AACD,KAnB+B;;AAAA,SAqBhCC,iBArBgC,GAqBZ,MAAM;AACxB,WAAKP,QAAL,CAAc;AACZH,QAAAA,sBAAsB,EAAE,KADZ;AAEZC,QAAAA,4BAA4B,EAAE;AAFlB,OAAd;AAIA,WAAKU,cAAL;AACD,KA3B+B;;AAAA,SA6BhCC,gBA7BgC,GA6BbC,IAAI,IAAI;AACzB,WAAKV,QAAL,CAAc;AACZU,QAAAA,IADY;AAEZZ,QAAAA,4BAA4B,EAAE;AAFlB,OAAd;AAID,KAlC+B;;AAAA,SAoChCa,0BApCgC,GAoCH,MAAM;AACjCxB,MAAAA,UAAU,CAAC,KAAKM,KAAL,CAAWiB,IAAZ,CAAV,CAA4BE,IAA5B,CAAiC,MAAM;AACrC,aAAKL,iBAAL;AACD,OAFD;AAGD,KAxC+B;;AAAA,SA8ChCC,cA9CgC,GA8Cf,MAAM;AACrBtB,MAAAA,UAAU,GAAG0B,IAAb,CAAkB,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAc,KAAKb,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAE,CAAC,GAAGiB,IAAJ;AAAZ,OAAd,CAAhC;AACD,KAhD+B;AAAA;;AA0ChCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,cAAL;AACD;;AAMDO,EAAAA,MAAM,GAAG;AAAA,sBAOH,KAAKtB,KAPF;AAAA,QAELC,WAFK,eAELA,WAFK;AAAA,QAGLC,IAHK,eAGLA,IAHK;AAAA,QAILC,QAJK,eAILA,QAJK;AAAA,QAKLE,4BALK,eAKLA,4BALK;AAAA,QAMLD,sBANK,eAMLA,sBANK;AAQP,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,aAAa,EAAE,CAAC;AAAEmB,QAAAA,IAAI,EAAE;AAAR,OAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAKE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,OAAO,EAAE,MAAM,KAAKhB,QAAL,CAAc;AAAEH,QAAAA,sBAAsB,EAAE;AAA1B,OAAd,EAA8C,KAAKJ,KAAL,CAAWwB,EAAX,GAAgB,IAA9D,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,eAaE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAsC,MAAA,SAAS,EAAE,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,KAAd;AAAqBC,QAAAA,QAAQ,EAAE;AAA/B,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,eAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,eAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,CADF,CADF,eAWE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGvB,QAAQ,CACNwB,KADF,CACQzB,IAAI,GAAGD,WADf,EAC4BC,IAAI,GAAGD,WAAP,GAAqBA,WADjD,EAEE2B,GAFF,CAEM,CAACX,IAAD,EAAOY,KAAP,kBACH,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAE/B,OAAO,CAACgC,QAAR,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAA4B,MAAA,KAAK,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGb,IAAI,CAACM,IADR,CADF,eAIE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAA4B,MAAA,KAAK,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,IAAI,CAACc,GADR,CAJF,eAOE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA8Bd,IAAI,CAACe,OAAnC,CAPF,eAQE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAA4B,MAAA,KAAK,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGf,IAAI,CAACgB,OADR,CARF,eAWE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGhB,IAAI,CAACiB,QAAL,gBACC;AAAO,MAAA,SAAS,EAAC,kDAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,gBAKC;AAAO,MAAA,SAAS,EAAC,0CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,CAXF,eAsBE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,OAAO,EAAE,MACP,KAAK3B,QAAL,CAAc;AACZ4B,QAAAA,GAAG,EAAElB,IAAI,CAACO,EADE;AAEZpB,QAAAA,sBAAsB,EAAE;AAFZ,OAAd,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CADF,eAWE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,MAAM,KAAKY,gBAAL,CAAsBC,IAAtB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAXF,CAtBF,CAHH,CADH,CAXF,CADF,eA0DE,oBAAC,eAAD;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAFtB;AAGE,MAAA,SAAS,EAAC,KAHZ;AAIE,MAAA,KAAK,EAAEd,QAAQ,CAACiC,MAJlB;AAKE,MAAA,WAAW,EAAEnC,WALf;AAME,MAAA,IAAI,EAAEC,IANR;AAOE,MAAA,mBAAmB,EAAE;AACnB,sBAAc;AADK,OAPvB;AAUE,MAAA,mBAAmB,EAAE;AACnB,sBAAc;AADK,OAVvB;AAaE,MAAA,YAAY,EAAE,KAAKU,gBAbrB;AAcE,MAAA,mBAAmB,EAAE,KAAKJ,cAd5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1DF,EA2EGJ,sBAAsB,iBACrB,oBAAC,kBAAD;AACE,MAAA,WAAW,EAAE,KAAKU,iBADpB;AAEE,MAAA,IAAI,EAAEV,sBAFR;AAGE,MAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWmC,GAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5EJ,EAkFG9B,4BAA4B,iBAC3B,oBAAC,kBAAD;AACE,MAAA,IAAI,EAAEA,4BADR;AAEE,MAAA,oBAAoB,EAAE,KAAKS,iBAF7B;AAGE,MAAA,UAAU,EAAE,KAAKI,0BAHnB;AAIE,MAAA,IAAI,EAAC,yBAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnFJ,CAbF,CADF;AA2GD;;AArK+B;;AAwKlC,eAAenB,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  IconButton,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Icon,\n  TablePagination,\n  Button,\n  Card\n} from \"@material-ui/core\";\nimport { getAllUser, deleteUser } from \"./TableService\";\nimport MemberEditorDialog from \"./MemberEditorDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport shortid from \"shortid\";\n\nclass CrudTable extends Component {\n  state = {\n    rowsPerPage: 10,\n    page: 0,\n    userList: [],\n    shouldOpenEditorDialog: false,\n    shouldOpenConfirmationDialog: false\n  };\n\n  setPage = page => {\n    this.setState({ page });\n  };\n\n  setRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  handleChangePage = (event, newPage) => {\n    this.setPage(newPage);\n  };\n\n  handleDialogClose = () => {\n    this.setState({\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false\n    });\n    this.updatePageData();\n  };\n\n  handleDeleteUser = user => {\n    this.setState({\n      user,\n      shouldOpenConfirmationDialog: true\n    });\n  };\n\n  handleConfirmationResponse = () => {\n    deleteUser(this.state.user).then(() => {\n      this.handleDialogClose();\n    });\n  };\n\n  componentDidMount() {\n    this.updatePageData();\n  }\n\n  updatePageData = () => {\n    getAllUser().then(({ data }) => this.setState({ userList: [...data] }));\n  };\n\n  render() {\n    let {\n      rowsPerPage,\n      page,\n      userList,\n      shouldOpenConfirmationDialog,\n      shouldOpenEditorDialog\n    } = this.state;\n    return (\n      <div className=\"m-sm-30\">\n        <div  className=\"mb-sm-30\">\n          <Breadcrumb routeSegments={[{ name: \"CRUD Table\" }]} />\n        </div>\n\n        <Button\n          className=\"mb-16\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => this.setState({ shouldOpenEditorDialog: true},this.state.id = null)}\n        >\n          Add New Member\n        </Button>\n        <Card className=\"w-100 overflow-auto\" elevation={6}>\n          <Table className=\"crud-table\" style={{ whiteSpace: \"pre\", minWidth: \"750px\" }}>\n            <TableHead>\n              <TableRow>\n                <TableCell>STT</TableCell>\n                <TableCell>Age</TableCell>\n                <TableCell>Balance</TableCell>\n                <TableCell>Company</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {userList\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((user, index) => (\n                  <TableRow key={shortid.generate()}>\n                    <TableCell className=\"px-0\" align=\"left\">\n                      {user.name}\n                    </TableCell>\n                    <TableCell className=\"px-0\" align=\"left\">\n                      {user.age}\n                    </TableCell>\n                    <TableCell className=\"px-0\">${user.balance}</TableCell>\n                    <TableCell className=\"px-0\" align=\"left\">\n                      {user.company}\n                    </TableCell>\n                    <TableCell className=\"px-0\">\n                      {user.isActive ? (\n                        <small className=\"border-radius-4 bg-primary text-white px-8 py-2 \">\n                          active\n                        </small>\n                      ) : (\n                        <small className=\"border-radius-4 bg-light-gray px-8 py-2 \">\n                          inactive\n                        </small>\n                      )}\n                    </TableCell>\n                    <TableCell className=\"px-0 border-none\">\n                      <IconButton\n                        onClick={() =>\n                          this.setState({\n                            uid: user.id,\n                            shouldOpenEditorDialog: true\n                          })\n                        }\n                      >\n                        <Icon color=\"primary\">edit</Icon>\n                      </IconButton>\n                      <IconButton onClick={() => this.handleDeleteUser(user)}>\n                        <Icon color=\"error\">delete</Icon>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n\n          <TablePagination\n            className=\"px-16\"\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={userList.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            backIconButtonProps={{\n              \"aria-label\": \"Previous Page\"\n            }}\n            nextIconButtonProps={{\n              \"aria-label\": \"Next Page\"\n            }}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.setRowsPerPage}\n          />\n\n          {shouldOpenEditorDialog && (\n            <MemberEditorDialog\n              handleClose={this.handleDialogClose}\n              open={shouldOpenEditorDialog}\n              uid={this.state.uid}\n            />\n          )}\n          {shouldOpenConfirmationDialog && (\n            <ConfirmationDialog\n              open={shouldOpenConfirmationDialog}\n              onConfirmDialogClose={this.handleDialogClose}\n              onYesClick={this.handleConfirmationResponse}\n              text=\"Are you sure to delete?\"\n            />\n          )}\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default CrudTable;\n"]},"metadata":{},"sourceType":"module"}