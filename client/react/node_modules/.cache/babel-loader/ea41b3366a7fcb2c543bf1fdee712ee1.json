{"ast":null,"code":"var _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\scrum-board\\\\ScrumBoardContainer.jsx\";\nimport React, { Component } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport CardEditorDialog from \"./CardEditorDialog\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport BoardList from \"./BoardList\";\nimport { Avatar, Card, ClickAwayListener, TextField, InputAdornment, IconButton, Icon, Button } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addNewColumnInBoard } from \"./ScrumBoardService\";\nimport { reorderCardInList, reorderList, moveCardInList } from \"../../redux/actions/ScrumBoardActions\";\n\nclass ScrumBoardContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataLoaded: false,\n      list: [],\n      shouldOpenDialog: false,\n      shouldOpenAddList: false,\n      columnTitle: \"\"\n    };\n\n    this.handleCardClick = card => {\n      this.setState({\n        shouldOpenDialog: true,\n        card: card\n      });\n    };\n\n    this.handleDialogClose = () => {\n      this.setState({\n        shouldOpenDialog: false\n      });\n    };\n\n    this.handleAddListToggle = value => {\n      this.setState({\n        shouldOpenAddList: value\n      });\n    };\n\n    this.handleChange = event => {\n      if (event.key === \"Enter\" && !event.shiftKey) {\n        this.props.handleAddList(this.state.columnTitle);\n        this.setState({\n          columnTitle: \"\"\n        });\n      } else this.setState({\n        columnTitle: event.target.value\n      });\n    };\n\n    this.onDragEnd = result => {\n      const source = result.source,\n            destination = result.destination;\n      let _this$props = this.props,\n          board = _this$props.board,\n          reorderCardInList = _this$props.reorderCardInList,\n          moveCardInList = _this$props.moveCardInList,\n          reorderList = _this$props.reorderList; // if dropped outside of list\n\n      if (!destination) {\n        return;\n      }\n\n      if (source.droppableId === \"horizontal-droppable\") {\n        reorderList(board.id, source.index, destination.index);\n      } else {\n        if (source.droppableId === destination.droppableId) {\n          reorderCardInList(board.id, source.droppableId, source.index, destination.index);\n        } else {\n          moveCardInList(board.id, source.droppableId, destination.droppableId, source, destination);\n        }\n      }\n    };\n  }\n\n  // convert this into a list instead of hard coded state object\n  componentDidMount() {}\n\n  // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  render() {\n    let _this$state = this.state,\n        shouldOpenDialog = _this$state.shouldOpenDialog,\n        shouldOpenAddList = _this$state.shouldOpenAddList,\n        columnTitle = _this$state.columnTitle,\n        card = _this$state.card;\n    let _this$props2 = this.props,\n        list = _this$props2.list,\n        handleAddList = _this$props2.handleAddList,\n        handleAddNewCard = _this$props2.handleAddNewCard;\n    return /*#__PURE__*/React.createElement(Scrollbar, {\n      className: \"position-relative flex pb-16 w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: \"horizontal-droppable\",\n      direction: \"horizontal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.droppableProps, {\n      className: \"flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }), list.map((column, index) => /*#__PURE__*/React.createElement(Draggable, {\n      key: column.id,\n      draggableId: column.id,\n      index: index,\n      type: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }, (provided, snapshot) => /*#__PURE__*/React.createElement(BoardList, {\n      data: {\n        provided,\n        snapshot,\n        column\n      },\n      handleCardClick: this.handleCardClick,\n      handleDialogClose: this.handleDialogClose,\n      handleAddNewCard: handleAddNewCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 23\n      }\n    }))), provided.placeholder))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, shouldOpenAddList ? /*#__PURE__*/React.createElement(ClickAwayListener, {\n      onClickAway: () => this.handleAddListToggle(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        minWidth: \"290px\"\n      },\n      className: \"list-column border-radius-0 cursor-pointer p-16\",\n      elevation: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      className: \"mb-12\",\n      variant: \"outlined\",\n      name: \"columnTitle\",\n      value: columnTitle,\n      fullWidth: true,\n      onChange: this.handleChange,\n      onKeyDown: this.handleChange,\n      InputProps: {\n        endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(IconButton, {\n          size: \"small\",\n          onClick: () => this.handleAddListToggle(false),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          fontSize: \"small\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 27\n          }\n        }, \"clear\")))\n      },\n      inputProps: {\n        style: {\n          padding: \"10px\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        handleAddList(columnTitle);\n        this.setState({\n          columnTitle: \"\"\n        });\n      },\n      variant: \"contained\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, \"Add\")))) : /*#__PURE__*/React.createElement(Card, {\n      className: \"list-column cursor-pointer flex flex-middle py-16 px-16 bg-light-gray\",\n      elevation: 3,\n      style: {\n        minWidth: \"290px\"\n      },\n      onClick: () => this.handleAddListToggle(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: \"size-24 bg-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }\n    }, \"+\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-8 font-weight-500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, \"Add List\"))), shouldOpenDialog && /*#__PURE__*/React.createElement(CardEditorDialog, {\n      card: card,\n      open: shouldOpenDialog,\n      handleClose: this.handleDialogClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  reorderCardInList: PropTypes.func.isRequired,\n  reorderList: PropTypes.func.isRequired,\n  moveCardInList: PropTypes.func.isRequired,\n  board: state.scrumboard.board,\n  memberList: state.scrumboard.memberList,\n  labelList: state.scrumboard.labelList\n});\n\nexport default connect(mapStateToProps, {\n  reorderCardInList,\n  reorderList,\n  moveCardInList\n})(ScrumBoardContainer);","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/scrum-board/ScrumBoardContainer.jsx"],"names":["React","Component","DragDropContext","Droppable","Draggable","CardEditorDialog","Scrollbar","BoardList","Avatar","Card","ClickAwayListener","TextField","InputAdornment","IconButton","Icon","Button","connect","PropTypes","addNewColumnInBoard","reorderCardInList","reorderList","moveCardInList","ScrumBoardContainer","state","dataLoaded","list","shouldOpenDialog","shouldOpenAddList","columnTitle","handleCardClick","card","setState","handleDialogClose","handleAddListToggle","value","handleChange","event","key","shiftKey","props","handleAddList","target","onDragEnd","result","source","destination","board","droppableId","id","index","componentDidMount","render","handleAddNewCard","provided","innerRef","droppableProps","map","column","snapshot","placeholder","minWidth","endAdornment","style","padding","mapStateToProps","func","isRequired","scrumboard","memberList","labelList"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport CardEditorDialog from \"./CardEditorDialog\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport BoardList from \"./BoardList\";\nimport {\n  Avatar,\n  Card,\n  ClickAwayListener,\n  TextField,\n  InputAdornment,\n  IconButton,\n  Icon,\n  Button\n} from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addNewColumnInBoard } from \"./ScrumBoardService\";\nimport {\n  reorderCardInList,\n  reorderList,\n  moveCardInList\n} from \"../../redux/actions/ScrumBoardActions\";\n\nclass ScrumBoardContainer extends Component {\n  state = {\n    dataLoaded: false,\n    list: [],\n    shouldOpenDialog: false,\n    shouldOpenAddList: false,\n    columnTitle: \"\"\n  };\n\n  // convert this into a list instead of hard coded state object\n  componentDidMount() {}\n\n  handleCardClick = card => {\n    this.setState({ shouldOpenDialog: true, card: card });\n  };\n\n  handleDialogClose = () => {\n    this.setState({ shouldOpenDialog: false });\n  };\n\n  handleAddListToggle = value => {\n    this.setState({ shouldOpenAddList: value });\n  };\n\n  handleChange = event => {\n    if (event.key === \"Enter\" && !event.shiftKey) {\n      this.props.handleAddList(this.state.columnTitle);\n      this.setState({ columnTitle: \"\" });\n    } else this.setState({ columnTitle: event.target.value });\n  };\n\n  onDragEnd = result => {\n    const { source, destination } = result;\n    let { board, reorderCardInList, moveCardInList, reorderList } = this.props;\n\n    // if dropped outside of list\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === \"horizontal-droppable\") {\n      reorderList(board.id, source.index, destination.index);\n    } else {\n      if (source.droppableId === destination.droppableId) {\n        reorderCardInList(\n          board.id,\n          source.droppableId,\n          source.index,\n          destination.index\n        );\n      } else {\n        moveCardInList(\n          board.id,\n          source.droppableId,\n          destination.droppableId,\n          source,\n          destination\n        );\n      }\n    }\n  };\n\n  // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  render() {\n    let { shouldOpenDialog, shouldOpenAddList, columnTitle, card } = this.state;\n    let { list, handleAddList, handleAddNewCard } = this.props;\n\n    return (\n      <Scrollbar className=\"position-relative flex pb-16 w-100\">\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <Droppable droppableId=\"horizontal-droppable\" direction=\"horizontal\">\n            {provided => (\n              <div\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                className=\"flex\"\n              >\n                {list.map((column, index) => (\n                  <Draggable\n                    key={column.id}\n                    draggableId={column.id}\n                    index={index}\n                    type=\"column\"\n                  >\n                    {(provided, snapshot) => (\n                      <BoardList\n                        data={{ provided, snapshot, column }}\n                        handleCardClick={this.handleCardClick}\n                        handleDialogClose={this.handleDialogClose}\n                        handleAddNewCard={handleAddNewCard}\n                      ></BoardList>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n\n        <div>\n          {shouldOpenAddList ? (\n            <ClickAwayListener\n              onClickAway={() => this.handleAddListToggle(false)}\n            >\n              <Card\n                style={{ minWidth: \"290px\" }}\n                className=\"list-column border-radius-0 cursor-pointer p-16\"\n                elevation={3}\n              >\n                <TextField\n                  className=\"mb-12\"\n                  variant=\"outlined\"\n                  name=\"columnTitle\"\n                  value={columnTitle}\n                  fullWidth\n                  onChange={this.handleChange}\n                  onKeyDown={this.handleChange}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          size=\"small\"\n                          onClick={() => this.handleAddListToggle(false)}\n                        >\n                          <Icon fontSize=\"small\">clear</Icon>\n                        </IconButton>\n                      </InputAdornment>\n                    )\n                  }}\n                  inputProps={{\n                    style: {\n                      padding: \"10px\"\n                    }\n                  }}\n                />\n                <div className=\"flex flex-end\">\n                  <Button\n                    onClick={() => {\n                      handleAddList(columnTitle);\n                      this.setState({ columnTitle: \"\" });\n                    }}\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    Add\n                  </Button>\n                </div>\n              </Card>\n            </ClickAwayListener>\n          ) : (\n            <Card\n              className=\"list-column cursor-pointer flex flex-middle py-16 px-16 bg-light-gray\"\n              elevation={3}\n              style={{ minWidth: \"290px\" }}\n              onClick={() => this.handleAddListToggle(true)}\n            >\n              <Avatar className=\"size-24 bg-error\">+</Avatar>\n              <span className=\"ml-8 font-weight-500\">Add List</span>\n            </Card>\n          )}\n        </div>\n\n        {shouldOpenDialog && (\n          <CardEditorDialog\n            card={card}\n            open={shouldOpenDialog}\n            handleClose={this.handleDialogClose}\n          ></CardEditorDialog>\n        )}\n      </Scrollbar>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  reorderCardInList: PropTypes.func.isRequired,\n  reorderList: PropTypes.func.isRequired,\n  moveCardInList: PropTypes.func.isRequired,\n  board: state.scrumboard.board,\n  memberList: state.scrumboard.memberList,\n  labelList: state.scrumboard.labelList\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    reorderCardInList,\n    reorderList,\n    moveCardInList\n  }\n)(ScrumBoardContainer);\n"]},"metadata":{},"sourceType":"module"}