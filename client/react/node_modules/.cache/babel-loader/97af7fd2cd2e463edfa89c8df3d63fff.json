{"ast":null,"code":"var _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\charts\\\\react-vis\\\\ColoredLineChart.jsx\";\nimport React, { Component } from \"react\";\nimport { XAxis, FlexibleWidthXYPlot, YAxis // HorizontalGridLines,\n// VerticalGridLines,\n, LineSeries } from \"react-vis\";\nimport { withStyles } from \"@material-ui/core\";\n\nclass ColoredLineChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n\n    this.loadData = () => {\n      let temp = [];\n\n      for (let i = 0; i < 20; i++) {\n        const series = [];\n\n        for (let j = 0; j < 100; j++) {\n          series.push({\n            x: j,\n            y: (i / 10 + 1) * Math.sin(Math.PI * (i + j) / 50)\n          });\n        }\n\n        temp.push({\n          color: i,\n          key: i,\n          data: series,\n          opacity: 0.8\n        });\n      }\n\n      this.setState({\n        data: [...temp]\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.loadData();\n  }\n\n  render() {\n    let data = this.state.data;\n    let theme = this.props.theme;\n    return /*#__PURE__*/React.createElement(FlexibleWidthXYPlot, {\n      height: 320,\n      colorType: \"linear\",\n      colorDomain: [0, 9],\n      colorRange: [\"yellow\", \"orange\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(XAxis, {\n      style: {\n        text: {\n          stroke: \"none\",\n          fill: theme.palette.text.secondary,\n          fontWeight: 600\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      style: {\n        text: {\n          stroke: \"none\",\n          fill: theme.palette.text.secondary,\n          fontWeight: 600\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), data.map(props => /*#__PURE__*/React.createElement(LineSeries, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nexport default withStyles({}, {\n  withTheme: true\n})(ColoredLineChart);","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/charts/react-vis/ColoredLineChart.jsx"],"names":["React","Component","XAxis","FlexibleWidthXYPlot","YAxis","LineSeries","withStyles","ColoredLineChart","state","data","loadData","temp","i","series","j","push","x","y","Math","sin","PI","color","key","opacity","setState","componentWillMount","render","theme","props","text","stroke","fill","palette","secondary","fontWeight","map","withTheme"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SACEC,KADF,EAEEC,mBAFF,EAGEC,KAHF,CAIE;AACA;AALF,EAMEC,UANF,QAOO,WAPP;AAQA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,MAAMC,gBAAN,SAA+BN,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCO,KADuC,GAC/B;AACNC,MAAAA,IAAI,EAAE;AADA,KAD+B;;AAAA,SAKvCC,QALuC,GAK5B,MAAM;AACf,UAAIC,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,cAAMC,MAAM,GAAG,EAAf;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5BD,UAAAA,MAAM,CAACE,IAAP,CAAY;AACVC,YAAAA,CAAC,EAAEF,CADO;AAEVG,YAAAA,CAAC,EAAE,CAACL,CAAC,GAAG,EAAJ,GAAS,CAAV,IAAeM,IAAI,CAACC,GAAL,CAAUD,IAAI,CAACE,EAAL,IAAWR,CAAC,GAAGE,CAAf,CAAD,GAAsB,EAA/B;AAFR,WAAZ;AAID;;AACDH,QAAAA,IAAI,CAACI,IAAL,CAAU;AAAEM,UAAAA,KAAK,EAAET,CAAT;AAAYU,UAAAA,GAAG,EAAEV,CAAjB;AAAoBH,UAAAA,IAAI,EAAEI,MAA1B;AAAkCU,UAAAA,OAAO,EAAE;AAA3C,SAAV;AACD;;AAED,WAAKC,QAAL,CAAc;AACZf,QAAAA,IAAI,EAAE,CAAC,GAAGE,IAAJ;AADM,OAAd;AAGD,KArBsC;AAAA;;AAuBvCc,EAAAA,kBAAkB,GAAG;AACnB,SAAKf,QAAL;AACD;;AAEDgB,EAAAA,MAAM,GAAG;AAAA,QACDjB,IADC,GACQ,KAAKD,KADb,CACDC,IADC;AAAA,QAEDkB,KAFC,GAES,KAAKC,KAFd,CAEDD,KAFC;AAGP,wBACE,oBAAC,mBAAD;AACE,MAAA,MAAM,EAAE,GADV;AAEE,MAAA,SAAS,EAAC,QAFZ;AAGE,MAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,CAHf;AAIE,MAAA,UAAU,EAAE,CAAC,QAAD,EAAW,QAAX,CAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE;AACLE,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAE,MADJ;AAEJC,UAAAA,IAAI,EAAEJ,KAAK,CAACK,OAAN,CAAcH,IAAd,CAAmBI,SAFrB;AAGJC,UAAAA,UAAU,EAAE;AAHR;AADD,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,eAiBE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE;AACLL,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAE,MADJ;AAEJC,UAAAA,IAAI,EAAEJ,KAAK,CAACK,OAAN,CAAcH,IAAd,CAAmBI,SAFrB;AAGJC,UAAAA,UAAU,EAAE;AAHR;AADD,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,EA0BGzB,IAAI,CAAC0B,GAAL,CAASP,KAAK,iBACb,oBAAC,UAAD,oBAAgBA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD,CA1BH,CADF;AAgCD;;AA9DsC;;AAiEzC,eAAetB,UAAU,CAAC,EAAD,EAAK;AAAE8B,EAAAA,SAAS,EAAE;AAAb,CAAL,CAAV,CAAoC7B,gBAApC,CAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport {\n  XAxis,\n  FlexibleWidthXYPlot,\n  YAxis,\n  // HorizontalGridLines,\n  // VerticalGridLines,\n  LineSeries\n} from \"react-vis\";\nimport { withStyles } from \"@material-ui/core\";\n\nclass ColoredLineChart extends Component {\n  state = {\n    data: []\n  };\n\n  loadData = () => {\n    let temp = [];\n    for (let i = 0; i < 20; i++) {\n      const series = [];\n      for (let j = 0; j < 100; j++) {\n        series.push({\n          x: j,\n          y: (i / 10 + 1) * Math.sin((Math.PI * (i + j)) / 50)\n        });\n      }\n      temp.push({ color: i, key: i, data: series, opacity: 0.8 });\n    }\n\n    this.setState({\n      data: [...temp]\n    });\n  };\n\n  componentWillMount() {\n    this.loadData();\n  }\n\n  render() {\n    let { data } = this.state;\n    let { theme } = this.props;\n    return (\n      <FlexibleWidthXYPlot\n        height={320}\n        colorType=\"linear\"\n        colorDomain={[0, 9]}\n        colorRange={[\"yellow\", \"orange\"]}\n      >\n        {/* <HorizontalGridLines /> */}\n        {/* <VerticalGridLines /> */}\n        <XAxis\n          style={{\n            text: {\n              stroke: \"none\",\n              fill: theme.palette.text.secondary,\n              fontWeight: 600\n            }\n          }}\n        />\n        <YAxis\n          style={{\n            text: {\n              stroke: \"none\",\n              fill: theme.palette.text.secondary,\n              fontWeight: 600\n            }\n          }}\n        />\n        {data.map(props => (\n          <LineSeries {...props} />\n        ))}\n      </FlexibleWidthXYPlot>\n    );\n  }\n}\n\nexport default withStyles({}, { withTheme: true })(ColoredLineChart);\n"]},"metadata":{},"sourceType":"module"}