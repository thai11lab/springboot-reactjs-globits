{"ast":null,"code":"var _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\list\\\\AppList.jsx\";\nimport React, { Component } from \"react\";\nimport { isMobile } from \"utils\";\nimport ListTopbar from \"./ListTopbar\";\nimport { getAllList } from \"./ListService\";\nimport ListView from \"./ListView\";\nimport GridView from \"./GridView\";\nimport { Hidden } from \"@material-ui/core\";\n\nclass AppList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.originalList = [];\n    this.state = {\n      textfieldValue: \"\",\n      sliderValue: 30,\n      list: [],\n      viewMode: \"grid\" // list, grid\n\n    };\n\n    this.handleInputChange = event => {\n      event.persist();\n      this.setState({\n        textfieldValue: event.target.value\n      }, () => this.setState({\n        list: this.originalList.filter(item => item.projectName.toLowerCase().match(event.target.value.toLowerCase()))\n      }));\n    };\n\n    this.handleSldierChange = (event, value) => {\n      this.setState({\n        sliderValue: value\n      });\n    };\n\n    this.handleViewChange = view => {\n      this.setState({\n        viewMode: view\n      });\n    };\n  }\n\n  componentDidMount() {\n    getAllList().then(response => {\n      this.originalList = [...response.data];\n      this.setState({\n        list: [...response.data]\n      });\n    });\n  }\n\n  render() {\n    let _this$state = this.state,\n        list = _this$state.list,\n        textfieldValue = _this$state.textfieldValue,\n        sliderValue = _this$state.sliderValue,\n        viewMode = _this$state.viewMode;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list m-sm-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListTopbar, {\n      viewMode: viewMode,\n      handleViewChange: this.handleViewChange,\n      handleInputChange: this.handleInputChange,\n      handleSldierChange: this.handleSldierChange,\n      sliderValue: sliderValue,\n      textfieldValue: textfieldValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Hidden, {\n      xsDown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, viewMode === \"list\" ? /*#__PURE__*/React.createElement(ListView, {\n      list: list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(GridView, {\n      list: list,\n      sliderValue: sliderValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Hidden, {\n      smUp: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(GridView, {\n      list: list,\n      sliderValue: sliderValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default AppList;","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/list/AppList.jsx"],"names":["React","Component","isMobile","ListTopbar","getAllList","ListView","GridView","Hidden","AppList","originalList","state","textfieldValue","sliderValue","list","viewMode","handleInputChange","event","persist","setState","target","value","filter","item","projectName","toLowerCase","match","handleSldierChange","handleViewChange","view","componentDidMount","then","response","data","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { isMobile } from \"utils\";\nimport ListTopbar from \"./ListTopbar\";\nimport { getAllList } from \"./ListService\";\nimport ListView from \"./ListView\";\nimport GridView from \"./GridView\";\nimport { Hidden } from \"@material-ui/core\";\n\nclass AppList extends Component {\n  originalList = [];\n  state = {\n    textfieldValue: \"\",\n    sliderValue: 30,\n    list: [],\n    viewMode: \"grid\" // list, grid\n  };\n\n  handleInputChange = event => {\n    event.persist();\n    this.setState(\n      {\n        textfieldValue: event.target.value\n      },\n      () =>\n        this.setState({\n          list: this.originalList.filter(item =>\n            item.projectName\n              .toLowerCase()\n              .match(event.target.value.toLowerCase())\n          )\n        })\n    );\n  };\n\n  handleSldierChange = (event, value) => {\n    this.setState({\n      sliderValue: value\n    });\n  };\n\n  handleViewChange = view => {\n    this.setState({\n      viewMode: view\n    });\n  };\n\n  componentDidMount() {\n    getAllList().then(response => {\n      this.originalList = [...response.data];\n      this.setState({\n        list: [...response.data]\n      });\n    });\n  }\n\n  render() {\n    let { list, textfieldValue, sliderValue, viewMode } = this.state;\n    return (\n      <div className=\"list m-sm-30\">\n        <div className=\"mb-16\">\n          <ListTopbar\n            viewMode={viewMode}\n            handleViewChange={this.handleViewChange}\n            handleInputChange={this.handleInputChange}\n            handleSldierChange={this.handleSldierChange}\n            sliderValue={sliderValue}\n            textfieldValue={textfieldValue}\n          ></ListTopbar>\n        </div>\n        <Hidden xsDown>\n          {viewMode === \"list\" ? (\n            <ListView list={list}></ListView>\n          ) : (\n            <GridView list={list} sliderValue={sliderValue}></GridView>\n          )}\n        </Hidden>\n\n        <Hidden smUp>\n          <GridView list={list} sliderValue={sliderValue}></GridView>\n        </Hidden>\n      </div>\n    );\n  }\n}\n\nexport default AppList;\n"]},"metadata":{},"sourceType":"module"}