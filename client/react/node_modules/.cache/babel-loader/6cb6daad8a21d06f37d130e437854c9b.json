{"ast":null,"code":"/*! qwest 4.5.0 (https://github.com/pyrsmk/qwest) */\nmodule.exports = function () {\n  var global = typeof window != 'undefined' ? window : self,\n      pinkyswear = require('pinkyswear'),\n      jparam = require('jquery-param'),\n      defaultOptions = {},\n      // Default response type for XDR in auto mode\n  defaultXdrResponseType = 'json',\n      // Default data type\n  defaultDataType = 'post',\n      // Variables for limit mechanism\n  _limit = null,\n      requests = 0,\n      request_stack = [],\n      // Get XMLHttpRequest object\n  getXHR = global.XMLHttpRequest ? function () {\n    return new global.XMLHttpRequest();\n  } : function () {\n    return new ActiveXObject('Microsoft.XMLHTTP');\n  },\n      // Guess XHR version\n  xhr2 = getXHR().responseType === '',\n      // Core function\n  qwest = function qwest(method, url, data, options, before) {\n    // Format\n    method = method.toUpperCase();\n    data = data === undefined ? null : data;\n    options = options || {};\n\n    for (var name in defaultOptions) {\n      if (!(name in options)) {\n        if (typeof defaultOptions[name] == 'object' && typeof options[name] == 'object') {\n          for (var name2 in defaultOptions[name]) {\n            options[name][name2] = defaultOptions[name][name2];\n          }\n        } else {\n          options[name] = defaultOptions[name];\n        }\n      }\n    } // Define variables\n\n\n    var nativeResponseParsing = false,\n        crossOrigin,\n        xhr,\n        xdr = false,\n        timeout,\n        aborted = false,\n        attempts = 0,\n        headers = {},\n        mimeTypes = {\n      text: '*/*',\n      xml: 'text/xml',\n      json: 'application/json',\n      post: 'application/x-www-form-urlencoded',\n      document: 'text/html'\n    },\n        accept = {\n      text: '*/*',\n      xml: 'application/xml; q=1.0, text/xml; q=0.8, */*; q=0.1',\n      json: 'application/json; q=1.0, text/*; q=0.8, */*; q=0.1'\n    },\n        i,\n        j,\n        response,\n        sending = false,\n        // Create the promise\n    promise = pinkyswear(function (pinky) {\n      pinky.abort = function () {\n        if (!aborted) {\n          if (xhr && xhr.readyState != 4) {\n            // https://stackoverflow.com/questions/7287706/ie-9-javascript-error-c00c023f\n            xhr.abort();\n          }\n\n          if (sending) {\n            --requests;\n            sending = false;\n          }\n\n          aborted = true;\n        }\n      };\n\n      pinky.send = function () {\n        // Prevent further send() calls\n        if (sending) {\n          return;\n        } // Reached request limit, get out!\n\n\n        if (requests == _limit) {\n          request_stack.push(pinky);\n          return;\n        } // Verify if the request has not been previously aborted\n\n\n        if (aborted) {\n          if (request_stack.length) {\n            request_stack.shift().send();\n          }\n\n          return;\n        } // The sending is running\n\n\n        ++requests;\n        sending = true; // Get XHR object\n\n        xhr = getXHR();\n\n        if (crossOrigin) {\n          if (!('withCredentials' in xhr) && global.XDomainRequest) {\n            xhr = new XDomainRequest(); // CORS with IE8/9\n\n            xdr = true;\n\n            if (method != 'GET' && method != 'POST') {\n              method = 'POST';\n            }\n          }\n        } // Open connection\n\n\n        if (xdr) {\n          xhr.open(method, url);\n        } else {\n          xhr.open(method, url, options.async, options.user, options.password);\n\n          if (xhr2 && options.async) {\n            xhr.withCredentials = options.withCredentials;\n          }\n        } // Set headers\n\n\n        if (!xdr) {\n          for (var i in headers) {\n            if (headers[i]) {\n              xhr.setRequestHeader(i, headers[i]);\n            }\n          }\n        } // Verify if the response type is supported by the current browser\n\n\n        if (xhr2 && options.responseType != 'auto') {\n          try {\n            xhr.responseType = options.responseType;\n            nativeResponseParsing = xhr.responseType == options.responseType;\n          } catch (e) {}\n        } // Plug response handler\n\n\n        if (xhr2 || xdr) {\n          xhr.onload = handleResponse;\n          xhr.onerror = handleError; // http://cypressnorth.com/programming/internet-explorer-aborting-ajax-requests-fixed/\n\n          if (xdr) {\n            xhr.onprogress = function () {};\n          }\n        } else {\n          xhr.onreadystatechange = function () {\n            if (xhr.readyState == 4) {\n              handleResponse();\n            }\n          };\n        } // Plug timeout\n\n\n        if (options.async) {\n          if ('timeout' in xhr) {\n            xhr.timeout = options.timeout;\n            xhr.ontimeout = handleTimeout;\n          } else {\n            timeout = setTimeout(handleTimeout, options.timeout);\n          }\n        } // http://cypressnorth.com/programming/internet-explorer-aborting-ajax-requests-fixed/\n        else if (xdr) {\n            xhr.ontimeout = function () {};\n          } // Override mime type to ensure the response is well parsed\n\n\n        if (options.responseType != 'auto' && 'overrideMimeType' in xhr) {\n          xhr.overrideMimeType(mimeTypes[options.responseType]);\n        } // Run 'before' callback\n\n\n        if (before) {\n          before(xhr);\n        } // Send request\n\n\n        if (xdr) {\n          // https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest\n          setTimeout(function () {\n            xhr.send(method != 'GET' ? data : null);\n          }, 0);\n        } else {\n          xhr.send(method != 'GET' ? data : null);\n        }\n      };\n\n      return pinky;\n    }),\n        // Handle the response\n    handleResponse = function handleResponse() {\n      var i, responseType; // Stop sending state\n\n      sending = false;\n      clearTimeout(timeout); // Launch next stacked request\n\n      if (request_stack.length) {\n        request_stack.shift().send();\n      } // Verify if the request has not been previously aborted\n\n\n      if (aborted) {\n        return;\n      } // Decrease the number of requests\n\n\n      --requests; // Handle response\n\n      try {\n        // Process response\n        if (nativeResponseParsing) {\n          if ('response' in xhr && xhr.response === null) {\n            throw 'The request response is empty';\n          }\n\n          response = xhr.response;\n        } else {\n          // Guess response type\n          responseType = options.responseType;\n\n          if (responseType == 'auto') {\n            if (xdr) {\n              responseType = defaultXdrResponseType;\n            } else {\n              var ct = xhr.getResponseHeader('Content-Type') || '';\n\n              if (ct.indexOf(mimeTypes.json) > -1) {\n                responseType = 'json';\n              } else if (ct.indexOf(mimeTypes.xml) > -1) {\n                responseType = 'xml';\n              } else {\n                responseType = 'text';\n              }\n            }\n          } // Handle response type\n\n\n          switch (responseType) {\n            case 'json':\n              if (xhr.responseText.length) {\n                try {\n                  if ('JSON' in global) {\n                    response = JSON.parse(xhr.responseText);\n                  } else {\n                    response = new Function('return (' + xhr.responseText + ')')();\n                  }\n                } catch (e) {\n                  throw \"Error while parsing JSON body : \" + e;\n                }\n              }\n\n              break;\n\n            case 'xml':\n              // Based on jQuery's parseXML() function\n              try {\n                // Standard\n                if (global.DOMParser) {\n                  response = new DOMParser().parseFromString(xhr.responseText, 'text/xml');\n                } // IE<9\n                else {\n                    response = new ActiveXObject('Microsoft.XMLDOM');\n                    response.async = 'false';\n                    response.loadXML(xhr.responseText);\n                  }\n              } catch (e) {\n                response = undefined;\n              }\n\n              if (!response || !response.documentElement || response.getElementsByTagName('parsererror').length) {\n                throw 'Invalid XML';\n              }\n\n              break;\n\n            default:\n              response = xhr.responseText;\n          }\n        } // Late status code verification to allow passing data when, per example, a 409 is returned\n        // --- https://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n\n\n        if ('status' in xhr && !/^2|1223/.test(xhr.status)) {\n          throw xhr.status + ' (' + xhr.statusText + ')';\n        } // Fulfilled\n\n\n        promise(true, [xhr, response]);\n      } catch (e) {\n        // Rejected\n        promise(false, [e, xhr, response]);\n      }\n    },\n        // Handle errors\n    handleError = function handleError(message) {\n      if (!aborted) {\n        message = typeof message == 'string' ? message : 'Connection aborted';\n        promise.abort();\n        promise(false, [new Error(message), xhr, null]);\n      }\n    },\n        // Handle timeouts\n    handleTimeout = function handleTimeout() {\n      if (!aborted) {\n        if (!options.attempts || ++attempts != options.attempts) {\n          xhr.abort();\n          sending = false;\n          promise.send();\n        } else {\n          handleError('Timeout (' + url + ')');\n        }\n      }\n    }; // Normalize options\n\n\n    options.async = 'async' in options ? !!options.async : true;\n    options.cache = 'cache' in options ? !!options.cache : false;\n    options.dataType = 'dataType' in options ? options.dataType.toLowerCase() : defaultDataType;\n    options.responseType = 'responseType' in options ? options.responseType.toLowerCase() : 'auto';\n    options.user = options.user || '';\n    options.password = options.password || '';\n    options.withCredentials = !!options.withCredentials;\n    options.timeout = 'timeout' in options ? parseInt(options.timeout, 10) : 30000;\n    options.attempts = 'attempts' in options ? parseInt(options.attempts, 10) : 1; // Guess if we're dealing with a cross-origin request\n\n    i = url.match(/\\/\\/(.+?)\\//);\n    crossOrigin = i && (i[1] ? i[1] != location.host : false); // Prepare data\n\n    if ('ArrayBuffer' in global && data instanceof ArrayBuffer) {\n      options.dataType = 'arraybuffer';\n    } else if ('Blob' in global && data instanceof Blob) {\n      options.dataType = 'blob';\n    } else if ('Document' in global && data instanceof Document) {\n      options.dataType = 'document';\n    } else if ('FormData' in global && data instanceof FormData) {\n      options.dataType = 'formdata';\n    }\n\n    if (data !== null) {\n      switch (options.dataType) {\n        case 'json':\n          data = JSON.stringify(data);\n          break;\n\n        case 'post':\n        case 'queryString':\n          data = jparam(data);\n      }\n    } // Prepare headers\n\n\n    if (options.headers) {\n      var format = function format(match, p1, p2) {\n        return p1 + p2.toUpperCase();\n      };\n\n      for (i in options.headers) {\n        headers[i.replace(/(^|-)([^-])/g, format)] = options.headers[i];\n      }\n    }\n\n    if (!('Content-Type' in headers) && method != 'GET') {\n      if (options.dataType in mimeTypes) {\n        if (mimeTypes[options.dataType]) {\n          headers['Content-Type'] = mimeTypes[options.dataType];\n        }\n      }\n    }\n\n    if (!headers.Accept) {\n      headers.Accept = options.responseType in accept ? accept[options.responseType] : '*/*';\n    }\n\n    if (!crossOrigin && !('X-Requested-With' in headers)) {\n      // (that header breaks in legacy browsers with CORS)\n      headers['X-Requested-With'] = 'XMLHttpRequest';\n    }\n\n    if (!options.cache && !('Cache-Control' in headers)) {\n      headers['Cache-Control'] = 'no-cache';\n    } // Prepare URL\n\n\n    if ((method == 'GET' || options.dataType == 'queryString') && data && typeof data == 'string') {\n      url += (/\\?/.test(url) ? '&' : '?') + data;\n    } // Start the request\n\n\n    if (options.async) {\n      promise.send();\n    } // Return promise\n\n\n    return promise;\n  }; // Define external qwest object\n\n\n  var getNewPromise = function getNewPromise(q) {\n    // Prepare\n    var promises = [],\n        loading = 0,\n        values = []; // Create a new promise to handle all requests\n\n    return pinkyswear(function (pinky) {\n      // Basic request method\n      var method_index = -1,\n          createMethod = function createMethod(method) {\n        return function (url, data, options, before) {\n          var index = ++method_index;\n          ++loading;\n          promises.push(qwest(method, pinky.base + url, data, options, before).then(function (xhr, response) {\n            values[index] = arguments;\n\n            if (! --loading) {\n              pinky(true, values.length == 1 ? values[0] : [values]);\n            }\n          }, function () {\n            pinky(false, arguments);\n          }));\n          return pinky;\n        };\n      }; // Define external API\n\n\n      pinky.get = createMethod('GET');\n      pinky.post = createMethod('POST');\n      pinky.put = createMethod('PUT');\n      pinky['delete'] = createMethod('DELETE');\n\n      pinky['catch'] = function (f) {\n        return pinky.then(null, f);\n      };\n\n      pinky.complete = function (f) {\n        var func = function func() {\n          f(); // otherwise arguments will be passed to the callback\n        };\n\n        return pinky.then(func, func);\n      };\n\n      pinky.map = function (type, url, data, options, before) {\n        return createMethod(type.toUpperCase()).call(this, url, data, options, before);\n      }; // Populate methods from external object\n\n\n      for (var prop in q) {\n        if (!(prop in pinky)) {\n          pinky[prop] = q[prop];\n        }\n      } // Set last methods\n\n\n      pinky.send = function () {\n        for (var i = 0, j = promises.length; i < j; ++i) {\n          promises[i].send();\n        }\n\n        return pinky;\n      };\n\n      pinky.abort = function () {\n        for (var i = 0, j = promises.length; i < j; ++i) {\n          promises[i].abort();\n        }\n\n        return pinky;\n      };\n\n      return pinky;\n    });\n  },\n      q = {\n    base: '',\n    get: function get() {\n      return getNewPromise(q).get.apply(this, arguments);\n    },\n    post: function post() {\n      return getNewPromise(q).post.apply(this, arguments);\n    },\n    put: function put() {\n      return getNewPromise(q).put.apply(this, arguments);\n    },\n    'delete': function _delete() {\n      return getNewPromise(q)['delete'].apply(this, arguments);\n    },\n    map: function map() {\n      return getNewPromise(q).map.apply(this, arguments);\n    },\n    xhr2: xhr2,\n    limit: function limit(by) {\n      _limit = by;\n      return q;\n    },\n    setDefaultOptions: function setDefaultOptions(options) {\n      defaultOptions = options;\n      return q;\n    },\n    setDefaultXdrResponseType: function setDefaultXdrResponseType(type) {\n      defaultXdrResponseType = type.toLowerCase();\n      return q;\n    },\n    setDefaultDataType: function setDefaultDataType(type) {\n      defaultDataType = type.toLowerCase();\n      return q;\n    },\n    getOpenRequests: function getOpenRequests() {\n      return requests;\n    }\n  };\n\n  return q;\n}();","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/node_modules/qwest/src/qwest.js"],"names":["module","exports","global","window","self","pinkyswear","require","jparam","defaultOptions","defaultXdrResponseType","defaultDataType","limit","requests","request_stack","getXHR","XMLHttpRequest","ActiveXObject","xhr2","responseType","qwest","method","url","data","options","before","toUpperCase","undefined","name","name2","nativeResponseParsing","crossOrigin","xhr","xdr","timeout","aborted","attempts","headers","mimeTypes","text","xml","json","post","document","accept","i","j","response","sending","promise","pinky","abort","readyState","send","push","length","shift","XDomainRequest","open","async","user","password","withCredentials","setRequestHeader","e","onload","handleResponse","onerror","handleError","onprogress","onreadystatechange","ontimeout","handleTimeout","setTimeout","overrideMimeType","clearTimeout","ct","getResponseHeader","indexOf","responseText","JSON","parse","Function","DOMParser","parseFromString","loadXML","documentElement","getElementsByTagName","test","status","statusText","message","Error","cache","dataType","toLowerCase","parseInt","match","location","host","ArrayBuffer","Blob","Document","FormData","stringify","format","p1","p2","replace","Accept","getNewPromise","q","promises","loading","values","method_index","createMethod","index","base","then","arguments","get","put","f","complete","func","map","type","call","prop","apply","by","setDefaultOptions","setDefaultXdrResponseType","setDefaultDataType","getOpenRequests"],"mappings":"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","sourcesContent":["/*! qwest 4.5.0 (https://github.com/pyrsmk/qwest) */\n\nmodule.exports = function() {\n\n    var global = typeof window != 'undefined' ? window : self,\n        pinkyswear = require('pinkyswear'),\n        jparam = require('jquery-param'),\n        defaultOptions = {},\n        // Default response type for XDR in auto mode\n        defaultXdrResponseType = 'json',\n        // Default data type\n        defaultDataType = 'post',\n        // Variables for limit mechanism\n        limit = null,\n        requests = 0,\n        request_stack = [],\n        // Get XMLHttpRequest object\n        getXHR = global.XMLHttpRequest? function(){\n            return new global.XMLHttpRequest();\n        }: function(){\n            return new ActiveXObject('Microsoft.XMLHTTP');\n        },\n        // Guess XHR version\n        xhr2 = (getXHR().responseType===''),\n\n    // Core function\n    qwest = function(method, url, data, options, before) {\n        // Format\n        method = method.toUpperCase();\n        data = data === undefined ? null : data;\n        options = options || {};\n        for(var name in defaultOptions) {\n            if(!(name in options)) {\n                if(typeof defaultOptions[name] == 'object' && typeof options[name] == 'object') {\n                    for(var name2 in defaultOptions[name]) {\n                        options[name][name2] = defaultOptions[name][name2];\n                    }\n                }\n                else {\n                    options[name] = defaultOptions[name];\n                }\n            }\n        }\n\n        // Define variables\n        var nativeResponseParsing = false,\n            crossOrigin,\n            xhr,\n            xdr = false,\n            timeout,\n            aborted = false,\n            attempts = 0,\n            headers = {},\n            mimeTypes = {\n                text: '*/*',\n                xml: 'text/xml',\n                json: 'application/json',\n                post: 'application/x-www-form-urlencoded',\n                document: 'text/html'\n            },\n            accept = {\n                text: '*/*',\n                xml: 'application/xml; q=1.0, text/xml; q=0.8, */*; q=0.1',\n                json: 'application/json; q=1.0, text/*; q=0.8, */*; q=0.1'\n            },\n            i, j,\n            response,\n            sending = false,\n\n        // Create the promise\n        promise = pinkyswear(function(pinky) {\n            pinky.abort = function() {\n                if(!aborted) {\n                    if(xhr && xhr.readyState != 4) { // https://stackoverflow.com/questions/7287706/ie-9-javascript-error-c00c023f\n                        xhr.abort();\n                    }\n                    if(sending) {\n                        --requests;\n                        sending = false;\n                    }\n                    aborted = true;\n                }\n            };\n            pinky.send = function() {\n                // Prevent further send() calls\n                if(sending) {\n                    return;\n                }\n                // Reached request limit, get out!\n                if(requests == limit) {\n                    request_stack.push(pinky);\n                    return;\n                }\n                // Verify if the request has not been previously aborted\n                if(aborted) {\n                    if(request_stack.length) {\n                        request_stack.shift().send();\n                    }\n                    return;\n                }\n                // The sending is running\n                ++requests;\n                sending = true;\n                // Get XHR object\n                xhr = getXHR();\n                if(crossOrigin) {\n                    if(!('withCredentials' in xhr) && global.XDomainRequest) {\n                        xhr = new XDomainRequest(); // CORS with IE8/9\n                        xdr = true;\n                        if(method != 'GET' && method != 'POST') {\n                            method = 'POST';\n                        }\n                    }\n                }\n                // Open connection\n                if(xdr) {\n                    xhr.open(method, url);\n                }\n                else {\n                    xhr.open(method, url, options.async, options.user, options.password);\n                    if(xhr2 && options.async) {\n                        xhr.withCredentials = options.withCredentials;\n                    }\n                }\n                // Set headers\n                if(!xdr) {\n                    for(var i in headers) {\n                        if(headers[i]) {\n                            xhr.setRequestHeader(i, headers[i]);\n                        }\n                    }\n                }\n                // Verify if the response type is supported by the current browser\n                if(xhr2 && options.responseType != 'auto') {\n                    try {\n                        xhr.responseType = options.responseType;\n                        nativeResponseParsing = (xhr.responseType == options.responseType);\n                    }\n                    catch(e) {}\n                }\n                // Plug response handler\n                if(xhr2 || xdr) {\n                    xhr.onload = handleResponse;\n                    xhr.onerror = handleError;\n                    // http://cypressnorth.com/programming/internet-explorer-aborting-ajax-requests-fixed/\n                    if(xdr) {\n                        xhr.onprogress = function() {};\n                    }\n                }\n                else {\n                    xhr.onreadystatechange = function() {\n                        if(xhr.readyState == 4) {\n                            handleResponse();\n                        }\n                    };\n                }\n                // Plug timeout\n                if(options.async) {\n                    if('timeout' in xhr) {\n                        xhr.timeout = options.timeout;\n                        xhr.ontimeout = handleTimeout;\n                    }\n                    else {\n                        timeout = setTimeout(handleTimeout, options.timeout);\n                    }\n                }\n                // http://cypressnorth.com/programming/internet-explorer-aborting-ajax-requests-fixed/\n                else if(xdr) {\n                    xhr.ontimeout = function() {};\n                }\n                // Override mime type to ensure the response is well parsed\n                if(options.responseType != 'auto' && 'overrideMimeType' in xhr) {\n                    xhr.overrideMimeType(mimeTypes[options.responseType]);\n                }\n                // Run 'before' callback\n                if(before) {\n                    before(xhr);\n                }\n                // Send request\n                if(xdr) {\n                    // https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest\n                    setTimeout(function() {\n                        xhr.send(method != 'GET'? data : null);\n                    }, 0);\n                }\n                else {\n                    xhr.send(method != 'GET' ? data : null);\n                }\n            };\n            return pinky;\n        }),\n\n        // Handle the response\n        handleResponse = function() {\n            var i, responseType;\n            // Stop sending state\n            sending = false;\n            clearTimeout(timeout);\n            // Launch next stacked request\n            if(request_stack.length) {\n                request_stack.shift().send();\n            }\n            // Verify if the request has not been previously aborted\n            if(aborted) {\n                return;\n            }\n            // Decrease the number of requests\n            --requests;\n            // Handle response\n            try{\n                // Process response\n                if(nativeResponseParsing) {\n                    if('response' in xhr && xhr.response === null) {\n                        throw 'The request response is empty';\n                    }\n                    response = xhr.response;\n                }\n                else {\n                    // Guess response type\n                    responseType = options.responseType;\n                    if(responseType == 'auto') {\n                        if(xdr) {\n                            responseType = defaultXdrResponseType;\n                        }\n                        else {\n                            var ct = xhr.getResponseHeader('Content-Type') || '';\n                            if(ct.indexOf(mimeTypes.json)>-1) {\n                                responseType = 'json';\n                            }\n                            else if(ct.indexOf(mimeTypes.xml) > -1) {\n                                responseType = 'xml';\n                            }\n                            else {\n                                responseType = 'text';\n                            }\n                        }\n                    }\n                    // Handle response type\n                    switch(responseType) {\n                        case 'json':\n                            if(xhr.responseText.length) {\n                                try {\n                                    if('JSON' in global) {\n                                        response = JSON.parse(xhr.responseText);\n                                    }\n                                    else {\n                                        response = new Function('return (' + xhr.responseText + ')')();\n                                    }\n                                }\n                                catch(e) {\n                                    throw \"Error while parsing JSON body : \"+e;\n                                }\n                            }\n                            break;\n                        case 'xml':\n                            // Based on jQuery's parseXML() function\n                            try {\n                                // Standard\n                                if(global.DOMParser) {\n                                    response = (new DOMParser()).parseFromString(xhr.responseText,'text/xml');\n                                }\n                                // IE<9\n                                else {\n                                    response = new ActiveXObject('Microsoft.XMLDOM');\n                                    response.async = 'false';\n                                    response.loadXML(xhr.responseText);\n                                }\n                            }\n                            catch(e) {\n                                response = undefined;\n                            }\n                            if(!response || !response.documentElement || response.getElementsByTagName('parsererror').length) {\n                                throw 'Invalid XML';\n                            }\n                            break;\n                        default:\n                            response = xhr.responseText;\n                    }\n                }\n                // Late status code verification to allow passing data when, per example, a 409 is returned\n                // --- https://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n                if('status' in xhr && !/^2|1223/.test(xhr.status)) {\n                    throw xhr.status + ' (' + xhr.statusText + ')';\n                }\n                // Fulfilled\n                promise(true, [xhr, response]);\n            }\n            catch(e) {\n                // Rejected\n                promise(false, [e, xhr, response]);\n            }\n        },\n\n        // Handle errors\n        handleError = function(message) {\n            if(!aborted) {\n                message = typeof message == 'string' ? message : 'Connection aborted';\n                promise.abort();\n                promise(false, [new Error(message), xhr, null]);\n            }\n        },\n\n        // Handle timeouts\n        handleTimeout = function() {\n            if(!aborted) {\n                if(!options.attempts || ++attempts != options.attempts) {\n                    xhr.abort();\n                    sending = false;\n                    promise.send();\n                }\n                else {\n                    handleError('Timeout (' + url + ')');\n                }\n            }\n        };\n\n        // Normalize options\n        options.async = 'async' in options ? !!options.async : true;\n        options.cache = 'cache' in options ? !!options.cache : false;\n        options.dataType = 'dataType' in options ? options.dataType.toLowerCase() : defaultDataType;\n        options.responseType = 'responseType' in options ? options.responseType.toLowerCase() : 'auto';\n        options.user = options.user || '';\n        options.password = options.password || '';\n        options.withCredentials = !!options.withCredentials;\n        options.timeout = 'timeout' in options ? parseInt(options.timeout, 10) : 30000;\n        options.attempts = 'attempts' in options ? parseInt(options.attempts, 10) : 1;\n\n        // Guess if we're dealing with a cross-origin request\n        i = url.match(/\\/\\/(.+?)\\//);\n        crossOrigin = i && (i[1] ? i[1] != location.host : false);\n\n        // Prepare data\n        if('ArrayBuffer' in global && data instanceof ArrayBuffer) {\n            options.dataType = 'arraybuffer';\n        }\n        else if('Blob' in global && data instanceof Blob) {\n            options.dataType = 'blob';\n        }\n        else if('Document' in global && data instanceof Document) {\n            options.dataType = 'document';\n        }\n        else if('FormData' in global && data instanceof FormData) {\n            options.dataType = 'formdata';\n        }\n        if(data !== null) {\n            switch(options.dataType) {\n                case 'json':\n                    data = JSON.stringify(data);\n                    break;\n                case 'post':\n                case 'queryString':\n                    data = jparam(data);\n            }\n        }\n\n        // Prepare headers\n        if(options.headers) {\n            var format = function(match,p1,p2) {\n                return p1 + p2.toUpperCase();\n            };\n            for(i in options.headers) {\n                headers[i.replace(/(^|-)([^-])/g,format)] = options.headers[i];\n            }\n        }\n        if(!('Content-Type' in headers) && method!='GET') {\n            if(options.dataType in mimeTypes) {\n                if(mimeTypes[options.dataType]) {\n                    headers['Content-Type'] = mimeTypes[options.dataType];\n                }\n            }\n        }\n        if(!headers.Accept) {\n            headers.Accept = (options.responseType in accept) ? accept[options.responseType] : '*/*';\n        }\n        if(!crossOrigin && !('X-Requested-With' in headers)) { // (that header breaks in legacy browsers with CORS)\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        if(!options.cache && !('Cache-Control' in headers)) {\n            headers['Cache-Control'] = 'no-cache';\n        }\n\n        // Prepare URL\n        if((method == 'GET' || options.dataType == 'queryString') && data && typeof data == 'string') {\n            url += (/\\?/.test(url)?'&':'?') + data;\n        }\n\n        // Start the request\n        if(options.async) {\n            promise.send();\n        }\n\n        // Return promise\n        return promise;\n\n    };\n\n    // Define external qwest object\n    var getNewPromise = function(q) {\n            // Prepare\n            var promises = [],\n                loading = 0,\n                values = [];\n            // Create a new promise to handle all requests\n            return pinkyswear(function(pinky) {\n                // Basic request method\n                var method_index = -1,\n                    createMethod = function(method) {\n                        return function(url, data, options, before) {\n                            var index = ++method_index;\n                            ++loading;\n                            promises.push(qwest(method, pinky.base + url, data, options, before).then(function(xhr, response) {\n                                values[index] = arguments;\n                                if(!--loading) {\n                                    pinky(true, values.length == 1 ? values[0] : [values]);\n                                }\n                            }, function() {\n                                pinky(false, arguments);\n                            }));\n                            return pinky;\n                        };\n                    };\n                // Define external API\n                pinky.get = createMethod('GET');\n                pinky.post = createMethod('POST');\n                pinky.put = createMethod('PUT');\n                pinky['delete'] = createMethod('DELETE');\n                pinky['catch'] = function(f) {\n                    return pinky.then(null, f);\n                };\n                pinky.complete = function(f) {\n                    var func = function() {\n                        f(); // otherwise arguments will be passed to the callback\n                    };\n                    return pinky.then(func, func);\n                };\n                pinky.map = function(type, url, data, options, before) {\n                    return createMethod(type.toUpperCase()).call(this, url, data, options, before);\n                };\n                // Populate methods from external object\n                for(var prop in q) {\n                    if(!(prop in pinky)) {\n                        pinky[prop] = q[prop];\n                    }\n                }\n                // Set last methods\n                pinky.send = function() {\n                    for(var i=0, j=promises.length; i<j; ++i) {\n                        promises[i].send();\n                    }\n                    return pinky;\n                };\n                pinky.abort = function() {\n                    for(var i=0, j=promises.length; i<j; ++i) {\n                        promises[i].abort();\n                    }\n                    return pinky;\n                };\n                return pinky;\n            });\n        },\n        q = {\n            base: '',\n            get: function() {\n                return getNewPromise(q).get.apply(this, arguments);\n            },\n            post: function() {\n                return getNewPromise(q).post.apply(this, arguments);\n            },\n            put: function() {\n                return getNewPromise(q).put.apply(this, arguments);\n            },\n            'delete': function() {\n                return getNewPromise(q)['delete'].apply(this, arguments);\n            },\n            map: function() {\n                return getNewPromise(q).map.apply(this, arguments);\n            },\n            xhr2: xhr2,\n            limit: function(by) {\n                limit = by;\n                return q;\n            },\n            setDefaultOptions: function(options) {\n                defaultOptions = options;\n                return q;\n            },\n            setDefaultXdrResponseType: function(type) {\n                defaultXdrResponseType = type.toLowerCase();\n                return q;\n            },\n            setDefaultDataType: function(type) {\n                defaultDataType = type.toLowerCase();\n                return q;\n            },\n            getOpenRequests: function() {\n                return requests;\n            }\n        };\n\n    return q;\n\n}();\n"]},"metadata":{},"sourceType":"script"}