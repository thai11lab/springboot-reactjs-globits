{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\GlobitsTableMDB\\\\TableFoot\\\\TableFoot.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst TableFoot = props => {\n  const children = props.children,\n        color = props.color,\n        columns = props.columns,\n        textWhite = props.textWhite,\n        attributes = _objectWithoutProperties(props, [\"children\", \"color\", \"columns\", \"textWhite\"]);\n\n  const isTheadColor = color === 'dark' || color === 'light';\n  const classes = classNames({\n    'text-white': textWhite,\n    [\"thead-\".concat(color)]: color && isTheadColor,\n    [\"\".concat(color)]: color && !isTheadColor\n  });\n  return /*#__PURE__*/React.createElement(\"thead\", Object.assign({\n    \"data-test\": \"table-foot\"\n  }, attributes, {\n    className: classes || undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }), columns && /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, columns.map(col => /*#__PURE__*/React.createElement(\"th\", {\n    key: col.field,\n    className: col.hasOwnProperty('minimal') ? \"th-\".concat(col.minimal) : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, col.label))), children);\n};\n\nTableFoot.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.string,\n  columns: PropTypes.arrayOf(PropTypes.object),\n  textWhite: PropTypes.bool\n};\nTableFoot.defaultProps = {\n  textWhite: false\n};\nexport default TableFoot;\nexport { TableFoot as MDBTableFoot };","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/GlobitsTableMDB/TableFoot/TableFoot.js"],"names":["React","PropTypes","classNames","TableFoot","props","children","color","columns","textWhite","attributes","isTheadColor","classes","undefined","map","col","field","hasOwnProperty","minimal","label","propTypes","node","string","arrayOf","object","bool","defaultProps","MDBTableFoot"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA,QACjBC,QADiB,GACsCD,KADtC,CACjBC,QADiB;AAAA,QACPC,KADO,GACsCF,KADtC,CACPE,KADO;AAAA,QACAC,OADA,GACsCH,KADtC,CACAG,OADA;AAAA,QACSC,SADT,GACsCJ,KADtC,CACSI,SADT;AAAA,QACuBC,UADvB,4BACsCL,KADtC;;AAGzB,QAAMM,YAAY,GAAGJ,KAAK,KAAK,MAAV,IAAoBA,KAAK,KAAK,OAAnD;AAEA,QAAMK,OAAO,GAAGT,UAAU,CAAC;AACzB,kBAAcM,SADW;AAEzB,qBAAUF,KAAV,IAAoBA,KAAK,IAAII,YAFJ;AAGzB,eAAIJ,KAAJ,IAAcA,KAAK,IAAI,CAACI;AAHC,GAAD,CAA1B;AAMA,sBACE;AACE,iBAAU;AADZ,KAEMD,UAFN;AAGE,IAAA,SAAS,EAAEE,OAAO,IAAIC,SAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKGL,OAAO,iBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,CAACM,GAAR,CAAYC,GAAG,iBACd;AACE,IAAA,GAAG,EAAEA,GAAG,CAACC,KADX;AAEE,IAAA,SAAS,EACPD,GAAG,CAACE,cAAJ,CAAmB,SAAnB,iBAAsCF,GAAG,CAACG,OAA1C,IAAsDL,SAH1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGE,GAAG,CAACI,KANP,CADD,CADH,CANJ,EAmBGb,QAnBH,CADF;AAuBD,CAlCD;;AAoCAF,SAAS,CAACgB,SAAV,GAAsB;AACpBd,EAAAA,QAAQ,EAAEJ,SAAS,CAACmB,IADA;AAEpBd,EAAAA,KAAK,EAAEL,SAAS,CAACoB,MAFG;AAGpBd,EAAAA,OAAO,EAAEN,SAAS,CAACqB,OAAV,CAAkBrB,SAAS,CAACsB,MAA5B,CAHW;AAIpBf,EAAAA,SAAS,EAAEP,SAAS,CAACuB;AAJD,CAAtB;AAOArB,SAAS,CAACsB,YAAV,GAAyB;AACvBjB,EAAAA,SAAS,EAAE;AADY,CAAzB;AAIA,eAAeL,SAAf;AACA,SAASA,SAAS,IAAIuB,YAAtB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst TableFoot = props => {\n  const { children, color, columns, textWhite, ...attributes } = props;\n\n  const isTheadColor = color === 'dark' || color === 'light';\n\n  const classes = classNames({\n    'text-white': textWhite,\n    [`thead-${color}`]: color && isTheadColor,\n    [`${color}`]: color && !isTheadColor\n  });\n\n  return (\n    <thead\n      data-test='table-foot'\n      {...attributes}\n      className={classes || undefined}\n    >\n      {columns && (\n        <tr>\n          {columns.map(col => (\n            <th\n              key={col.field}\n              className={\n                col.hasOwnProperty('minimal') ? `th-${col.minimal}` : undefined\n              }\n            >\n              {col.label}\n            </th>\n          ))}\n        </tr>\n      )}\n      {children}\n    </thead>\n  );\n};\n\nTableFoot.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.string,\n  columns: PropTypes.arrayOf(PropTypes.object),\n  textWhite: PropTypes.bool\n};\n\nTableFoot.defaultProps = {\n  textWhite: false\n};\n\nexport default TableFoot;\nexport { TableFoot as MDBTableFoot };\n"]},"metadata":{},"sourceType":"module"}