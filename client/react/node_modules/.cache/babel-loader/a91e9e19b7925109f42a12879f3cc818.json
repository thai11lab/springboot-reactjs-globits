{"ast":null,"code":"var _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\charts\\\\victory-charts\\\\RadarChart.jsx\";\nimport React from \"react\";\nimport { VictoryChart, VictoryTheme, VictoryArea, VictoryGroup, VictoryPolarAxis, VictoryLabel } from \"victory\";\nconst characterData = [{\n  strength: 1,\n  intelligence: 250,\n  luck: 1,\n  stealth: 40,\n  charisma: 50\n}, {\n  strength: 2,\n  intelligence: 300,\n  luck: 2,\n  stealth: 80,\n  charisma: 90\n}, {\n  strength: 5,\n  intelligence: 225,\n  luck: 3,\n  stealth: 60,\n  charisma: 120\n}];\n\nclass RadarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.processData(characterData),\n      maxima: this.getMaxima(characterData)\n    };\n  }\n\n  getMaxima(data) {\n    const groupedData = Object.keys(data[0]).reduce((memo, key) => {\n      memo[key] = data.map(d => d[key]);\n      return memo;\n    }, {});\n    return Object.keys(groupedData).reduce((memo, key) => {\n      memo[key] = Math.max(...groupedData[key]);\n      return memo;\n    }, {});\n  }\n\n  processData(data) {\n    const maxByGroup = this.getMaxima(data);\n\n    const makeDataArray = d => {\n      return Object.keys(d).map(key => {\n        return {\n          x: key,\n          y: d[key] / maxByGroup[key]\n        };\n      });\n    };\n\n    return data.map(datum => makeDataArray(datum));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h-320\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(VictoryChart, {\n      polar: true,\n      theme: VictoryTheme.material,\n      domain: {\n        y: [0, 1]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(VictoryGroup, {\n      colorScale: [\"gold\", \"orange\", \"tomato\"],\n      style: {\n        data: {\n          fillOpacity: 0.2,\n          strokeWidth: 2\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, this.state.data.map((data, i) => {\n      return /*#__PURE__*/React.createElement(VictoryArea, {\n        key: i,\n        data: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 22\n        }\n      });\n    })), Object.keys(this.state.maxima).map((key, i) => {\n      return /*#__PURE__*/React.createElement(VictoryPolarAxis, {\n        key: i,\n        dependentAxis: true,\n        style: {\n          axisLabel: {\n            padding: 10\n          },\n          axis: {\n            stroke: \"none\"\n          },\n          grid: {\n            stroke: \"grey\",\n            strokeWidth: 0.25,\n            opacity: 0.5\n          }\n        },\n        tickLabelComponent: /*#__PURE__*/React.createElement(VictoryLabel, {\n          labelPlacement: \"vertical\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 37\n          }\n        }),\n        labelPlacement: \"perpendicular\",\n        axisValue: i + 1,\n        label: key,\n        tickFormat: t => Math.ceil(t * this.state.maxima[key]),\n        tickValues: [0.25, 0.5, 0.75],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      });\n    }), /*#__PURE__*/React.createElement(VictoryPolarAxis, {\n      labelPlacement: \"parallel\",\n      tickFormat: () => \"\",\n      style: {\n        axis: {\n          stroke: \"none\"\n        },\n        grid: {\n          stroke: \"grey\",\n          opacity: 0.5\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default RadarChart;","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/charts/victory-charts/RadarChart.jsx"],"names":["React","VictoryChart","VictoryTheme","VictoryArea","VictoryGroup","VictoryPolarAxis","VictoryLabel","characterData","strength","intelligence","luck","stealth","charisma","RadarChart","Component","constructor","props","state","data","processData","maxima","getMaxima","groupedData","Object","keys","reduce","memo","key","map","d","Math","max","maxByGroup","makeDataArray","x","y","datum","render","material","fillOpacity","strokeWidth","i","axisLabel","padding","axis","stroke","grid","opacity","t","ceil"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,YADF,EAEEC,YAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,gBALF,EAMEC,YANF,QAOO,SAPP;AASA,MAAMC,aAAa,GAAG,CACpB;AAAEC,EAAAA,QAAQ,EAAE,CAAZ;AAAeC,EAAAA,YAAY,EAAE,GAA7B;AAAkCC,EAAAA,IAAI,EAAE,CAAxC;AAA2CC,EAAAA,OAAO,EAAE,EAApD;AAAwDC,EAAAA,QAAQ,EAAE;AAAlE,CADoB,EAEpB;AAAEJ,EAAAA,QAAQ,EAAE,CAAZ;AAAeC,EAAAA,YAAY,EAAE,GAA7B;AAAkCC,EAAAA,IAAI,EAAE,CAAxC;AAA2CC,EAAAA,OAAO,EAAE,EAApD;AAAwDC,EAAAA,QAAQ,EAAE;AAAlE,CAFoB,EAGpB;AAAEJ,EAAAA,QAAQ,EAAE,CAAZ;AAAeC,EAAAA,YAAY,EAAE,GAA7B;AAAkCC,EAAAA,IAAI,EAAE,CAAxC;AAA2CC,EAAAA,OAAO,EAAE,EAApD;AAAwDC,EAAAA,QAAQ,EAAE;AAAlE,CAHoB,CAAtB;;AAMA,MAAMC,UAAN,SAAyBb,KAAK,CAACc,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,KAAKC,WAAL,CAAiBZ,aAAjB,CADK;AAEXa,MAAAA,MAAM,EAAE,KAAKC,SAAL,CAAed,aAAf;AAFG,KAAb;AAID;;AAEDc,EAAAA,SAAS,CAACH,IAAD,EAAO;AACd,UAAMI,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYN,IAAI,CAAC,CAAD,CAAhB,EAAqBO,MAArB,CAA4B,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC7DD,MAAAA,IAAI,CAACC,GAAD,CAAJ,GAAYT,IAAI,CAACU,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACF,GAAD,CAAf,CAAZ;AACA,aAAOD,IAAP;AACD,KAHmB,EAGjB,EAHiB,CAApB;AAIA,WAAOH,MAAM,CAACC,IAAP,CAAYF,WAAZ,EAAyBG,MAAzB,CAAgC,CAACC,IAAD,EAAOC,GAAP,KAAe;AACpDD,MAAAA,IAAI,CAACC,GAAD,CAAJ,GAAYG,IAAI,CAACC,GAAL,CAAS,GAAGT,WAAW,CAACK,GAAD,CAAvB,CAAZ;AACA,aAAOD,IAAP;AACD,KAHM,EAGJ,EAHI,CAAP;AAID;;AAEDP,EAAAA,WAAW,CAACD,IAAD,EAAO;AAChB,UAAMc,UAAU,GAAG,KAAKX,SAAL,CAAeH,IAAf,CAAnB;;AACA,UAAMe,aAAa,GAAGJ,CAAC,IAAI;AACzB,aAAON,MAAM,CAACC,IAAP,CAAYK,CAAZ,EAAeD,GAAf,CAAmBD,GAAG,IAAI;AAC/B,eAAO;AAAEO,UAAAA,CAAC,EAAEP,GAAL;AAAUQ,UAAAA,CAAC,EAAEN,CAAC,CAACF,GAAD,CAAD,GAASK,UAAU,CAACL,GAAD;AAAhC,SAAP;AACD,OAFM,CAAP;AAGD,KAJD;;AAKA,WAAOT,IAAI,CAACU,GAAL,CAASQ,KAAK,IAAIH,aAAa,CAACG,KAAD,CAA/B,CAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,KAAK,EAAEnC,YAAY,CAACoC,QAFtB;AAGE,MAAA,MAAM,EAAE;AAAEH,QAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAL,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,YAAD;AACE,MAAA,UAAU,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,CADd;AAEE,MAAA,KAAK,EAAE;AAAEjB,QAAAA,IAAI,EAAE;AAAEqB,UAAAA,WAAW,EAAE,GAAf;AAAoBC,UAAAA,WAAW,EAAE;AAAjC;AAAR,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,KAAKvB,KAAL,CAAWC,IAAX,CAAgBU,GAAhB,CAAoB,CAACV,IAAD,EAAOuB,CAAP,KAAa;AAChC,0BAAO,oBAAC,WAAD;AAAa,QAAA,GAAG,EAAEA,CAAlB;AAAqB,QAAA,IAAI,EAAEvB,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFA,CAJH,CALF,EAaGK,MAAM,CAACC,IAAP,CAAY,KAAKP,KAAL,CAAWG,MAAvB,EAA+BQ,GAA/B,CAAmC,CAACD,GAAD,EAAMc,CAAN,KAAY;AAC9C,0BACE,oBAAC,gBAAD;AACE,QAAA,GAAG,EAAEA,CADP;AAEE,QAAA,aAAa,MAFf;AAGE,QAAA,KAAK,EAAE;AACLC,UAAAA,SAAS,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX,WADN;AAELC,UAAAA,IAAI,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAFD;AAGLC,UAAAA,IAAI,EAAE;AAAED,YAAAA,MAAM,EAAE,MAAV;AAAkBL,YAAAA,WAAW,EAAE,IAA/B;AAAqCO,YAAAA,OAAO,EAAE;AAA9C;AAHD,SAHT;AAQE,QAAA,kBAAkB,eAAE,oBAAC,YAAD;AAAc,UAAA,cAAc,EAAC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARtB;AASE,QAAA,cAAc,EAAC,eATjB;AAUE,QAAA,SAAS,EAAEN,CAAC,GAAG,CAVjB;AAWE,QAAA,KAAK,EAAEd,GAXT;AAYE,QAAA,UAAU,EAAEqB,CAAC,IAAIlB,IAAI,CAACmB,IAAL,CAAUD,CAAC,GAAG,KAAK/B,KAAL,CAAWG,MAAX,CAAkBO,GAAlB,CAAd,CAZnB;AAaE,QAAA,UAAU,EAAE,CAAC,IAAD,EAAO,GAAP,EAAY,IAAZ,CAbd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAiBD,KAlBA,CAbH,eAgCE,oBAAC,gBAAD;AACE,MAAA,cAAc,EAAC,UADjB;AAEE,MAAA,UAAU,EAAE,MAAM,EAFpB;AAGE,MAAA,KAAK,EAAE;AACLiB,QAAAA,IAAI,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SADD;AAELC,QAAAA,IAAI,EAAE;AAAED,UAAAA,MAAM,EAAE,MAAV;AAAkBE,UAAAA,OAAO,EAAE;AAA3B;AAFD,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCF,CADF,CADF;AA6CD;;AA5EsC;;AA+EzC,eAAelC,UAAf","sourcesContent":["import React from \"react\";\nimport {\n  VictoryChart,\n  VictoryTheme,\n  VictoryArea,\n  VictoryGroup,\n  VictoryPolarAxis,\n  VictoryLabel\n} from \"victory\";\n\nconst characterData = [\n  { strength: 1, intelligence: 250, luck: 1, stealth: 40, charisma: 50 },\n  { strength: 2, intelligence: 300, luck: 2, stealth: 80, charisma: 90 },\n  { strength: 5, intelligence: 225, luck: 3, stealth: 60, charisma: 120 }\n];\n\nclass RadarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.processData(characterData),\n      maxima: this.getMaxima(characterData)\n    };\n  }\n\n  getMaxima(data) {\n    const groupedData = Object.keys(data[0]).reduce((memo, key) => {\n      memo[key] = data.map(d => d[key]);\n      return memo;\n    }, {});\n    return Object.keys(groupedData).reduce((memo, key) => {\n      memo[key] = Math.max(...groupedData[key]);\n      return memo;\n    }, {});\n  }\n\n  processData(data) {\n    const maxByGroup = this.getMaxima(data);\n    const makeDataArray = d => {\n      return Object.keys(d).map(key => {\n        return { x: key, y: d[key] / maxByGroup[key] };\n      });\n    };\n    return data.map(datum => makeDataArray(datum));\n  }\n\n  render() {\n    return (\n      <div className=\"h-320\">\n        <VictoryChart\n          polar\n          theme={VictoryTheme.material}\n          domain={{ y: [0, 1] }}\n        >\n          <VictoryGroup\n            colorScale={[\"gold\", \"orange\", \"tomato\"]}\n            style={{ data: { fillOpacity: 0.2, strokeWidth: 2 } }}\n          >\n            {this.state.data.map((data, i) => {\n              return <VictoryArea key={i} data={data} />;\n            })}\n          </VictoryGroup>\n          {Object.keys(this.state.maxima).map((key, i) => {\n            return (\n              <VictoryPolarAxis\n                key={i}\n                dependentAxis\n                style={{\n                  axisLabel: { padding: 10 },\n                  axis: { stroke: \"none\" },\n                  grid: { stroke: \"grey\", strokeWidth: 0.25, opacity: 0.5 }\n                }}\n                tickLabelComponent={<VictoryLabel labelPlacement=\"vertical\" />}\n                labelPlacement=\"perpendicular\"\n                axisValue={i + 1}\n                label={key}\n                tickFormat={t => Math.ceil(t * this.state.maxima[key])}\n                tickValues={[0.25, 0.5, 0.75]}\n              />\n            );\n          })}\n          <VictoryPolarAxis\n            labelPlacement=\"parallel\"\n            tickFormat={() => \"\"}\n            style={{\n              axis: { stroke: \"none\" },\n              grid: { stroke: \"grey\", opacity: 0.5 }\n            }}\n          />\n        </VictoryChart>\n      </div>\n    );\n  }\n}\n\nexport default RadarChart;\n"]},"metadata":{},"sourceType":"module"}