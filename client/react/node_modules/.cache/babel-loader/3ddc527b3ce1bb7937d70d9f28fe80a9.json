{"ast":null,"code":"import _objectSpread from \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\CRUD\\\\MemberEditorDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid, FormControlLabel, Switch } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { getUserById, updateUser } from \"./TableService\";\nimport { generateRandomId } from \"utils\";\n\nclass MemberEditorDialog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      balance: \"\",\n      age: \"\",\n      company: \"\",\n      address: \"\",\n      isActive: false\n    };\n\n    this.handleChange = (event, source) => {\n      event.persist();\n\n      if (source === \"switch\") {\n        this.setState({\n          isActive: event.target.checked\n        });\n        return;\n      }\n\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = () => {\n      let id = this.state.id;\n\n      if (id) {\n        updateUser(_objectSpread({}, this.state)).then(() => {\n          this.props.handleClose();\n        });\n      } else {\n        addNewUser(_objectSpread({\n          id: generateRandomId()\n        }, this.state)).then(() => {\n          this.props.handleClose();\n        });\n      }\n    };\n  }\n\n  componentWillMount() {\n    getUserById(this.props.uid).then(data => this.setState(_objectSpread({}, data.data)));\n  }\n\n  render() {\n    let _this$state = this.state,\n        name = _this$state.name,\n        email = _this$state.email,\n        phone = _this$state.phone,\n        balance = _this$state.balance,\n        age = _this$state.age,\n        company = _this$state.company,\n        address = _this$state.address,\n        isActive = _this$state.isActive;\n    let _this$props = this.props,\n        open = _this$props.open,\n        handleClose = _this$props.handleClose;\n    return /*#__PURE__*/React.createElement(Dialog, {\n      onClose: handleClose,\n      open: open,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mb-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \"Update Member\"), /*#__PURE__*/React.createElement(ValidatorForm, {\n      ref: \"form\",\n      onSubmit: this.handleFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: \"mb-16\",\n      container: true,\n      spacing: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"w-100 mb-16\",\n      label: \"Name\",\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"name\",\n      value: name,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"w-100 mb-16\",\n      label: \"Email\",\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"email\",\n      value: email,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"w-100 mb-16\",\n      label: \"Phone\",\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"phone\",\n      value: phone,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"w-100 mb-16\",\n      label: \"Balance\",\n      onChange: this.handleChange,\n      type: \"number\",\n      name: \"balance\",\n      value: balance,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"w-100 mb-16\",\n      label: \"Age\",\n      onChange: this.handleChange,\n      type: \"number\",\n      name: \"age\",\n      value: age,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"w-100 mb-16\",\n      label: \"Company\",\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"company\",\n      value: company,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"w-100 mb-16\",\n      label: \"Address\",\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"address\",\n      value: address,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      className: \"my-20\",\n      control: /*#__PURE__*/React.createElement(Switch, {\n        checked: isActive,\n        onChange: event => this.handleChange(event, \"switch\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }\n      }),\n      label: \"Active Customer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-space-between flex-middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.props.handleClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, \"Cancel\")))));\n  }\n\n}\n\nexport default MemberEditorDialog;","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/CRUD/MemberEditorDialog.jsx"],"names":["React","Component","Dialog","Button","Grid","FormControlLabel","Switch","ValidatorForm","TextValidator","getUserById","updateUser","generateRandomId","MemberEditorDialog","state","name","email","phone","balance","age","company","address","isActive","handleChange","event","source","persist","setState","target","checked","value","handleFormSubmit","id","then","props","handleClose","addNewUser","componentWillMount","uid","data","render","open"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Dialog,\n  Button,\n  Grid,\n  FormControlLabel,\n  Switch\n} from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { getUserById, updateUser } from \"./TableService\";\nimport { generateRandomId } from \"utils\";\n\nclass MemberEditorDialog extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    balance: \"\",\n    age: \"\",\n    company: \"\",\n    address: \"\",\n    isActive: false\n  };\n\n  handleChange = (event, source) => {\n    event.persist();\n    if (source === \"switch\") {\n      this.setState({ isActive: event.target.checked });\n      return;\n    }\n\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleFormSubmit = () => {\n    let { id } = this.state;\n    if (id) {\n      updateUser({\n        ...this.state\n      }).then(() => {\n        this.props.handleClose();\n      });\n    } else {\n      addNewUser({\n        id: generateRandomId(),\n        ...this.state\n      }).then(() => {\n        this.props.handleClose();\n      });\n    }\n  };\n\n  componentWillMount() {\n    getUserById(this.props.uid).then(data => this.setState({ ...data.data }));\n  }\n\n  render() {\n    let {\n      name,\n      email,\n      phone,\n      balance,\n      age,\n      company,\n      address,\n      isActive\n    } = this.state;\n    let { open, handleClose } = this.props;\n\n    return (\n      <Dialog onClose={handleClose} open={open}>\n        <div className=\"p-24\">\n          <h4 className=\"mb-20\">Update Member</h4>\n          <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\n            <Grid className=\"mb-16\" container spacing={4}>\n              <Grid item sm={6} xs={12}>\n                <TextValidator\n                  className=\"w-100 mb-16\"\n                  label=\"Name\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  validators={[\"required\"]}\n                  errorMessages={[\"this field is required\"]}\n                />\n                <TextValidator\n                  className=\"w-100 mb-16\"\n                  label=\"Email\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"email\"\n                  value={email}\n                  validators={[\"required\"]}\n                  errorMessages={[\"this field is required\"]}\n                />\n\n                <TextValidator\n                  className=\"w-100 mb-16\"\n                  label=\"Phone\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"phone\"\n                  value={phone}\n                  validators={[\"required\"]}\n                  errorMessages={[\"this field is required\"]}\n                />\n\n                <TextValidator\n                  className=\"w-100 mb-16\"\n                  label=\"Balance\"\n                  onChange={this.handleChange}\n                  type=\"number\"\n                  name=\"balance\"\n                  value={balance}\n                  validators={[\"required\"]}\n                  errorMessages={[\"this field is required\"]}\n                />\n              </Grid>\n\n              <Grid item sm={6} xs={12}>\n                <TextValidator\n                  className=\"w-100 mb-16\"\n                  label=\"Age\"\n                  onChange={this.handleChange}\n                  type=\"number\"\n                  name=\"age\"\n                  value={age}\n                  validators={[\"required\"]}\n                  errorMessages={[\"this field is required\"]}\n                />\n                <TextValidator\n                  className=\"w-100 mb-16\"\n                  label=\"Company\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"company\"\n                  value={company}\n                  validators={[\"required\"]}\n                  errorMessages={[\"this field is required\"]}\n                />\n                <TextValidator\n                  className=\"w-100 mb-16\"\n                  label=\"Address\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"address\"\n                  value={address}\n                  validators={[\"required\"]}\n                  errorMessages={[\"this field is required\"]}\n                />\n\n                <FormControlLabel\n                  className=\"my-20\"\n                  control={\n                    <Switch\n                      checked={isActive}\n                      onChange={event => this.handleChange(event, \"switch\")}\n                    />\n                  }\n                  label=\"Active Customer\"\n                />\n              </Grid>\n            </Grid>\n\n            <div className=\"flex flex-space-between flex-middle\">\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Save\n              </Button>\n              <Button onClick={() => this.props.handleClose()}>Cancel</Button>\n            </div>\n          </ValidatorForm>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default MemberEditorDialog;\n"]},"metadata":{},"sourceType":"module"}