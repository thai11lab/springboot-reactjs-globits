{"ast":null,"code":"var _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\auth\\\\Auth.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { setUserData } from \"../redux/actions/UserActions\";\nimport jwtAuthService from \"../services/jwtAuthService\";\nimport localStorageService from \"../services/localStorageService\";\nimport firebaseAuthService from \"../services/firebase/firebaseAuthService\";\n\nclass Auth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.checkJwtAuth = () => {\n      jwtAuthService.loginWithToken().then(user => {\n        this.props.setUserData(user);\n      });\n    };\n\n    this.checkFirebaseAuth = () => {\n      firebaseAuthService.checkAuthStatus(user => {\n        if (user) {\n          console.log(user.uid);\n          console.log(user.email);\n          console.log(user.emailVerified);\n        } else {\n          console.log(\"not logged in\");\n        }\n      });\n    };\n\n    this.props.setUserData(localStorageService.getItem(\"auth_user\"));\n    this.checkJwtAuth(); // this.checkFirebaseAuth();\n  }\n\n  render() {\n    const children = this.props.children;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }\n    }, children);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  setUserData: PropTypes.func.isRequired,\n  login: state.login\n});\n\nexport default connect(mapStateToProps, {\n  setUserData\n})(Auth);","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/auth/Auth.jsx"],"names":["React","Component","Fragment","connect","PropTypes","setUserData","jwtAuthService","localStorageService","firebaseAuthService","Auth","constructor","props","state","checkJwtAuth","loginWithToken","then","user","checkFirebaseAuth","checkAuthStatus","console","log","uid","email","emailVerified","getItem","render","children","mapStateToProps","func","isRequired","login"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,mBAAP,MAAgC,iCAAhC;AACA,OAAOC,mBAAP,MAAgC,0CAAhC;;AAEA,MAAMC,IAAN,SAAmBR,SAAnB,CAA6B;AAG3BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAFnBC,KAEmB,GAFX,EAEW;;AAAA,SAQnBC,YARmB,GAQJ,MAAM;AACnBP,MAAAA,cAAc,CAACQ,cAAf,GAAgCC,IAAhC,CAAqCC,IAAI,IAAI;AAC3C,aAAKL,KAAL,CAAWN,WAAX,CAAuBW,IAAvB;AACD,OAFD;AAGD,KAZkB;;AAAA,SAcnBC,iBAdmB,GAcC,MAAM;AACxBT,MAAAA,mBAAmB,CAACU,eAApB,CAAoCF,IAAI,IAAI;AAC1C,YAAIA,IAAJ,EAAU;AACRG,UAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,GAAjB;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACM,KAAjB;AACAH,UAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACO,aAAjB;AACD,SAJD,MAIO;AACLJ,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;AACF,OARD;AASD,KAxBkB;;AAGjB,SAAKT,KAAL,CAAWN,WAAX,CAAuBE,mBAAmB,CAACiB,OAApB,CAA4B,WAA5B,CAAvB;AACA,SAAKX,YAAL,GAJiB,CAKjB;AACD;;AAoBDY,EAAAA,MAAM,GAAG;AAAA,UACCC,QADD,GACc,KAAKf,KADnB,CACCe,QADD;AAEP,wBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWA,QAAX,CAAP;AACD;;AAhC0B;;AAmC7B,MAAMC,eAAe,GAAGf,KAAK,KAAK;AAChCP,EAAAA,WAAW,EAAED,SAAS,CAACwB,IAAV,CAAeC,UADI;AAEhCC,EAAAA,KAAK,EAAElB,KAAK,CAACkB;AAFmB,CAAL,CAA7B;;AAKA,eAAe3B,OAAO,CACpBwB,eADoB,EAEpB;AAAEtB,EAAAA;AAAF,CAFoB,CAAP,CAGbI,IAHa,CAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { setUserData } from \"../redux/actions/UserActions\";\nimport jwtAuthService from \"../services/jwtAuthService\";\nimport localStorageService from \"../services/localStorageService\";\nimport firebaseAuthService from \"../services/firebase/firebaseAuthService\";\n\nclass Auth extends Component {\n  state = {};\n  \n  constructor(props) {\n    super(props);\n\n    this.props.setUserData(localStorageService.getItem(\"auth_user\"));\n    this.checkJwtAuth();\n    // this.checkFirebaseAuth();\n  }\n\n  checkJwtAuth = () => {\n    jwtAuthService.loginWithToken().then(user => {\n      this.props.setUserData(user);\n    });\n  };\n\n  checkFirebaseAuth = () => {\n    firebaseAuthService.checkAuthStatus(user => {\n      if (user) {\n        console.log(user.uid);\n        console.log(user.email);\n        console.log(user.emailVerified);\n      } else {\n        console.log(\"not logged in\");\n      }\n    });\n  };\n\n  render() {\n    const { children } = this.props;\n    return <Fragment>{children}</Fragment>;\n  }\n}\n\nconst mapStateToProps = state => ({\n  setUserData: PropTypes.func.isRequired,\n  login: state.login\n});\n\nexport default connect(\n  mapStateToProps,\n  { setUserData }\n)(Auth);\n"]},"metadata":{},"sourceType":"module"}