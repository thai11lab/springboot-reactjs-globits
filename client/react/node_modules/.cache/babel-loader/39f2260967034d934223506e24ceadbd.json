{"ast":null,"code":"var _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\EgretLayout\\\\SharedCompoents\\\\LanguageSelect.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing.unit * 2\n  }\n});\n\nclass LanguageSelect extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selected: 'vi',\n      hasError: false\n    };\n  }\n\n  handleChange(value) {\n    //alert(t('description.part1'));\n    const _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n,\n          classes = _this$props.classes;\n    i18n.changeLanguage(value);\n    this.setState({\n      selected: value\n    });\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n,\n          classes = _this$props2.classes;\n    const _this$state = this.state,\n          selected = _this$state.selected,\n          hasError = _this$state.hasError;\n    let language = 'vi';\n\n    const changeLanguage = lng => {\n      i18n.changeLanguage(lng);\n    };\n\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.root,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      error: hasError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"name\",\n      value: selected,\n      onChange: event => this.handleChange(event.target.value),\n      input: /*#__PURE__*/React.createElement(Input, {\n        id: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 20\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"vi\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"Ti\\u1EBFng Vi\\u1EC7t\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"de\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"Deutsch\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"en\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"English\")), hasError && /*#__PURE__*/React.createElement(FormHelperText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 24\n      }\n    }, \"This is required!\")));\n  }\n\n}\n\nLanguageSelect.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(LanguageSelect);","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/EgretLayout/SharedCompoents/LanguageSelect.jsx"],"names":["React","PropTypes","withStyles","Input","InputLabel","MenuItem","FormHelperText","FormControl","Select","styles","theme","root","display","flexWrap","formControl","margin","spacing","unit","minWidth","selectEmpty","marginTop","LanguageSelect","Component","state","selected","hasError","handleChange","value","props","t","i18n","classes","changeLanguage","setState","render","language","lng","event","target","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nclass LanguageSelect extends React.Component {\r\n\r\n\r\n  state = {\r\n    selected: 'vi',\r\n    hasError: false\r\n  };\r\n\r\n  handleChange(value) {\r\n    //alert(t('description.part1'));\r\n    const { t, i18n,classes } = this.props;\r\n    i18n.changeLanguage(value);\r\n    this.setState({ selected: value });\r\n  }\r\n  render() {\r\n    const { t, i18n,classes } = this.props;\r\n    const { selected, hasError } = this.state;\r\n    let language= 'vi';\r\n    const changeLanguage = lng => {\r\n      i18n.changeLanguage(lng);\r\n    };  \r\n    return (\r\n      <form className={classes.root} autoComplete=\"off\">\r\n        <FormControl className={classes.formControl} error={hasError}>\r\n          <InputLabel htmlFor=\"name\">Name</InputLabel>\r\n          <Select\r\n            name=\"name\"\r\n            value={selected}\r\n            onChange={event => this.handleChange(event.target.value)}\r\n            input={<Input id=\"name\" />}\r\n          >\r\n            <MenuItem value=\"vi\">Tiếng Việt</MenuItem>\r\n            <MenuItem value=\"de\">Deutsch</MenuItem>\r\n            <MenuItem value=\"en\">English</MenuItem>\r\n          </Select>\r\n          {hasError && <FormHelperText>This is required!</FormHelperText>}\r\n        </FormControl>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nLanguageSelect.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(LanguageSelect);\r\n"]},"metadata":{},"sourceType":"module"}