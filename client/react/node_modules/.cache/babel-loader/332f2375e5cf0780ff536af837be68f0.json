{"ast":null,"code":"var _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\charts\\\\react-vis\\\\VisBarChart.jsx\";\nimport React from \"react\";\nimport { FlexibleWidthXYPlot, XAxis, YAxis, VerticalBarSeries, VerticalBarSeriesCanvas, LabelSeries } from \"react-vis\";\nimport { withStyles } from \"@material-ui/core\";\nconst greenData = [{\n  x: \"A\",\n  y: 10\n}, {\n  x: \"B\",\n  y: 5\n}, {\n  x: \"C\",\n  y: 15\n}];\nconst blueData = [{\n  x: \"A\",\n  y: 12\n}, {\n  x: \"B\",\n  y: 2\n}, {\n  x: \"C\",\n  y: 11\n}];\nconst labelData = greenData.map((d, idx) => ({\n  x: d.x,\n  y: Math.max(greenData[idx].y, blueData[idx].y)\n}));\n\nclass VisBarChart extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      useCanvas: false\n    };\n  }\n\n  render() {\n    const useCanvas = this.state.useCanvas;\n    let theme = this.props.theme;\n    const BarSeries = useCanvas ? VerticalBarSeriesCanvas : VerticalBarSeries;\n    return /*#__PURE__*/React.createElement(FlexibleWidthXYPlot, {\n      xType: \"ordinal\",\n      height: 300,\n      xDistance: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(XAxis, {\n      style: {\n        text: {\n          stroke: \"none\",\n          fill: theme.palette.text.secondary,\n          fontWeight: 600\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      style: {\n        text: {\n          stroke: \"none\",\n          fill: theme.palette.text.secondary,\n          fontWeight: 600\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(BarSeries, {\n      className: \"vertical-bar-series-example\",\n      data: greenData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(BarSeries, {\n      data: blueData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(LabelSeries, {\n      data: labelData,\n      getLabel: d => d.x,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default withStyles({}, {\n  withTheme: true\n})(VisBarChart);","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/charts/react-vis/VisBarChart.jsx"],"names":["React","FlexibleWidthXYPlot","XAxis","YAxis","VerticalBarSeries","VerticalBarSeriesCanvas","LabelSeries","withStyles","greenData","x","y","blueData","labelData","map","d","idx","Math","max","VisBarChart","Component","state","useCanvas","render","theme","props","BarSeries","text","stroke","fill","palette","secondary","fontWeight","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  FlexibleWidthXYPlot,\n  XAxis,\n  YAxis,\n  VerticalBarSeries,\n  VerticalBarSeriesCanvas,\n  LabelSeries\n} from \"react-vis\";\nimport { withStyles } from \"@material-ui/core\";\n\nconst greenData = [{ x: \"A\", y: 10 }, { x: \"B\", y: 5 }, { x: \"C\", y: 15 }];\n\nconst blueData = [{ x: \"A\", y: 12 }, { x: \"B\", y: 2 }, { x: \"C\", y: 11 }];\n\nconst labelData = greenData.map((d, idx) => ({\n  x: d.x,\n  y: Math.max(greenData[idx].y, blueData[idx].y)\n}));\n\nclass VisBarChart extends React.Component {\n  state = {\n    useCanvas: false\n  };\n\n  render() {\n    const { useCanvas } = this.state;\n    let { theme } = this.props;\n    const BarSeries = useCanvas ? VerticalBarSeriesCanvas : VerticalBarSeries;\n    return (\n      <FlexibleWidthXYPlot xType=\"ordinal\" height={300} xDistance={100}>\n        <XAxis\n          style={{\n            text: {\n              stroke: \"none\",\n              fill: theme.palette.text.secondary,\n              fontWeight: 600\n            }\n          }}\n        />\n        <YAxis\n          style={{\n            text: {\n              stroke: \"none\",\n              fill: theme.palette.text.secondary,\n              fontWeight: 600\n            }\n          }}\n        />\n        <BarSeries className=\"vertical-bar-series-example\" data={greenData} />\n        <BarSeries data={blueData} />\n        <LabelSeries data={labelData} getLabel={d => d.x} />\n      </FlexibleWidthXYPlot>\n    );\n  }\n}\n\nexport default withStyles({}, { withTheme: true })(VisBarChart);\n"]},"metadata":{},"sourceType":"module"}