{"ast":null,"code":"var _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\GlobitsDatatableMDB\\\\DataTablePagination\\\\DataTablePagination.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Pagination from '../Pagination';\nimport PageItem from '../Pagination/PageItem';\nimport PageLink from '../Pagination/PageLink';\n\nclass DataTablePagination extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pages: this.props.pages,\n      pGroups: []\n    };\n\n    this.componentDidUpdate = prevProps => {\n      const pages = this.props.pages;\n\n      if (prevProps.pages !== pages) {\n        this.setState({\n          pages: pages\n        }, () => this.groupPages());\n      }\n    };\n\n    this.pagesIndexify = () => {\n      const pages = this.state.pages;\n      const mutablePages = [...pages];\n      mutablePages.forEach((page, index) => page.index = index);\n      return mutablePages;\n    };\n\n    this.groupPages = () => {\n      const pGroups = [];\n      const pages = this.pagesIndexify();\n      const pagesAmount = this.props.pagesAmount;\n\n      while (pages.length > 0) {\n        pGroups.push(pages.splice(0, pagesAmount));\n      }\n\n      this.setState({\n        pGroups\n      });\n    };\n\n    this.choosePagesGroup = () => {\n      const _this$props = this.props,\n            activePage = _this$props.activePage,\n            pagesAmount = _this$props.pagesAmount;\n      const pGroups = this.state.pGroups;\n      const pGroupNumber = Math.floor(activePage / pagesAmount);\n      return pGroups.length ? pGroups[pGroupNumber] : [];\n    };\n  }\n\n  componentDidMount() {\n    this.groupPages();\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          activePage = _this$props2.activePage,\n          changeActivePage = _this$props2.changeActivePage,\n          pages = _this$props2.pages,\n          label = _this$props2.label,\n          visibleLabel = _this$props2.visibleLabel;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-test\": \"datatable-pagination\",\n      className: \"col-sm-12 col-md-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dataTables_paginate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Pagination, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(PageItem, {\n      disabled: activePage <= 0,\n      visible: visibleLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PageLink, {\n      className: \"page-link\",\n      \"aria-label\": label[0],\n      onClick: () => changeActivePage(activePage - 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, label[0]))), this.choosePagesGroup().map(page => /*#__PURE__*/React.createElement(PageItem, {\n      key: Object.keys(page[0])[0] + page.index,\n      active: page.index === activePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PageLink, {\n      className: \"page-link\",\n      onClick: () => changeActivePage(page.index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, page.index + 1, page.index === activePage && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, \"(current)\")))), /*#__PURE__*/React.createElement(PageItem, {\n      disabled: !pages.length || activePage === pages.length - 1,\n      visible: visibleLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PageLink, {\n      className: \"page-link\",\n      \"aria-label\": label[1],\n      onClick: () => changeActivePage(activePage + 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, label[1]))))));\n  }\n\n}\n\nDataTablePagination.propTypes = {\n  activePage: PropTypes.number.isRequired,\n  activePage: PropTypes.bool.isRequired,\n  changeActivePage: PropTypes.func.isRequired,\n  label: PropTypes.arrayOf(PropTypes.string).isRequired,\n  pages: PropTypes.array.isRequired,\n  pagesAmount: PropTypes.number.isRequired\n};\nexport default DataTablePagination;\nexport { DataTablePagination as MDBDataTablePagination };","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/GlobitsDatatableMDB/DataTablePagination/DataTablePagination.js"],"names":["React","Component","PropTypes","Pagination","PageItem","PageLink","DataTablePagination","state","pages","props","pGroups","componentDidUpdate","prevProps","setState","groupPages","pagesIndexify","mutablePages","forEach","page","index","pagesAmount","length","push","splice","choosePagesGroup","activePage","pGroupNumber","Math","floor","componentDidMount","render","changeActivePage","label","visibleLabel","map","Object","keys","propTypes","number","isRequired","bool","func","arrayOf","string","array","MDBDataTablePagination"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Pagination from '../Pagination';\nimport PageItem from '../Pagination/PageItem';\nimport PageLink from '../Pagination/PageLink';\n\nclass DataTablePagination extends Component {\n  state = {\n    pages: this.props.pages,\n    pGroups: []\n  };\n\n  componentDidMount() {\n    this.groupPages();\n  }\n\n  componentDidUpdate = prevProps => {\n    const { pages } = this.props;\n\n    if (prevProps.pages !== pages) {\n      this.setState({ pages: pages }, () => this.groupPages());\n    }\n  };\n\n  pagesIndexify = () => {\n    const { pages } = this.state;\n\n    const mutablePages = [...pages];\n    mutablePages.forEach((page, index) => (page.index = index));\n    return mutablePages;\n  };\n\n  groupPages = () => {\n    const pGroups = [];\n    const pages = this.pagesIndexify();\n    const { pagesAmount } = this.props;\n\n    while (pages.length > 0) {\n      pGroups.push(pages.splice(0, pagesAmount));\n    }\n\n    this.setState({ pGroups });\n  };\n\n  choosePagesGroup = () => {\n    const { activePage, pagesAmount } = this.props;\n    const { pGroups } = this.state;\n    const pGroupNumber = Math.floor(activePage / pagesAmount);\n    return pGroups.length ? pGroups[pGroupNumber] : [];\n  };\n\n  render() {\n    const { activePage, changeActivePage, pages, label, visibleLabel} = this.props;\n\n    return (\n      <div data-test='datatable-pagination' className='col-sm-12 col-md-7'>\n        <div className='dataTables_paginate'>\n          <Pagination>\n            <PageItem disabled={activePage <= 0} visible={visibleLabel}>\n              <PageLink\n                className='page-link'\n                aria-label={label[0]}                \n                onClick={() => changeActivePage(activePage - 1)}\n              >\n                <span>{label[0]}</span>\n              </PageLink>\n            </PageItem>\n\n            {this.choosePagesGroup().map(page => (\n              <PageItem\n                key={Object.keys(page[0])[0] + page.index}\n                active={page.index === activePage}\n              >\n                <PageLink\n                  className='page-link'\n                  onClick={() => changeActivePage(page.index)}\n                >\n                  {page.index + 1}\n                  {page.index === activePage && (\n                    <span className='sr-only'>(current)</span>\n                  )}\n                </PageLink>\n              </PageItem>\n            ))}\n\n            <PageItem\n              disabled={!pages.length || activePage === pages.length - 1}\n              visible={visibleLabel}\n            >\n              <PageLink\n                className='page-link'\n                aria-label={label[1]}\n                onClick={() => changeActivePage(activePage + 1)}\n              >\n                <span>{label[1]}</span>\n              </PageLink>\n            </PageItem>\n          </Pagination>\n        </div>\n      </div>\n    );\n  }\n}\n\nDataTablePagination.propTypes = {\n  activePage: PropTypes.number.isRequired,\n  activePage:PropTypes.bool.isRequired,\n  changeActivePage: PropTypes.func.isRequired,\n  label: PropTypes.arrayOf(PropTypes.string).isRequired,\n  pages: PropTypes.array.isRequired,\n  pagesAmount: PropTypes.number.isRequired\n};\n\nexport default DataTablePagination;\nexport { DataTablePagination as MDBDataTablePagination };\n"]},"metadata":{},"sourceType":"module"}