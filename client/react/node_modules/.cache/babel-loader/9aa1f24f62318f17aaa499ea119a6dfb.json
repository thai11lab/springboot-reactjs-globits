{"ast":null,"code":"import _objectSpread from \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\EgretLayout\\\\Layout1\\\\Layout1Sidenav.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Icon, withStyles, MenuItem, Tooltip, IconButton, MuiThemeProvider } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { setLayoutSettings, setDefaultSettings } from \"app/redux/actions/LayoutActions\";\nimport { logoutUser } from \"app/redux/actions/UserActions\";\nimport { withRouter } from \"react-router-dom\";\nimport { EgretMenu } from \"egret\";\nimport Sidenav from \"../SharedCompoents/Sidenav\";\nimport Brand from \"../SharedCompoents/Brand\";\nimport SidenavTheme from \"../EgretTheme/SidenavTheme\";\nimport { isMdScreen } from \"utils\";\n\nconst styles = theme => ({});\n\nconst IconButtonWhite = withStyles(theme => ({\n  root: {\n    // color: theme.palette.getContrastText(purple[500]),\n    backgroundColor: \"transparent\",\n    padding: \"5px\"\n  }\n}))(IconButton);\nconst IconSmall = withStyles(() => ({\n  root: {\n    fontSize: \"1rem\"\n  }\n}))(Icon);\n\nclass Layout1Sidenav extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sidenavToggleChecked: false,\n      hidden: true\n    };\n\n    this.updateSidebarMode = sidebarSettings => {\n      let _this$props = this.props,\n          settings = _this$props.settings,\n          setLayoutSettings = _this$props.setLayoutSettings,\n          setDefaultSettings = _this$props.setDefaultSettings;\n\n      const updatedSettings = _objectSpread(_objectSpread({}, settings), {}, {\n        layout1Settings: _objectSpread(_objectSpread({}, settings.layout1Settings), {}, {\n          leftSidebar: _objectSpread(_objectSpread({}, settings.layout1Settings.leftSidebar), sidebarSettings)\n        })\n      });\n\n      setLayoutSettings(updatedSettings);\n      setDefaultSettings(updatedSettings);\n    };\n\n    this.handleSidenavToggle = () => {\n      let sidenavToggleChecked = this.state.sidenavToggleChecked;\n      let mode = sidenavToggleChecked ? \"full\" : \"compact\";\n      this.updateSidebarMode({\n        mode\n      });\n      this.setState({\n        sidenavToggleChecked: !sidenavToggleChecked\n      });\n    };\n\n    this.handleSignOut = () => {\n      this.props.logoutUser();\n    };\n\n    this.renderLogoSwitch = () =>\n    /*#__PURE__*/\n    // Open Brand component file to replace logo and text\n    React.createElement(Brand, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      className: \"sidenav__toggle hide-on-mobile\",\n      onChange: this.handleSidenavToggle,\n      checked: this.state.sidenavToggleChecked,\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }));\n\n    this.renderUser = () => {\n      let user = this.props.user;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sidenav__user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"username-photo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: user.photoURL,\n        alt: \"user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, user.displayName)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"user__menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(EgretMenu, {\n        menuButton: /*#__PURE__*/React.createElement(Tooltip, {\n          title: \"Settings\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(IconButtonWhite, {\n          \"aria-label\": \"Delete\",\n          className: \"\",\n          size: \"small\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(IconSmall, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 19\n          }\n        }, \" settings \"))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        className: \"flex flex-middle\",\n        style: {\n          minWidth: 185\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }\n      }, \" home \"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"pl-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }\n      }, \" Home \")), /*#__PURE__*/React.createElement(MenuItem, {\n        className: \"flex flex-middle\",\n        style: {\n          minWidth: 185\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }\n      }, \" settings \"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"pl-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }\n      }, \" Account Setting \"))), /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Profile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(IconButtonWhite, {\n        \"aria-label\": \"Delete\",\n        className: \"\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IconSmall, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }\n      }, \"person\"))), /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Sign out\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(IconButtonWhite, {\n        \"aria-label\": \"Delete\",\n        className: \"\",\n        size: \"small\",\n        onClick: this.handleSignOut,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IconSmall, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }\n      }, \"exit_to_app\")))));\n    };\n  }\n\n  componentWillMount() {\n    // CLOSE SIDENAV ON ROUTE CHANGE ON MOBILE\n    this.unlistenRouteChange = this.props.history.listen((location, action) => {\n      if (isMdScreen()) {\n        this.updateSidebarMode({\n          mode: \"close\"\n        });\n      }\n    });\n    setTimeout(() => {\n      this.setState({\n        hidden: false\n      });\n    }, 400);\n  }\n\n  componentWillUnmount() {\n    this.unlistenRouteChange();\n  }\n\n  render() {\n    let _this$props2 = this.props,\n        theme = _this$props2.theme,\n        settings = _this$props2.settings;\n    const sidenavTheme = settings.themes[settings.layout1Settings.leftSidebar.theme] || theme;\n    return /*#__PURE__*/React.createElement(MuiThemeProvider, {\n      theme: sidenavTheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SidenavTheme, {\n      theme: sidenavTheme,\n      settings: settings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidenav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidenav__hold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, !this.state.hidden && /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }, this.renderLogoSwitch(), /*#__PURE__*/React.createElement(Sidenav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, this.renderUser())))));\n  }\n\n}\n\nLayout1Sidenav.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  setDefaultSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setDefaultSettings: PropTypes.func.isRequired,\n  setLayoutSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: state.user,\n  settings: state.layout.settings\n});\n\nexport default withStyles(styles, {\n  withTheme: true\n})(withRouter(connect(mapStateToProps, {\n  setLayoutSettings,\n  setDefaultSettings,\n  logoutUser\n})(Layout1Sidenav)));","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/EgretLayout/Layout1/Layout1Sidenav.jsx"],"names":["React","Component","Fragment","PropTypes","Switch","Icon","withStyles","MenuItem","Tooltip","IconButton","MuiThemeProvider","connect","setLayoutSettings","setDefaultSettings","logoutUser","withRouter","EgretMenu","Sidenav","Brand","SidenavTheme","isMdScreen","styles","theme","IconButtonWhite","root","backgroundColor","padding","IconSmall","fontSize","Layout1Sidenav","state","sidenavToggleChecked","hidden","updateSidebarMode","sidebarSettings","props","settings","updatedSettings","layout1Settings","leftSidebar","handleSidenavToggle","mode","setState","handleSignOut","renderLogoSwitch","renderUser","user","photoURL","displayName","minWidth","componentWillMount","unlistenRouteChange","history","listen","location","action","setTimeout","componentWillUnmount","render","sidenavTheme","themes","propTypes","func","isRequired","object","mapStateToProps","layout","withTheme"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Switch,\n  Icon,\n  withStyles,\n  MenuItem,\n  Tooltip,\n  IconButton,\n  MuiThemeProvider\n} from \"@material-ui/core\";\n\nimport { connect } from \"react-redux\";\nimport {\n  setLayoutSettings,\n  setDefaultSettings\n} from \"app/redux/actions/LayoutActions\";\nimport { logoutUser } from \"app/redux/actions/UserActions\";\nimport { withRouter } from \"react-router-dom\";\nimport { EgretMenu } from \"egret\";\nimport Sidenav from \"../SharedCompoents/Sidenav\";\nimport Brand from \"../SharedCompoents/Brand\";\nimport SidenavTheme from \"../EgretTheme/SidenavTheme\";\nimport { isMdScreen } from \"utils\";\n\nconst styles = theme => ({});\n\nconst IconButtonWhite = withStyles(theme => ({\n  root: {\n    // color: theme.palette.getContrastText(purple[500]),\n    backgroundColor: \"transparent\",\n    padding: \"5px\"\n  }\n}))(IconButton);\n\nconst IconSmall = withStyles(() => ({\n  root: {\n    fontSize: \"1rem\"\n  }\n}))(Icon);\n\nclass Layout1Sidenav extends Component {\n  state = {\n    sidenavToggleChecked: false,\n    hidden: true\n  };\n\n  componentWillMount() {\n    // CLOSE SIDENAV ON ROUTE CHANGE ON MOBILE\n    this.unlistenRouteChange = this.props.history.listen((location, action) => {\n      if (isMdScreen()) {\n        this.updateSidebarMode({ mode: \"close\" });\n      }\n    });\n\n    setTimeout(() => {\n      this.setState({ hidden: false });\n    }, 400);\n  }\n\n  componentWillUnmount() {\n    this.unlistenRouteChange();\n  }\n\n  updateSidebarMode = sidebarSettings => {\n    let { settings, setLayoutSettings, setDefaultSettings } = this.props;\n    const updatedSettings = {\n      ...settings,\n      layout1Settings: {\n        ...settings.layout1Settings,\n        leftSidebar: {\n          ...settings.layout1Settings.leftSidebar,\n          ...sidebarSettings\n        }\n      }\n    };\n    setLayoutSettings(updatedSettings);\n    setDefaultSettings(updatedSettings);\n  };\n\n  handleSidenavToggle = () => {\n    let { sidenavToggleChecked } = this.state;\n    let mode = sidenavToggleChecked ? \"full\" : \"compact\";\n    this.updateSidebarMode({ mode });\n    this.setState({ sidenavToggleChecked: !sidenavToggleChecked });\n  };\n\n  handleSignOut = () => {\n    this.props.logoutUser();\n  };\n\n  renderLogoSwitch = () => (\n    // Open Brand component file to replace logo and text\n    <Brand>\n      <Switch\n        className=\"sidenav__toggle hide-on-mobile\"\n        onChange={this.handleSidenavToggle}\n        checked={this.state.sidenavToggleChecked}\n        color=\"secondary\"\n      />\n    </Brand>\n  );\n\n  renderUser = () => {\n    let { user } = this.props;\n    return (\n      <div className=\"sidenav__user\">\n        <div className=\"username-photo\">\n          <img src={user.photoURL} alt=\"user\" />\n          <span className=\"username\">\n            {/* <Icon>lock</Icon>  */}\n            {user.displayName}\n          </span>\n        </div>\n        <div className=\"user__menu\">\n          <EgretMenu\n            menuButton={\n              <Tooltip title=\"Settings\">\n                <IconButtonWhite aria-label=\"Delete\" className=\"\" size=\"small\">\n                  <IconSmall> settings </IconSmall>\n                </IconButtonWhite>\n              </Tooltip>\n            }\n          >\n            <MenuItem className=\"flex flex-middle\" style={{ minWidth: 185 }}>\n              <Icon> home </Icon>\n              <span className=\"pl-16\"> Home </span>\n            </MenuItem>\n            <MenuItem className=\"flex flex-middle\" style={{ minWidth: 185 }}>\n              <Icon> settings </Icon>\n              <span className=\"pl-16\"> Account Setting </span>\n            </MenuItem>\n          </EgretMenu>\n\n          <Tooltip title=\"Profile\">\n            <IconButtonWhite aria-label=\"Delete\" className=\"\" size=\"small\">\n              <IconSmall>person</IconSmall>\n            </IconButtonWhite>\n          </Tooltip>\n          <Tooltip title=\"Sign out\">\n            <IconButtonWhite\n              aria-label=\"Delete\"\n              className=\"\"\n              size=\"small\"\n              onClick={this.handleSignOut}\n            >\n              <IconSmall>exit_to_app</IconSmall>\n            </IconButtonWhite>\n          </Tooltip>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    let { theme, settings } = this.props;\n    const sidenavTheme =\n      settings.themes[settings.layout1Settings.leftSidebar.theme] || theme;\n    return (\n      <MuiThemeProvider theme={sidenavTheme}>\n        <SidenavTheme theme={sidenavTheme} settings={settings} />\n\n        <div className=\"sidenav\">\n          <div className=\"sidenav__hold\">\n            {!this.state.hidden && (\n              <Fragment>\n                {this.renderLogoSwitch()}\n                <Sidenav>{this.renderUser()}</Sidenav>\n              </Fragment>\n            )}\n          </div>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nLayout1Sidenav.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  setDefaultSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setDefaultSettings: PropTypes.func.isRequired,\n  setLayoutSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: state.user,\n  settings: state.layout.settings\n});\n\nexport default withStyles(styles, { withTheme: true })(\n  withRouter(\n    connect(\n      mapStateToProps,\n      {\n        setLayoutSettings,\n        setDefaultSettings,\n        logoutUser\n      }\n    )(Layout1Sidenav)\n  )\n);\n"]},"metadata":{},"sourceType":"module"}