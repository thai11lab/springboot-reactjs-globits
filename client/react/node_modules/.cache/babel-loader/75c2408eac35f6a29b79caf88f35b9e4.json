{"ast":null,"code":"import _objectSpread from \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\EgretLayout\\\\SharedCompoents\\\\EgretCustomizer\\\\EgretCustomizer.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setLayoutSettings, setDefaultSettings } from \"app/redux/actions/LayoutActions\";\nimport { PropTypes } from \"prop-types\";\nimport { Icon, IconButton, FormGroup, Tooltip, Switch, FormControlLabel, FormControl, FormLabel, Paper, withStyles, MuiThemeProvider } from \"@material-ui/core\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { merge, get, set } from \"lodash\";\nimport Layout1Customizer from \"./Layout1Customizer\";\nimport Layout2Customizer from \"./Layout2Customizer\";\nimport { themeColors } from \"../../EgretTheme/themeColors\";\nimport BadgeSelected from \"./BadgeSelected\";\nimport { mainThemes, topbarThemes } from \"./customizerOptions\";\nimport ConstantList from \"../../../appConfig\";\n\nconst styles = theme => ({\n  root: {},\n  paper: {\n    display: \"inherit\"\n  }\n});\n\nclass EgretCustomizer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.updateSettings = newSettings => {\n      let _this$props = this.props,\n          settings = _this$props.settings,\n          setLayoutSettings = _this$props.setLayoutSettings,\n          setDefaultSettings = _this$props.setDefaultSettings;\n      let updatedSettings = merge({}, settings, newSettings);\n      setLayoutSettings(updatedSettings);\n      setDefaultSettings(updatedSettings);\n    };\n\n    this.selectLayout = activeLayout => {\n      this.updateSettings({\n        activeLayout\n      });\n    };\n\n    this.handleChange = (name, value) => {\n      let settings = this.props.settings;\n      let updatedSettings = set(settings, name, value);\n      this.updateSettings(updatedSettings);\n    };\n\n    this.handleControlChange = name => event => {\n      let controlValue = event.target.type === \"checkbox\" ? event.target.checked : event.target.value;\n      this.handleChange(name, controlValue);\n    };\n\n    this.tooglePanel = () => {\n      this.setState({\n        open: !this.state.open\n      });\n    };\n  }\n\n  render() {\n    let _this$props2 = this.props,\n        settings = _this$props2.settings,\n        classes = _this$props2.classes;\n\n    let activeTheme = _objectSpread({}, settings.themes[settings.activeTheme]); // console.log(activeTheme);\n\n\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Theme Settings\",\n      placement: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      \"aria-label\": \"delete\",\n      className: \"my-12\",\n      onClick: this.tooglePanel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      className: \"spin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, \"settings\"))), this.state.open && /*#__PURE__*/React.createElement(MuiThemeProvider, {\n      theme: activeTheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"egret-customizer pb-8 \".concat(classes.root),\n      style: {\n        backgroundColor: activeTheme.palette.background.default\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex felx-row flex-middle p-16 mb-16 elevation-z6\",\n      style: {\n        minHeight: \"64px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, \"settings\"), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mb-0 ml-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"Theme Settings\"), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.tooglePanel,\n      className: \"customizer-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }, \"close\"))), /*#__PURE__*/React.createElement(Scrollbar, {\n      options: {\n        suppressScrollX: true\n      },\n      className: \"px-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-8 mb-32 mx-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }, \"Layouts\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"layout-boxes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(BadgeSelected, {\n      color: \"secondary\",\n      className: \"layout-box\",\n      badgeContent: /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 37\n        }\n      }, \"done\"),\n      invisible: settings.activeLayout !== \"layout1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      onClick: () => this.selectLayout(\"layout1\"),\n      elevation: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: ConstantList.ROOT_PATH + \"assets/images/screenshots/layout1-customizer.png\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(BadgeSelected, {\n      color: \"secondary\",\n      className: \"layout-box\",\n      badgeContent: /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 37\n        }\n      }, \"done\"),\n      invisible: settings.activeLayout !== \"layout2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      onClick: () => this.selectLayout(\"layout2\"),\n      elevation: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: ConstantList.ROOT_PATH + \"assets/images/screenshots/layout2-customizer.png\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-16 mx-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-muted mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, \"Main theme\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"colors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }, mainThemes.map((color, i) => /*#__PURE__*/React.createElement(Tooltip, {\n      key: i,\n      title: color,\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color\",\n      onClick: () => this.updateSettings({\n        activeTheme: color\n      }),\n      style: {\n        backgroundColor: themeColors[color].palette.primary.main\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }, settings.activeTheme === color && /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 62\n      }\n    }, \"done\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: settings.themes[color].palette.type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 27\n      }\n    })))))), settings.activeLayout === \"layout1\" && /*#__PURE__*/React.createElement(Layout1Customizer, {\n      settings: settings,\n      handleChange: this.handleChange,\n      handleControlChange: this.handleControlChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }), settings.activeLayout === \"layout2\" && /*#__PURE__*/React.createElement(Layout2Customizer, {\n      settings: settings,\n      handleChange: this.handleChange,\n      handleControlChange: this.handleControlChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mx-12 mb-24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      component: \"fieldset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      component: \"legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, \"Footer\"), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Switch, {\n        checked: get(settings.footer, \"show\"),\n        onChange: this.handleControlChange(\"footer.show\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 27\n        }\n      }),\n      label: \"Show\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Switch, {\n        checked: get(settings.layout1Settings.footer, \"fixed\"),\n        onChange: this.handleControlChange(\"footer.fixed\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 27\n        }\n      }),\n      label: \"Fixed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mx-12 mb-24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      component: \"fieldset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      component: \"legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    }, \"Secondary sidebar\"), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Switch, {\n        checked: get(settings.secondarySidebar, \"show\"),\n        onChange: this.handleControlChange(\"secondarySidebar.show\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 27\n        }\n      }),\n      label: \"Show\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-16 mx-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-muted mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 19\n      }\n    }, \"Secondary sidebar theme\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"colors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 19\n      }\n    }, topbarThemes.map((color, i) => /*#__PURE__*/React.createElement(Tooltip, {\n      key: i,\n      title: color,\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color\",\n      onClick: () => this.handleChange(\"secondarySidebar.theme\", color),\n      style: {\n        backgroundColor: themeColors[color].palette.primary.main\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 25\n      }\n    }, settings.secondarySidebar.theme === color && /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 29\n      }\n    }, \"done\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: settings.themes[color].palette.type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 27\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-16 mx-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-muted mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 19\n      }\n    }, \"Footer theme\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"colors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 19\n      }\n    }, topbarThemes.map((color, i) => /*#__PURE__*/React.createElement(Tooltip, {\n      key: i,\n      title: color,\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color\",\n      onClick: () => this.handleChange(\"footer.theme\", color),\n      style: {\n        backgroundColor: themeColors[color].palette.primary.main\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 25\n      }\n    }, settings.footer.theme === color && /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 63\n      }\n    }, \"done\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: settings.themes[color].palette.type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 27\n      }\n    }))))))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  settings: state.layout.settings,\n  setLayoutSettings: PropTypes.func.isRequired,\n  setDefaultSettings: PropTypes.func.isRequired\n});\n\nexport default withStyles(styles, {\n  withTheme: true\n})(connect(mapStateToProps, {\n  setLayoutSettings,\n  setDefaultSettings\n})(EgretCustomizer));","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/EgretLayout/SharedCompoents/EgretCustomizer/EgretCustomizer.jsx"],"names":["React","Component","Fragment","connect","setLayoutSettings","setDefaultSettings","PropTypes","Icon","IconButton","FormGroup","Tooltip","Switch","FormControlLabel","FormControl","FormLabel","Paper","withStyles","MuiThemeProvider","Scrollbar","merge","get","set","Layout1Customizer","Layout2Customizer","themeColors","BadgeSelected","mainThemes","topbarThemes","ConstantList","styles","theme","root","paper","display","EgretCustomizer","state","open","updateSettings","newSettings","props","settings","updatedSettings","selectLayout","activeLayout","handleChange","name","value","handleControlChange","event","controlValue","target","type","checked","tooglePanel","setState","render","classes","activeTheme","themes","backgroundColor","palette","background","default","minHeight","suppressScrollX","ROOT_PATH","map","color","i","primary","main","footer","layout1Settings","secondarySidebar","mapStateToProps","layout","func","isRequired","withTheme"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  setLayoutSettings,\n  setDefaultSettings\n} from \"app/redux/actions/LayoutActions\";\nimport { PropTypes } from \"prop-types\";\nimport {\n  Icon,\n  IconButton,\n  FormGroup,\n  Tooltip,\n  Switch,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n  Paper,\n  withStyles,\n  MuiThemeProvider\n} from \"@material-ui/core\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { merge, get, set } from \"lodash\";\nimport Layout1Customizer from \"./Layout1Customizer\";\nimport Layout2Customizer from \"./Layout2Customizer\";\nimport { themeColors } from \"../../EgretTheme/themeColors\";\nimport BadgeSelected from \"./BadgeSelected\";\nimport { mainThemes, topbarThemes } from \"./customizerOptions\";\nimport ConstantList from \"../../../appConfig\";\nconst styles = theme => ({\n  root: {\n    \n  },\n  paper: {\n    display: \"inherit\"\n  }\n});\n\nclass EgretCustomizer extends Component {\n  state = {\n    open: false\n  };\n\n  updateSettings = newSettings => {\n    let { settings, setLayoutSettings, setDefaultSettings } = this.props;\n    let updatedSettings = merge({}, settings, newSettings);\n    setLayoutSettings(updatedSettings);\n    setDefaultSettings(updatedSettings);\n  };\n\n  selectLayout = activeLayout => {\n    this.updateSettings({ activeLayout });\n  };\n\n  handleChange = (name, value) => {\n    let { settings } = this.props;\n    let updatedSettings = set(settings, name, value);\n\n    this.updateSettings(updatedSettings);\n  };\n\n  handleControlChange = name => event => {\n    let controlValue =\n      event.target.type === \"checkbox\"\n        ? event.target.checked\n        : event.target.value;\n    this.handleChange(name, controlValue);\n  };\n\n  tooglePanel = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  render() {\n    let { settings, classes } = this.props;\n    let activeTheme = { ...settings.themes[settings.activeTheme] };\n    // console.log(activeTheme);\n\n    return (\n      <Fragment>\n        <Tooltip title=\"Theme Settings\" placement=\"left\">\n          <IconButton\n            size=\"small\"\n            aria-label=\"delete\"\n            className=\"my-12\"\n            onClick={this.tooglePanel}\n          >\n            <Icon className=\"spin\">settings</Icon>\n          </IconButton>\n        </Tooltip>\n\n        {this.state.open && (\n          <MuiThemeProvider theme={activeTheme}>\n            <div\n              className={`egret-customizer pb-8 ${classes.root}`}\n              style={{\n                backgroundColor: activeTheme.palette.background.default\n              }}\n            >\n              <div className=\"flex felx-row flex-middle p-16 mb-16 elevation-z6\" style={{minHeight: \"64px\"}}>\n                <Icon color=\"primary\">settings</Icon>\n                <h5 className=\"mb-0 ml-8\">Theme Settings</h5>\n                <IconButton\n                  onClick={this.tooglePanel}\n                  className=\"customizer-close\"\n                >\n                  <Icon>close</Icon>\n                </IconButton>\n              </div>\n              <Scrollbar options={{ suppressScrollX: true }} className=\"px-16\">\n                <div className=\"mt-8 mb-32 mx-12\">\n                  <div className=\"text-muted\">Layouts</div>\n\n                  <div className=\"layout-boxes\">\n                    <BadgeSelected\n                      color=\"secondary\"\n                      className=\"layout-box\"\n                      badgeContent={<Icon>done</Icon>}\n                      invisible={settings.activeLayout !== \"layout1\"}\n                    >\n                      <Paper onClick={() => this.selectLayout(\"layout1\")} elevation={4}>\n                        <img\n                          src= {ConstantList.ROOT_PATH+\"assets/images/screenshots/layout1-customizer.png\"}\n                          alt=\"\"\n                        />\n                      </Paper>\n                    </BadgeSelected>\n                    <BadgeSelected\n                      color=\"secondary\"\n                      className=\"layout-box\"\n                      badgeContent={<Icon>done</Icon>}\n                      invisible={settings.activeLayout !== \"layout2\"}\n                    >\n                      <Paper onClick={() => this.selectLayout(\"layout2\")} elevation={4}>\n                        <img\n                          src= {ConstantList.ROOT_PATH+\"assets/images/screenshots/layout2-customizer.png\"}\n                          alt=\"\"\n                        />\n                      </Paper>\n                    </BadgeSelected>\n                  </div>\n                </div>\n                {/* END LAYOUT */}\n\n                <div className=\"mb-16 mx-12\">\n                  <div className=\"text-muted mb-4\">Main theme</div>\n                  <div className=\"colors\">\n                    {mainThemes.map((color, i) => (\n                      <Tooltip key={i} title={color} placement=\"top\">\n                        <div\n                          className=\"color\"\n                          onClick={() =>\n                            this.updateSettings({ activeTheme: color })\n                          }\n                          style={{\n                            backgroundColor:\n                              themeColors[color].palette.primary.main\n                          }}\n                        >\n                          {settings.activeTheme === color && <Icon>done</Icon>}\n                          <div\n                            className={settings.themes[color].palette.type}\n                          ></div>\n                        </div>\n                      </Tooltip>\n                    ))}\n                  </div>\n                </div>\n\n                {settings.activeLayout === \"layout1\" && (\n                  <Layout1Customizer\n                    settings={settings}\n                    handleChange={this.handleChange}\n                    handleControlChange={this.handleControlChange}\n                  />\n                )}\n\n                {settings.activeLayout === \"layout2\" && (\n                  <Layout2Customizer\n                    settings={settings}\n                    handleChange={this.handleChange}\n                    handleControlChange={this.handleControlChange}\n                  />\n                )}\n\n                <div className=\"mx-12 mb-24\">\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Footer</FormLabel>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Switch\n                            checked={get(settings.footer, \"show\")}\n                            onChange={this.handleControlChange(\"footer.show\")}\n                          />\n                        }\n                        label=\"Show\"\n                      />\n\n                      <FormControlLabel\n                        control={\n                          <Switch\n                            checked={get(\n                              settings.layout1Settings.footer,\n                              \"fixed\"\n                            )}\n                            onChange={this.handleControlChange(\"footer.fixed\")}\n                          />\n                        }\n                        label=\"Fixed\"\n                      />\n                    </FormGroup>\n                  </FormControl>\n                </div>\n\n                <div className=\"mx-12 mb-24\">\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Secondary sidebar</FormLabel>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Switch\n                            checked={get(settings.secondarySidebar, \"show\")}\n                            onChange={this.handleControlChange(\n                              \"secondarySidebar.show\"\n                            )}\n                          />\n                        }\n                        label=\"Show\"\n                      />\n                    </FormGroup>\n                  </FormControl>\n                </div>\n\n                <div className=\"mb-16 mx-12\">\n                  <div className=\"text-muted mb-4\">Secondary sidebar theme</div>\n                  <div className=\"colors\">\n                    {topbarThemes\n                    .map((color, i) => (\n                      <Tooltip key={i} title={color} placement=\"top\">\n                        <div\n                          className=\"color\"\n                          onClick={() =>\n                            this.handleChange(\"secondarySidebar.theme\", color)\n                          }\n                          style={{\n                            backgroundColor:\n                              themeColors[color].palette.primary.main\n                          }}\n                        >\n                          {settings.secondarySidebar.theme === color && (\n                            <Icon>done</Icon>\n                          )}\n                          <div\n                            className={settings.themes[color].palette.type}\n                          ></div>\n                        </div>\n                      </Tooltip>\n                    ))}\n                  </div>\n                </div>\n\n                <div className=\"mb-16 mx-12\">\n                  <div className=\"text-muted mb-4\">Footer theme</div>\n                  <div className=\"colors\">\n                    {topbarThemes\n                    .map((color, i) => (\n                      <Tooltip key={i} title={color} placement=\"top\">\n                        <div\n                          className=\"color\"\n                          onClick={() =>\n                            this.handleChange(\"footer.theme\", color)\n                          }\n                          style={{\n                            backgroundColor:\n                              themeColors[color].palette.primary.main\n                          }}\n                        >\n                          {settings.footer.theme === color && <Icon>done</Icon>}\n                          <div\n                            className={settings.themes[color].palette.type}\n                          ></div>\n                        </div>\n                      </Tooltip>\n                    ))}\n                  </div>\n                </div>\n              </Scrollbar>\n            </div>\n          </MuiThemeProvider>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  settings: state.layout.settings,\n  setLayoutSettings: PropTypes.func.isRequired,\n  setDefaultSettings: PropTypes.func.isRequired\n});\n\nexport default withStyles(styles, { withTheme: true })(\n  connect(\n    mapStateToProps,\n    { setLayoutSettings, setDefaultSettings }\n  )(EgretCustomizer)\n);\n"]},"metadata":{},"sourceType":"module"}