{"ast":null,"code":"var _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\Employee\\\\EmployeeTable.jsx\";\nimport React, { Component } from \"react\";\nimport { IconButton, Table, TableHead, TableBody, TableRow, TableCell, Icon, TablePagination, Button, Card } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { getAllEmployees, deleteUser } from \"./EmployeeService\";\nimport MemberEditorDialog from \"./MemberEditorDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport shortid from \"shortid\";\n\nclass EmployeeTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rowsPerPage: 10,\n      page: 0,\n      userList: [],\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      firstName: \"\"\n    };\n\n    this.setPage = page => {\n      this.setState({\n        page\n      });\n    };\n\n    this.setRowsPerPage = event => {\n      this.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n\n    this.handleChangePage = (event, newPage) => {\n      this.setPage(newPage);\n    };\n\n    this.handleDialogClose = () => {\n      this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false\n      });\n      this.updatePageData();\n    };\n\n    this.handleDeleteUser = user => {\n      this.setState({\n        user,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    this.handleConfirmationResponse = () => {\n      deleteUser(this.state.user).then(() => {\n        this.handleDialogClose();\n      });\n    };\n\n    this.updatePageData = () => {\n      getAllEmployees().then(({\n        data\n      }) => this.setState({\n        userList: [...data]\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.updatePageData();\n  }\n\n  render() {\n    let _this$state = this.state,\n        rowsPerPage = _this$state.rowsPerPage,\n        page = _this$state.page,\n        userList = _this$state.userList,\n        shouldOpenConfirmationDialog = _this$state.shouldOpenConfirmationDialog,\n        shouldOpenEditorDialog = _this$state.shouldOpenEditorDialog;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-sm-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-sm-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      routeSegments: [{\n        name: \"Employee Table\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"mb-16\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => this.setState({\n        shouldOpenEditorDialog: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, \"Th\\xEAm Nh\\xE2n Vi\\xEAn\"), /*#__PURE__*/React.createElement(Card, {\n      className: \"w-100 overflow-auto\",\n      elevation: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: \"crud-table\",\n      style: {\n        whiteSpace: \"pre\",\n        minWidth: \"750px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, \"STT\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"M\\xE3 nh\\xE2n vi\\xEAn\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, \"H\\u1ECD T\\xEAn\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \"Tu\\u1ED5i\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"H\\xE0nh \\u0111\\u1ED9ng\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, userList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((user, index) => /*#__PURE__*/React.createElement(TableRow, {\n      key: shortid.generate(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, user.firstName), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, user.lastName), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, user.birthDate), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, user.company), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, user.isActive ? /*#__PURE__*/React.createElement(\"small\", {\n      className: \"border-radius-4 bg-primary text-white px-8 py-2 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, \"active\") : /*#__PURE__*/React.createElement(\"small\", {\n      className: \"border-radius-4 bg-light-gray px-8 py-2 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, \"inactive\")), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0 border-none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => this.setState({\n        uid: user.id,\n        shouldOpenEditorDialog: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }, \"edit\")), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => this.handleDeleteUser(user),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      color: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }, \"delete\"))))))), /*#__PURE__*/React.createElement(TablePagination, {\n      className: \"px-16\",\n      rowsPerPageOptions: [5, 10, 25],\n      component: \"div\",\n      count: userList.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      backIconButtonProps: {\n        \"aria-label\": \"Previous Page\"\n      },\n      nextIconButtonProps: {\n        \"aria-label\": \"Next Page\"\n      },\n      onChangePage: this.handleChangePage,\n      onChangeRowsPerPage: this.setRowsPerPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }), shouldOpenEditorDialog && /*#__PURE__*/React.createElement(MemberEditorDialog, {\n      handleClose: this.handleDialogClose,\n      open: shouldOpenEditorDialog,\n      uid: this.state.uid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }), shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n      open: shouldOpenConfirmationDialog,\n      onConfirmDialogClose: this.handleDialogClose,\n      onYesClick: this.handleConfirmationResponse,\n      text: \"Are you sure to delete?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default EmployeeTable;","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/Employee/EmployeeTable.jsx"],"names":["React","Component","IconButton","Table","TableHead","TableBody","TableRow","TableCell","Icon","TablePagination","Button","Card","ValidatorForm","TextValidator","getAllEmployees","deleteUser","MemberEditorDialog","Breadcrumb","ConfirmationDialog","shortid","EmployeeTable","state","rowsPerPage","page","userList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","firstName","setPage","setState","setRowsPerPage","event","target","value","handleChangePage","newPage","handleDialogClose","updatePageData","handleDeleteUser","user","handleConfirmationResponse","then","data","componentDidMount","render","name","whiteSpace","minWidth","slice","map","index","generate","lastName","birthDate","company","isActive","uid","id","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  IconButton,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Icon,\n  TablePagination,\n  Button,\n  Card\n} from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { getAllEmployees, deleteUser } from \"./EmployeeService\";\nimport MemberEditorDialog from \"./MemberEditorDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport shortid from \"shortid\";\n\nclass EmployeeTable extends Component {\n  state = {\n    rowsPerPage: 10,\n    page: 0,\n    userList: [],\n    shouldOpenEditorDialog: false,\n    shouldOpenConfirmationDialog: false,\n    firstName:\"\"\n  };\n\n  setPage = page => {\n    this.setState({ page });\n  };\n\n  setRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  handleChangePage = (event, newPage) => {\n    this.setPage(newPage);\n  };\n\n  handleDialogClose = () => {\n    this.setState({\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false\n    });\n    this.updatePageData();\n  };\n\n  handleDeleteUser = user => {\n    this.setState({\n      user,\n      shouldOpenConfirmationDialog: true\n    });\n  };\n\n  handleConfirmationResponse = () => {\n    deleteUser(this.state.user).then(() => {\n      this.handleDialogClose();\n    });\n  };\n\n  componentDidMount() {\n    this.updatePageData();\n  }\n\n  updatePageData = () => {\n    getAllEmployees().then(({ data }) => this.setState({ userList: [...data] }));\n  };\n  funci\n  render() {\n    let {\n      rowsPerPage,\n      page,\n      userList,\n      shouldOpenConfirmationDialog,\n      shouldOpenEditorDialog,\n    } = this.state;\n    return (\n      <div className=\"m-sm-30\">\n        <div  className=\"mb-sm-30\">\n          <Breadcrumb routeSegments={[{ name: \"Employee Table\" }]} />\n        </div>\n    \n        <Button\n          className=\"mb-16\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => this.setState({ shouldOpenEditorDialog: true })}\n        >\n          Thêm Nhân Viên\n        </Button>\n\n\n        <Card className=\"w-100 overflow-auto\" elevation={6}>\n          <Table className=\"crud-table\" style={{ whiteSpace: \"pre\", minWidth: \"750px\" }}>\n            <TableHead>\n              <TableRow>\n                <TableCell>STT</TableCell>\n                <TableCell>ID</TableCell>\n                <TableCell>Mã nhân viên</TableCell>\n                <TableCell>Họ Tên</TableCell>\n                <TableCell>Email</TableCell>\n                <TableCell>Số điện thoại</TableCell>\n                <TableCell>Tuổi</TableCell>\n                <TableCell>Hành động</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {userList\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((user, index) => (\n                  <TableRow key={shortid.generate()}>\n                    <TableCell className=\"px-0\" align=\"left\">\n                      {user.firstName}\n                    </TableCell>\n                    <TableCell className=\"px-0\">{user.lastName}</TableCell>\n                    <TableCell className=\"px-0\" align=\"left\">\n                      {user.birthDate}\n                    </TableCell>\n                    \n                    <TableCell className=\"px-0\" align=\"left\">\n                      {user.company}\n                    </TableCell>\n                    <TableCell className=\"px-0\">\n                      {user.isActive ? (\n                        <small className=\"border-radius-4 bg-primary text-white px-8 py-2 \">\n                          active\n                        </small>\n                      ) : (\n                        <small className=\"border-radius-4 bg-light-gray px-8 py-2 \">\n                          inactive\n                        </small>\n                      )}\n                    </TableCell>\n                    <TableCell className=\"px-0 border-none\">\n                      <IconButton\n                        onClick={() =>\n                          this.setState({\n                            uid: user.id,\n                            shouldOpenEditorDialog: true\n                          })\n                        }\n                      >\n                        <Icon color=\"primary\">edit</Icon>\n                      </IconButton>\n                      <IconButton onClick={() => this.handleDeleteUser(user)}>\n                        <Icon color=\"error\">delete</Icon>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n\n          <TablePagination\n            className=\"px-16\"\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={userList.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            backIconButtonProps={{\n              \"aria-label\": \"Previous Page\"\n            }}\n            nextIconButtonProps={{\n              \"aria-label\": \"Next Page\"\n            }}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.setRowsPerPage}\n          />\n\n          {shouldOpenEditorDialog && (\n            <MemberEditorDialog\n              handleClose={this.handleDialogClose}\n              open={shouldOpenEditorDialog}\n              uid={this.state.uid}\n            />\n          )}\n          {shouldOpenConfirmationDialog && (\n            <ConfirmationDialog\n              open={shouldOpenConfirmationDialog}\n              onConfirmDialogClose={this.handleDialogClose}\n              onYesClick={this.handleConfirmationResponse}\n              text=\"Are you sure to delete?\"\n            />\n          )}\n        </Card>\n        \n      </div>\n    );\n  }\n}\n\nexport default EmployeeTable;\n"]},"metadata":{},"sourceType":"module"}