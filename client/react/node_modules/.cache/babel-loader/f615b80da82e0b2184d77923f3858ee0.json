{"ast":null,"code":"import _slicedToArray from \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\todo\\\\TodoList.jsx\";\nimport React, { Component } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { getAllTodo, updateTodoById, reorderTodoList, getAllTodoTag } from \"./TodoService\";\nimport { Icon, IconButton, MenuItem, Button, Card } from \"@material-ui/core\";\nimport { EgretMenu } from \"egret\";\n\nclass TodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.todoList = [];\n    this.state = {\n      tagList: [],\n      todoList: []\n    };\n\n    this.search = query => {\n      query = query.toLowerCase();\n      let filteredTodoList = this.todoList.filter(todo => todo.title.toLowerCase().match(query) || todo.note.toLowerCase().match(query));\n      this.setState({\n        todoList: [...filteredTodoList]\n      });\n    };\n\n    this.updateTodo = todo => {\n      updateTodoById(todo).then(({\n        data\n      }) => {\n        this.setState({\n          todoList: [...data]\n        });\n        this.todoList = [...data];\n      });\n    };\n\n    this.reorder = (list, startIndex, endIndex) => {\n      const result = Array.from(list);\n\n      const _result$splice = result.splice(startIndex, 1),\n            _result$splice2 = _slicedToArray(_result$splice, 1),\n            removed = _result$splice2[0];\n\n      result.splice(endIndex, 0, removed);\n      return result;\n    };\n\n    this.handleDragEnd = result => {\n      // dropped outside the list\n      if (!result.destination) {\n        return;\n      }\n\n      let todoList = this.reorder(this.state.todoList, result.source.index, result.destination.index);\n      reorderTodoList(todoList).then(({\n        data\n      }) => {\n        this.setState({\n          todoList: [...data]\n        });\n        this.todoList = [...data];\n      });\n    };\n\n    this.filterTodoListByProperty = (queryField, queryValue) => {\n      if (queryField !== \"all\") {\n        this.setState({\n          todoList: [...this.todoList.filter(todo => todo[queryField] === queryValue)]\n        });\n      } else {\n        this.setState({\n          todoList: [...this.todoList]\n        });\n      }\n    };\n\n    this.filterTodoListByTag = tagId => {\n      if (tagId !== \"all\") this.setState({\n        todoList: [...this.todoList.filter(todo => todo.tag.includes(tagId))]\n      });else {\n        this.setState({\n          todoList: [...this.todoList]\n        });\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.props.setSearchFunction(this.search);\n    getAllTodo().then(({\n      data\n    }) => {\n      getAllTodoTag().then(({\n        data: tagList\n      }) => {\n        this.setState({\n          tagList,\n          todoList: [...data]\n        });\n        this.todoList = [...data];\n      });\n    });\n  }\n\n  render() {\n    let _this$state = this.state,\n        todoList = _this$state.todoList,\n        tagList = _this$state.tagList;\n    return /*#__PURE__*/React.createElement(Card, {\n      className: \"todo position-relative m-sm-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-list__topbar bg-light-gray py-8 flex flex-wrap flex-middle flex-space-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(EgretMenu, {\n      menuButton: /*#__PURE__*/React.createElement(IconButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }\n      }, \"arrow_drop_down\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => this.filterTodoListByProperty(\"all\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, \"All\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => this.filterTodoListByProperty(\"read\", true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, \"Read\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => this.filterTodoListByProperty(\"read\", false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, \"Unread\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => this.filterTodoListByProperty(\"done\", true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, \"Done\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => this.filterTodoListByProperty(\"done\", false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, \"Undone\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => this.filterTodoListByProperty(\"important\", true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, \"Important\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => this.filterTodoListByProperty(\"important\", false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, \"Unimportant\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => this.filterTodoListByProperty(\"starred\", true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }, \"Starred\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => this.filterTodoListByProperty(\"starred\", false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }, \"Unstarred\")), /*#__PURE__*/React.createElement(EgretMenu, {\n      menuButton: /*#__PURE__*/React.createElement(IconButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 19\n        }\n      }, \"label\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      className: \"capitalize\",\n      onClick: () => this.filterTodoListByTag(\"all\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }\n    }, \"all\"), tagList.map(tag => /*#__PURE__*/React.createElement(MenuItem, {\n      key: tag.id,\n      className: \"capitalize\",\n      onClick: () => this.filterTodoListByTag(tag.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, tag.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pr-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => this.props.history.push(\"/todo/list/add\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, \"Create Todo\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DragDropContext, {\n      onDragEnd: this.handleDragEnd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: \"droppable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }), todoList.map((todo, index) => /*#__PURE__*/React.createElement(Draggable, {\n      key: todo.id,\n      draggableId: todo.id,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: provided.draggableProps.style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(TodoItem, {\n      tagList: tagList,\n      updateTodo: this.updateTodo,\n      key: index,\n      todo: todo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 27\n      }\n    })))), provided.placeholder)))));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/todo/TodoList.jsx"],"names":["React","Component","TodoItem","DragDropContext","Droppable","Draggable","getAllTodo","updateTodoById","reorderTodoList","getAllTodoTag","Icon","IconButton","MenuItem","Button","Card","EgretMenu","TodoList","todoList","state","tagList","search","query","toLowerCase","filteredTodoList","filter","todo","title","match","note","setState","updateTodo","then","data","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","handleDragEnd","destination","source","index","filterTodoListByProperty","queryField","queryValue","filterTodoListByTag","tagId","tag","includes","componentWillMount","props","setSearchFunction","render","map","id","name","history","push","provided","snapshot","droppableProps","innerRef","draggableProps","dragHandleProps","style","placeholder"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;AACA,SACEC,UADF,EAEEC,cAFF,EAGEC,eAHF,EAIEC,aAJF,QAKO,eALP;AAMA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,QAA3B,EAAqCC,MAArC,EAA6CC,IAA7C,QAAyD,mBAAzD;AACA,SAAQC,SAAR,QAAwB,OAAxB;;AAEA,MAAMC,QAAN,SAAuBf,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BgB,QAD+B,GACpB,EADoB;AAAA,SAE/BC,KAF+B,GAEvB;AACNC,MAAAA,OAAO,EAAE,EADH;AAENF,MAAAA,QAAQ,EAAE;AAFJ,KAFuB;;AAAA,SAoB/BG,MApB+B,GAoBtBC,KAAK,IAAI;AAChBA,MAAAA,KAAK,GAAGA,KAAK,CAACC,WAAN,EAAR;AACA,UAAIC,gBAAgB,GAAG,KAAKN,QAAL,CAAcO,MAAd,CACrBC,IAAI,IACFA,IAAI,CAACC,KAAL,CAAWJ,WAAX,GAAyBK,KAAzB,CAA+BN,KAA/B,KACAI,IAAI,CAACG,IAAL,CAAUN,WAAV,GAAwBK,KAAxB,CAA8BN,KAA9B,CAHmB,CAAvB;AAKA,WAAKQ,QAAL,CAAc;AACZZ,QAAAA,QAAQ,EAAE,CAAC,GAAGM,gBAAJ;AADE,OAAd;AAGD,KA9B8B;;AAAA,SAgC/BO,UAhC+B,GAgClBL,IAAI,IAAI;AACnBlB,MAAAA,cAAc,CAACkB,IAAD,CAAd,CAAqBM,IAArB,CAA0B,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAc;AACtC,aAAKH,QAAL,CAAc;AACZZ,UAAAA,QAAQ,EAAE,CAAC,GAAGe,IAAJ;AADE,SAAd;AAGA,aAAKf,QAAL,GAAgB,CAAC,GAAGe,IAAJ,CAAhB;AACD,OALD;AAMD,KAvC8B;;AAAA,SAyC/BC,OAzC+B,GAyCrB,CAACC,IAAD,EAAOC,UAAP,EAAmBC,QAAnB,KAAgC;AACxC,YAAMC,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAWL,IAAX,CAAf;;AADwC,6BAEtBG,MAAM,CAACG,MAAP,CAAcL,UAAd,EAA0B,CAA1B,CAFsB;AAAA;AAAA,YAEjCM,OAFiC;;AAGxCJ,MAAAA,MAAM,CAACG,MAAP,CAAcJ,QAAd,EAAwB,CAAxB,EAA2BK,OAA3B;AAEA,aAAOJ,MAAP;AACD,KA/C8B;;AAAA,SAiD/BK,aAjD+B,GAiDfL,MAAM,IAAI;AACxB;AACA,UAAI,CAACA,MAAM,CAACM,WAAZ,EAAyB;AACvB;AACD;;AAED,UAAI1B,QAAQ,GAAG,KAAKgB,OAAL,CACb,KAAKf,KAAL,CAAWD,QADE,EAEboB,MAAM,CAACO,MAAP,CAAcC,KAFD,EAGbR,MAAM,CAACM,WAAP,CAAmBE,KAHN,CAAf;AAMArC,MAAAA,eAAe,CAACS,QAAD,CAAf,CAA0Bc,IAA1B,CAA+B,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAc;AAC3C,aAAKH,QAAL,CAAc;AACZZ,UAAAA,QAAQ,EAAE,CAAC,GAAGe,IAAJ;AADE,SAAd;AAGA,aAAKf,QAAL,GAAgB,CAAC,GAAGe,IAAJ,CAAhB;AACD,OALD;AAMD,KAnE8B;;AAAA,SAqE/Bc,wBArE+B,GAqEJ,CAACC,UAAD,EAAaC,UAAb,KAA4B;AACrD,UAAID,UAAU,KAAK,KAAnB,EAA0B;AACxB,aAAKlB,QAAL,CAAc;AACZZ,UAAAA,QAAQ,EAAE,CACR,GAAG,KAAKA,QAAL,CAAcO,MAAd,CAAqBC,IAAI,IAAIA,IAAI,CAACsB,UAAD,CAAJ,KAAqBC,UAAlD,CADK;AADE,SAAd;AAKD,OAND,MAMO;AACL,aAAKnB,QAAL,CAAc;AACZZ,UAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKA,QAAT;AADE,SAAd;AAGD;AACF,KAjF8B;;AAAA,SAmF/BgC,mBAnF+B,GAmFTC,KAAK,IAAI;AAC7B,UAAIA,KAAK,KAAK,KAAd,EACE,KAAKrB,QAAL,CAAc;AACZZ,QAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKA,QAAL,CAAcO,MAAd,CAAqBC,IAAI,IAAIA,IAAI,CAAC0B,GAAL,CAASC,QAAT,CAAkBF,KAAlB,CAA7B,CAAJ;AADE,OAAd,EADF,KAIK;AACH,aAAKrB,QAAL,CAAc;AACZZ,UAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKA,QAAT;AADE,SAAd;AAGD;AACF,KA7F8B;AAAA;;AAO/BoC,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,KAAL,CAAWC,iBAAX,CAA6B,KAAKnC,MAAlC;AACAd,IAAAA,UAAU,GAAGyB,IAAb,CAAkB,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAC9BvB,MAAAA,aAAa,GAAGsB,IAAhB,CAAqB,CAAC;AAAEC,QAAAA,IAAI,EAAEb;AAAR,OAAD,KAAuB;AAC1C,aAAKU,QAAL,CAAc;AACZV,UAAAA,OADY;AAEZF,UAAAA,QAAQ,EAAE,CAAC,GAAGe,IAAJ;AAFE,SAAd;AAIA,aAAKf,QAAL,GAAgB,CAAC,GAAGe,IAAJ,CAAhB;AACD,OAND;AAOD,KARD;AASD;;AA6EDwB,EAAAA,MAAM,GAAG;AAAA,sBACqB,KAAKtC,KAD1B;AAAA,QACDD,QADC,eACDA,QADC;AAAA,QACSE,OADT,eACSA,OADT;AAEP,wBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,gCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,oFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,UAAU,eACR,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,MAAM,KAAK2B,wBAAL,CAA8B,KAA9B,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,eAUE,oBAAC,QAAD;AACE,MAAA,OAAO,EAAE,MAAM,KAAKA,wBAAL,CAA8B,MAA9B,EAAsC,IAAtC,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAeE,oBAAC,QAAD;AACE,MAAA,OAAO,EAAE,MAAM,KAAKA,wBAAL,CAA8B,MAA9B,EAAsC,KAAtC,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,eAoBE,oBAAC,QAAD;AACE,MAAA,OAAO,EAAE,MAAM,KAAKA,wBAAL,CAA8B,MAA9B,EAAsC,IAAtC,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF,eAyBE,oBAAC,QAAD;AACE,MAAA,OAAO,EAAE,MAAM,KAAKA,wBAAL,CAA8B,MAA9B,EAAsC,KAAtC,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBF,eA8BE,oBAAC,QAAD;AACE,MAAA,OAAO,EAAE,MAAM,KAAKA,wBAAL,CAA8B,WAA9B,EAA2C,IAA3C,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA9BF,eAmCE,oBAAC,QAAD;AACE,MAAA,OAAO,EAAE,MACP,KAAKA,wBAAL,CAA8B,WAA9B,EAA2C,KAA3C,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAnCF,eA0CE,oBAAC,QAAD;AACE,MAAA,OAAO,EAAE,MAAM,KAAKA,wBAAL,CAA8B,SAA9B,EAAyC,IAAzC,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA1CF,eA+CE,oBAAC,QAAD;AACE,MAAA,OAAO,EAAE,MAAM,KAAKA,wBAAL,CAA8B,SAA9B,EAAyC,KAAzC,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA/CF,CADF,eAsDE,oBAAC,SAAD;AACE,MAAA,UAAU,eACR,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE,oBAAC,QAAD;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKG,mBAAL,CAAyB,KAAzB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,EAaG9B,OAAO,CAACsC,GAAR,CAAYN,GAAG,iBACd,oBAAC,QAAD;AACE,MAAA,GAAG,EAAEA,GAAG,CAACO,EADX;AAEE,MAAA,SAAS,EAAC,YAFZ;AAGE,MAAA,OAAO,EAAE,MAAM,KAAKT,mBAAL,CAAyBE,GAAG,CAACO,EAA7B,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGP,GAAG,CAACQ,IALP,CADD,CAbH,CAtDF,CADF,eA+EE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,OAAO,EAAE,MAAM,KAAKL,KAAL,CAAWM,OAAX,CAAmBC,IAAnB,CAAwB,gBAAxB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CA/EF,CADF,eA2FE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAE,KAAKnB,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACoB,QAAD,EAAWC,QAAX,kBACC,6CAASD,QAAQ,CAACE,cAAlB;AAAkC,MAAA,GAAG,EAAEF,QAAQ,CAACG,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGhD,QAAQ,CAACwC,GAAT,CAAa,CAAChC,IAAD,EAAOoB,KAAP,kBACZ,oBAAC,SAAD;AACE,MAAA,GAAG,EAAEpB,IAAI,CAACiC,EADZ;AAEE,MAAA,WAAW,EAAEjC,IAAI,CAACiC,EAFpB;AAGE,MAAA,KAAK,EAAEb,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,CAACiB,QAAD,EAAWC,QAAX,kBACC;AACE,MAAA,GAAG,EAAED,QAAQ,CAACG;AADhB,OAEMH,QAAQ,CAACI,cAFf,EAGMJ,QAAQ,CAACK,eAHf;AAIE,MAAA,KAAK,EAAEL,QAAQ,CAACI,cAAT,CAAwBE,KAJjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAME,oBAAC,QAAD;AACE,MAAA,OAAO,EAAEjD,OADX;AAEE,MAAA,UAAU,EAAE,KAAKW,UAFnB;AAGE,MAAA,GAAG,EAAEe,KAHP;AAIE,MAAA,IAAI,EAAEpB,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CANJ,CADD,CADH,EAwBGqC,QAAQ,CAACO,WAxBZ,CAFJ,CADF,CADF,CA3FF,CADF;AAgID;;AAjO8B;;AAoOjC,eAAerD,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport {\n  getAllTodo,\n  updateTodoById,\n  reorderTodoList,\n  getAllTodoTag\n} from \"./TodoService\";\nimport { Icon, IconButton, MenuItem, Button, Card } from \"@material-ui/core\";\nimport {EgretMenu} from \"egret\";\n\nclass TodoList extends Component {\n  todoList = [];\n  state = {\n    tagList: [],\n    todoList: []\n  };\n\n  componentWillMount() {\n    this.props.setSearchFunction(this.search);\n    getAllTodo().then(({ data }) => {\n      getAllTodoTag().then(({ data: tagList }) => {\n        this.setState({\n          tagList,\n          todoList: [...data]\n        });\n        this.todoList = [...data];\n      });\n    });\n  }\n\n  search = query => {\n    query = query.toLowerCase();\n    let filteredTodoList = this.todoList.filter(\n      todo =>\n        todo.title.toLowerCase().match(query) ||\n        todo.note.toLowerCase().match(query)\n    );\n    this.setState({\n      todoList: [...filteredTodoList]\n    });\n  };\n\n  updateTodo = todo => {\n    updateTodoById(todo).then(({ data }) => {\n      this.setState({\n        todoList: [...data]\n      });\n      this.todoList = [...data];\n    });\n  };\n\n  reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n  };\n\n  handleDragEnd = result => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    let todoList = this.reorder(\n      this.state.todoList,\n      result.source.index,\n      result.destination.index\n    );\n\n    reorderTodoList(todoList).then(({ data }) => {\n      this.setState({\n        todoList: [...data]\n      });\n      this.todoList = [...data];\n    });\n  };\n\n  filterTodoListByProperty = (queryField, queryValue) => {\n    if (queryField !== \"all\") {\n      this.setState({\n        todoList: [\n          ...this.todoList.filter(todo => todo[queryField] === queryValue)\n        ]\n      });\n    } else {\n      this.setState({\n        todoList: [...this.todoList]\n      });\n    }\n  };\n\n  filterTodoListByTag = tagId => {\n    if (tagId !== \"all\")\n      this.setState({\n        todoList: [...this.todoList.filter(todo => todo.tag.includes(tagId))]\n      });\n    else {\n      this.setState({\n        todoList: [...this.todoList]\n      });\n    }\n  };\n\n  render() {\n    let { todoList, tagList } = this.state;\n    return (\n      <Card className=\"todo position-relative m-sm-30\">\n        <div className=\"todo-list__topbar bg-light-gray py-8 flex flex-wrap flex-middle flex-space-between\">\n          <div>\n            <EgretMenu\n              menuButton={\n                <IconButton>\n                  <Icon>arrow_drop_down</Icon>\n                </IconButton>\n              }\n            >\n              <MenuItem onClick={() => this.filterTodoListByProperty(\"all\")}>\n                All\n              </MenuItem>\n              <MenuItem\n                onClick={() => this.filterTodoListByProperty(\"read\", true)}\n              >\n                Read\n              </MenuItem>\n              <MenuItem\n                onClick={() => this.filterTodoListByProperty(\"read\", false)}\n              >\n                Unread\n              </MenuItem>\n              <MenuItem\n                onClick={() => this.filterTodoListByProperty(\"done\", true)}\n              >\n                Done\n              </MenuItem>\n              <MenuItem\n                onClick={() => this.filterTodoListByProperty(\"done\", false)}\n              >\n                Undone\n              </MenuItem>\n              <MenuItem\n                onClick={() => this.filterTodoListByProperty(\"important\", true)}\n              >\n                Important\n              </MenuItem>\n              <MenuItem\n                onClick={() =>\n                  this.filterTodoListByProperty(\"important\", false)\n                }\n              >\n                Unimportant\n              </MenuItem>\n              <MenuItem\n                onClick={() => this.filterTodoListByProperty(\"starred\", true)}\n              >\n                Starred\n              </MenuItem>\n              <MenuItem\n                onClick={() => this.filterTodoListByProperty(\"starred\", false)}\n              >\n                Unstarred\n              </MenuItem>\n            </EgretMenu>\n            <EgretMenu\n              menuButton={\n                <IconButton>\n                  <Icon>label</Icon>\n                </IconButton>\n              }\n            >\n              <MenuItem\n                className=\"capitalize\"\n                onClick={() => this.filterTodoListByTag(\"all\")}\n              >\n                all\n              </MenuItem>\n              {tagList.map(tag => (\n                <MenuItem\n                  key={tag.id}\n                  className=\"capitalize\"\n                  onClick={() => this.filterTodoListByTag(tag.id)}\n                >\n                  {tag.name}\n                </MenuItem>\n              ))}\n            </EgretMenu>\n          </div>\n          <div className=\"pr-16\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => this.props.history.push(\"/todo/list/add\")}\n            >\n              Create Todo\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"todo-list\">\n          <DragDropContext onDragEnd={this.handleDragEnd}>\n            <Droppable droppableId=\"droppable\">\n              {(provided, snapshot) => (\n                <div {...provided.droppableProps} ref={provided.innerRef}>\n                  {todoList.map((todo, index) => (\n                    <Draggable\n                      key={todo.id}\n                      draggableId={todo.id}\n                      index={index}\n                    >\n                      {(provided, snapshot) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          style={provided.draggableProps.style}\n                        >\n                          <TodoItem\n                            tagList={tagList}\n                            updateTodo={this.updateTodo}\n                            key={index}\n                            todo={todo}\n                          />\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}