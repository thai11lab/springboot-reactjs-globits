{"ast":null,"code":"import axios from \"axios\";\nimport UserService from \"./UserService\";\nconst HttpMethods = {\n  GET: 'GET',\n  POST: 'POST',\n  DELETE: 'DELETE'\n};\n\nconst _axios = axios.create();\n\nconst configure = () => {\n  _axios.interceptors.request.use(config => {\n    const cb = () => {\n      //config.header(\"Access-Control-Allow-Origin\", \"http://localhost:3000\");\n      //config.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n      //config.headers['Access-Control-Allow-Origin']= \"http://localhost:3000\";\n      //config.headers['Access-Control-Allow-Methods'] =\"Origin, X-Requested-With, Content-Type, Accept\";      \n      config.headers.Authorization = \"Bearer \".concat(UserService.getToken());\n      return Promise.resolve(config);\n    };\n\n    return UserService.updateToken(cb);\n  });\n};\n\nconst getAxiosClient = () => _axios;\n\nexport default {\n  HttpMethods,\n  configure,\n  getAxiosClient\n};","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/services/HttpService.js"],"names":["axios","UserService","HttpMethods","GET","POST","DELETE","_axios","create","configure","interceptors","request","use","config","cb","headers","Authorization","getToken","Promise","resolve","updateToken","getAxiosClient"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,GAAG,EAAE,KADa;AAElBC,EAAAA,IAAI,EAAE,MAFY;AAGlBC,EAAAA,MAAM,EAAE;AAHU,CAApB;;AAMA,MAAMC,MAAM,GAAGN,KAAK,CAACO,MAAN,EAAf;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtBF,EAAAA,MAAM,CAACG,YAAP,CAAoBC,OAApB,CAA4BC,GAA5B,CAAiCC,MAAD,IAAY;AAC1C,UAAMC,EAAE,GAAG,MAAM;AACf;AACA;AACA;AACA;AACAD,MAAAA,MAAM,CAACE,OAAP,CAAeC,aAAf,oBAAyCd,WAAW,CAACe,QAAZ,EAAzC;AACA,aAAOC,OAAO,CAACC,OAAR,CAAgBN,MAAhB,CAAP;AACD,KAPD;;AAQA,WAAOX,WAAW,CAACkB,WAAZ,CAAwBN,EAAxB,CAAP;AACD,GAVD;AAWD,CAZD;;AAcA,MAAMO,cAAc,GAAG,MAAMd,MAA7B;;AAEA,eAAe;AACbJ,EAAAA,WADa;AAEbM,EAAAA,SAFa;AAGbY,EAAAA;AAHa,CAAf","sourcesContent":["import axios from \"axios\";\nimport UserService from \"./UserService\";\n\nconst HttpMethods = {\n  GET: 'GET',\n  POST: 'POST',\n  DELETE: 'DELETE',\n};\n\nconst _axios = axios.create();\n\nconst configure = () => {\n  _axios.interceptors.request.use((config) => {\n    const cb = () => {\n      //config.header(\"Access-Control-Allow-Origin\", \"http://localhost:3000\");\n      //config.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n      //config.headers['Access-Control-Allow-Origin']= \"http://localhost:3000\";\n      //config.headers['Access-Control-Allow-Methods'] =\"Origin, X-Requested-With, Content-Type, Accept\";      \n      config.headers.Authorization = `Bearer ${UserService.getToken()}`;\n      return Promise.resolve(config);\n    };\n    return UserService.updateToken(cb);\n  });\n};\n\nconst getAxiosClient = () => _axios;\n\nexport default {\n  HttpMethods,\n  configure,\n  getAxiosClient,\n}\n"]},"metadata":{},"sourceType":"module"}