{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.getEventNodeFromPoint = getEventNodeFromPoint;\nexports.isEvent = isEvent;\nexports.objectsCollide = objectsCollide;\nexports.getBoundsForNode = getBoundsForNode;\nexports.default = void 0;\n\nvar _contains = _interopRequireDefault(require(\"dom-helpers/contains\"));\n\nvar _closest = _interopRequireDefault(require(\"dom-helpers/closest\"));\n\nvar _listen = _interopRequireDefault(require(\"dom-helpers/listen\"));\n\nfunction addEventListener(type, handler, target) {\n  if (target === void 0) {\n    target = document;\n  }\n\n  return (0, _listen.default)(target, type, handler, {\n    passive: false\n  });\n}\n\nfunction isOverContainer(container, x, y) {\n  return !container || (0, _contains.default)(container, document.elementFromPoint(x, y));\n}\n\nfunction getEventNodeFromPoint(node, _ref) {\n  var clientX = _ref.clientX,\n      clientY = _ref.clientY;\n  var target = document.elementFromPoint(clientX, clientY);\n  return (0, _closest.default)(target, '.rbc-event', node);\n}\n\nfunction isEvent(node, bounds) {\n  return !!getEventNodeFromPoint(node, bounds);\n}\n\nfunction getEventCoordinates(e) {\n  var target = e;\n\n  if (e.touches && e.touches.length) {\n    target = e.touches[0];\n  }\n\n  return {\n    clientX: target.clientX,\n    clientY: target.clientY,\n    pageX: target.pageX,\n    pageY: target.pageY\n  };\n}\n\nvar clickTolerance = 5;\nvar clickInterval = 250;\n\nvar Selection = /*#__PURE__*/function () {\n  function Selection(node, _temp) {\n    var _ref2 = _temp === void 0 ? {} : _temp,\n        _ref2$global = _ref2.global,\n        global = _ref2$global === void 0 ? false : _ref2$global,\n        _ref2$longPressThresh = _ref2.longPressThreshold,\n        longPressThreshold = _ref2$longPressThresh === void 0 ? 250 : _ref2$longPressThresh;\n\n    this.isDetached = false;\n    this.container = node;\n    this.globalMouse = !node || global;\n    this.longPressThreshold = longPressThreshold;\n    this._listeners = Object.create(null);\n    this._handleInitialEvent = this._handleInitialEvent.bind(this);\n    this._handleMoveEvent = this._handleMoveEvent.bind(this);\n    this._handleTerminatingEvent = this._handleTerminatingEvent.bind(this);\n    this._keyListener = this._keyListener.bind(this);\n    this._dropFromOutsideListener = this._dropFromOutsideListener.bind(this);\n    this._dragOverFromOutsideListener = this._dragOverFromOutsideListener.bind(this); // Fixes an iOS 10 bug where scrolling could not be prevented on the window.\n    // https://github.com/metafizzy/flickity/issues/457#issuecomment-254501356\n\n    this._removeTouchMoveWindowListener = addEventListener('touchmove', function () {}, window);\n    this._removeKeyDownListener = addEventListener('keydown', this._keyListener);\n    this._removeKeyUpListener = addEventListener('keyup', this._keyListener);\n    this._removeDropFromOutsideListener = addEventListener('drop', this._dropFromOutsideListener);\n    this._onDragOverfromOutisde = addEventListener('dragover', this._dragOverFromOutsideListener);\n\n    this._addInitialEventListener();\n  }\n\n  var _proto = Selection.prototype;\n\n  _proto.on = function on(type, handler) {\n    var handlers = this._listeners[type] || (this._listeners[type] = []);\n    handlers.push(handler);\n    return {\n      remove: function remove() {\n        var idx = handlers.indexOf(handler);\n        if (idx !== -1) handlers.splice(idx, 1);\n      }\n    };\n  };\n\n  _proto.emit = function emit(type) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var result;\n    var handlers = this._listeners[type] || [];\n    handlers.forEach(function (fn) {\n      if (result === undefined) result = fn.apply(void 0, args);\n    });\n    return result;\n  };\n\n  _proto.teardown = function teardown() {\n    this.isDetached = true;\n    this.listeners = Object.create(null);\n    this._removeTouchMoveWindowListener && this._removeTouchMoveWindowListener();\n    this._removeInitialEventListener && this._removeInitialEventListener();\n    this._removeEndListener && this._removeEndListener();\n    this._onEscListener && this._onEscListener();\n    this._removeMoveListener && this._removeMoveListener();\n    this._removeKeyUpListener && this._removeKeyUpListener();\n    this._removeKeyDownListener && this._removeKeyDownListener();\n    this._removeDropFromOutsideListener && this._removeDropFromOutsideListener();\n  };\n\n  _proto.isSelected = function isSelected(node) {\n    var box = this._selectRect;\n    if (!box || !this.selecting) return false;\n    return objectsCollide(box, getBoundsForNode(node));\n  };\n\n  _proto.filter = function filter(items) {\n    var box = this._selectRect; //not selecting\n\n    if (!box || !this.selecting) return [];\n    return items.filter(this.isSelected, this);\n  } // Adds a listener that will call the handler only after the user has pressed on the screen\n  // without moving their finger for 250ms.\n  ;\n\n  _proto._addLongPressListener = function _addLongPressListener(handler, initialEvent) {\n    var _this = this;\n\n    var timer = null;\n    var removeTouchMoveListener = null;\n    var removeTouchEndListener = null;\n\n    var handleTouchStart = function handleTouchStart(initialEvent) {\n      timer = setTimeout(function () {\n        cleanup();\n        handler(initialEvent);\n      }, _this.longPressThreshold);\n      removeTouchMoveListener = addEventListener('touchmove', function () {\n        return cleanup();\n      });\n      removeTouchEndListener = addEventListener('touchend', function () {\n        return cleanup();\n      });\n    };\n\n    var removeTouchStartListener = addEventListener('touchstart', handleTouchStart);\n\n    var cleanup = function cleanup() {\n      if (timer) {\n        clearTimeout(timer);\n      }\n\n      if (removeTouchMoveListener) {\n        removeTouchMoveListener();\n      }\n\n      if (removeTouchEndListener) {\n        removeTouchEndListener();\n      }\n\n      timer = null;\n      removeTouchMoveListener = null;\n      removeTouchEndListener = null;\n    };\n\n    if (initialEvent) {\n      handleTouchStart(initialEvent);\n    }\n\n    return function () {\n      cleanup();\n      removeTouchStartListener();\n    };\n  } // Listen for mousedown and touchstart events. When one is received, disable the other and setup\n  // future event handling based on the type of event.\n  ;\n\n  _proto._addInitialEventListener = function _addInitialEventListener() {\n    var _this2 = this;\n\n    var removeMouseDownListener = addEventListener('mousedown', function (e) {\n      _this2._removeInitialEventListener();\n\n      _this2._handleInitialEvent(e);\n\n      _this2._removeInitialEventListener = addEventListener('mousedown', _this2._handleInitialEvent);\n    });\n    var removeTouchStartListener = addEventListener('touchstart', function (e) {\n      _this2._removeInitialEventListener();\n\n      _this2._removeInitialEventListener = _this2._addLongPressListener(_this2._handleInitialEvent, e);\n    });\n\n    this._removeInitialEventListener = function () {\n      removeMouseDownListener();\n      removeTouchStartListener();\n    };\n  };\n\n  _proto._dropFromOutsideListener = function _dropFromOutsideListener(e) {\n    var _getEventCoordinates = getEventCoordinates(e),\n        pageX = _getEventCoordinates.pageX,\n        pageY = _getEventCoordinates.pageY,\n        clientX = _getEventCoordinates.clientX,\n        clientY = _getEventCoordinates.clientY;\n\n    this.emit('dropFromOutside', {\n      x: pageX,\n      y: pageY,\n      clientX: clientX,\n      clientY: clientY\n    });\n    e.preventDefault();\n  };\n\n  _proto._dragOverFromOutsideListener = function _dragOverFromOutsideListener(e) {\n    var _getEventCoordinates2 = getEventCoordinates(e),\n        pageX = _getEventCoordinates2.pageX,\n        pageY = _getEventCoordinates2.pageY,\n        clientX = _getEventCoordinates2.clientX,\n        clientY = _getEventCoordinates2.clientY;\n\n    this.emit('dragOverFromOutside', {\n      x: pageX,\n      y: pageY,\n      clientX: clientX,\n      clientY: clientY\n    });\n    e.preventDefault();\n  };\n\n  _proto._handleInitialEvent = function _handleInitialEvent(e) {\n    if (this.isDetached) {\n      return;\n    }\n\n    var _getEventCoordinates3 = getEventCoordinates(e),\n        clientX = _getEventCoordinates3.clientX,\n        clientY = _getEventCoordinates3.clientY,\n        pageX = _getEventCoordinates3.pageX,\n        pageY = _getEventCoordinates3.pageY;\n\n    var node = this.container(),\n        collides,\n        offsetData; // Right clicks\n\n    if (e.which === 3 || e.button === 2 || !isOverContainer(node, clientX, clientY)) return;\n\n    if (!this.globalMouse && node && !(0, _contains.default)(node, e.target)) {\n      var _normalizeDistance = normalizeDistance(0),\n          top = _normalizeDistance.top,\n          left = _normalizeDistance.left,\n          bottom = _normalizeDistance.bottom,\n          right = _normalizeDistance.right;\n\n      offsetData = getBoundsForNode(node);\n      collides = objectsCollide({\n        top: offsetData.top - top,\n        left: offsetData.left - left,\n        bottom: offsetData.bottom + bottom,\n        right: offsetData.right + right\n      }, {\n        top: pageY,\n        left: pageX\n      });\n      if (!collides) return;\n    }\n\n    var result = this.emit('beforeSelect', this._initialEventData = {\n      isTouch: /^touch/.test(e.type),\n      x: pageX,\n      y: pageY,\n      clientX: clientX,\n      clientY: clientY\n    });\n    if (result === false) return;\n\n    switch (e.type) {\n      case 'mousedown':\n        this._removeEndListener = addEventListener('mouseup', this._handleTerminatingEvent);\n        this._onEscListener = addEventListener('keydown', this._handleTerminatingEvent);\n        this._removeMoveListener = addEventListener('mousemove', this._handleMoveEvent);\n        break;\n\n      case 'touchstart':\n        this._handleMoveEvent(e);\n\n        this._removeEndListener = addEventListener('touchend', this._handleTerminatingEvent);\n        this._removeMoveListener = addEventListener('touchmove', this._handleMoveEvent);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  _proto._handleTerminatingEvent = function _handleTerminatingEvent(e) {\n    var _getEventCoordinates4 = getEventCoordinates(e),\n        pageX = _getEventCoordinates4.pageX,\n        pageY = _getEventCoordinates4.pageY;\n\n    this.selecting = false;\n    this._removeEndListener && this._removeEndListener();\n    this._removeMoveListener && this._removeMoveListener();\n    if (!this._initialEventData) return;\n    var inRoot = !this.container || (0, _contains.default)(this.container(), e.target);\n    var bounds = this._selectRect;\n    var click = this.isClick(pageX, pageY);\n    this._initialEventData = null;\n\n    if (e.key === 'Escape') {\n      return this.emit('reset');\n    }\n\n    if (!inRoot) {\n      return this.emit('reset');\n    }\n\n    if (click && inRoot) {\n      return this._handleClickEvent(e);\n    } // User drag-clicked in the Selectable area\n\n\n    if (!click) return this.emit('select', bounds);\n  };\n\n  _proto._handleClickEvent = function _handleClickEvent(e) {\n    var _getEventCoordinates5 = getEventCoordinates(e),\n        pageX = _getEventCoordinates5.pageX,\n        pageY = _getEventCoordinates5.pageY,\n        clientX = _getEventCoordinates5.clientX,\n        clientY = _getEventCoordinates5.clientY;\n\n    var now = new Date().getTime();\n\n    if (this._lastClickData && now - this._lastClickData.timestamp < clickInterval) {\n      // Double click event\n      this._lastClickData = null;\n      return this.emit('doubleClick', {\n        x: pageX,\n        y: pageY,\n        clientX: clientX,\n        clientY: clientY\n      });\n    } // Click event\n\n\n    this._lastClickData = {\n      timestamp: now\n    };\n    return this.emit('click', {\n      x: pageX,\n      y: pageY,\n      clientX: clientX,\n      clientY: clientY\n    });\n  };\n\n  _proto._handleMoveEvent = function _handleMoveEvent(e) {\n    if (this._initialEventData === null || this.isDetached) {\n      return;\n    }\n\n    var _this$_initialEventDa = this._initialEventData,\n        x = _this$_initialEventDa.x,\n        y = _this$_initialEventDa.y;\n\n    var _getEventCoordinates6 = getEventCoordinates(e),\n        pageX = _getEventCoordinates6.pageX,\n        pageY = _getEventCoordinates6.pageY;\n\n    var w = Math.abs(x - pageX);\n    var h = Math.abs(y - pageY);\n    var left = Math.min(pageX, x),\n        top = Math.min(pageY, y),\n        old = this.selecting; // Prevent emitting selectStart event until mouse is moved.\n    // in Chrome on Windows, mouseMove event may be fired just after mouseDown event.\n\n    if (this.isClick(pageX, pageY) && !old && !(w || h)) {\n      return;\n    }\n\n    this.selecting = true;\n    this._selectRect = {\n      top: top,\n      left: left,\n      x: pageX,\n      y: pageY,\n      right: left + w,\n      bottom: top + h\n    };\n\n    if (!old) {\n      this.emit('selectStart', this._initialEventData);\n    }\n\n    if (!this.isClick(pageX, pageY)) this.emit('selecting', this._selectRect);\n    e.preventDefault();\n  };\n\n  _proto._keyListener = function _keyListener(e) {\n    this.ctrl = e.metaKey || e.ctrlKey;\n  };\n\n  _proto.isClick = function isClick(pageX, pageY) {\n    var _this$_initialEventDa2 = this._initialEventData,\n        x = _this$_initialEventDa2.x,\n        y = _this$_initialEventDa2.y,\n        isTouch = _this$_initialEventDa2.isTouch;\n    return !isTouch && Math.abs(pageX - x) <= clickTolerance && Math.abs(pageY - y) <= clickTolerance;\n  };\n\n  return Selection;\n}();\n/**\n * Resolve the disance prop from either an Int or an Object\n * @return {Object}\n */\n\n\nfunction normalizeDistance(distance) {\n  if (distance === void 0) {\n    distance = 0;\n  }\n\n  if (typeof distance !== 'object') distance = {\n    top: distance,\n    left: distance,\n    right: distance,\n    bottom: distance\n  };\n  return distance;\n}\n/**\n * Given two objects containing \"top\", \"left\", \"offsetWidth\" and \"offsetHeight\"\n * properties, determine if they collide.\n * @param  {Object|HTMLElement} a\n * @param  {Object|HTMLElement} b\n * @return {bool}\n */\n\n\nfunction objectsCollide(nodeA, nodeB, tolerance) {\n  if (tolerance === void 0) {\n    tolerance = 0;\n  }\n\n  var _getBoundsForNode = getBoundsForNode(nodeA),\n      aTop = _getBoundsForNode.top,\n      aLeft = _getBoundsForNode.left,\n      _getBoundsForNode$rig = _getBoundsForNode.right,\n      aRight = _getBoundsForNode$rig === void 0 ? aLeft : _getBoundsForNode$rig,\n      _getBoundsForNode$bot = _getBoundsForNode.bottom,\n      aBottom = _getBoundsForNode$bot === void 0 ? aTop : _getBoundsForNode$bot;\n\n  var _getBoundsForNode2 = getBoundsForNode(nodeB),\n      bTop = _getBoundsForNode2.top,\n      bLeft = _getBoundsForNode2.left,\n      _getBoundsForNode2$ri = _getBoundsForNode2.right,\n      bRight = _getBoundsForNode2$ri === void 0 ? bLeft : _getBoundsForNode2$ri,\n      _getBoundsForNode2$bo = _getBoundsForNode2.bottom,\n      bBottom = _getBoundsForNode2$bo === void 0 ? bTop : _getBoundsForNode2$bo;\n\n  return !( // 'a' bottom doesn't touch 'b' top\n  aBottom - tolerance < bTop || // 'a' top doesn't touch 'b' bottom\n  aTop + tolerance > bBottom || // 'a' right doesn't touch 'b' left\n  aRight - tolerance < bLeft || // 'a' left doesn't touch 'b' right\n  aLeft + tolerance > bRight);\n}\n/**\n * Given a node, get everything needed to calculate its boundaries\n * @param  {HTMLElement} node\n * @return {Object}\n */\n\n\nfunction getBoundsForNode(node) {\n  if (!node.getBoundingClientRect) return node;\n  var rect = node.getBoundingClientRect(),\n      left = rect.left + pageOffset('left'),\n      top = rect.top + pageOffset('top');\n  return {\n    top: top,\n    left: left,\n    right: (node.offsetWidth || 0) + left,\n    bottom: (node.offsetHeight || 0) + top\n  };\n}\n\nfunction pageOffset(dir) {\n  if (dir === 'left') return window.pageXOffset || document.body.scrollLeft || 0;\n  if (dir === 'top') return window.pageYOffset || document.body.scrollTop || 0;\n}\n\nvar _default = Selection;\nexports.default = _default;","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/node_modules/react-big-calendar/lib/Selection.js"],"names":["_interopRequireDefault","require","exports","__esModule","getEventNodeFromPoint","isEvent","objectsCollide","getBoundsForNode","default","_contains","_closest","_listen","addEventListener","type","handler","target","document","passive","isOverContainer","container","x","y","elementFromPoint","node","_ref","clientX","clientY","bounds","getEventCoordinates","e","touches","length","pageX","pageY","clickTolerance","clickInterval","Selection","_temp","_ref2","_ref2$global","global","_ref2$longPressThresh","longPressThreshold","isDetached","globalMouse","_listeners","Object","create","_handleInitialEvent","bind","_handleMoveEvent","_handleTerminatingEvent","_keyListener","_dropFromOutsideListener","_dragOverFromOutsideListener","_removeTouchMoveWindowListener","window","_removeKeyDownListener","_removeKeyUpListener","_removeDropFromOutsideListener","_onDragOverfromOutisde","_addInitialEventListener","_proto","prototype","on","handlers","push","remove","idx","indexOf","splice","emit","_len","arguments","args","Array","_key","result","forEach","fn","undefined","apply","teardown","listeners","_removeInitialEventListener","_removeEndListener","_onEscListener","_removeMoveListener","isSelected","box","_selectRect","selecting","filter","items","_addLongPressListener","initialEvent","_this","timer","removeTouchMoveListener","removeTouchEndListener","handleTouchStart","setTimeout","cleanup","removeTouchStartListener","clearTimeout","_this2","removeMouseDownListener","_getEventCoordinates","preventDefault","_getEventCoordinates2","_getEventCoordinates3","collides","offsetData","which","button","_normalizeDistance","normalizeDistance","top","left","bottom","right","_initialEventData","isTouch","test","_getEventCoordinates4","inRoot","click","isClick","key","_handleClickEvent","_getEventCoordinates5","now","Date","getTime","_lastClickData","timestamp","_this$_initialEventDa","_getEventCoordinates6","w","Math","abs","h","min","old","ctrl","metaKey","ctrlKey","_this$_initialEventDa2","distance","nodeA","nodeB","tolerance","_getBoundsForNode","aTop","aLeft","_getBoundsForNode$rig","aRight","_getBoundsForNode$bot","aBottom","_getBoundsForNode2","bTop","bLeft","_getBoundsForNode2$ri","bRight","_getBoundsForNode2$bo","bBottom","getBoundingClientRect","rect","pageOffset","offsetWidth","offsetHeight","dir","pageXOffset","body","scrollLeft","pageYOffset","scrollTop","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.getEventNodeFromPoint = getEventNodeFromPoint;\nexports.isEvent = isEvent;\nexports.objectsCollide = objectsCollide;\nexports.getBoundsForNode = getBoundsForNode;\nexports.default = void 0;\n\nvar _contains = _interopRequireDefault(require(\"dom-helpers/contains\"));\n\nvar _closest = _interopRequireDefault(require(\"dom-helpers/closest\"));\n\nvar _listen = _interopRequireDefault(require(\"dom-helpers/listen\"));\n\nfunction addEventListener(type, handler, target) {\n  if (target === void 0) {\n    target = document;\n  }\n\n  return (0, _listen.default)(target, type, handler, {\n    passive: false\n  });\n}\n\nfunction isOverContainer(container, x, y) {\n  return !container || (0, _contains.default)(container, document.elementFromPoint(x, y));\n}\n\nfunction getEventNodeFromPoint(node, _ref) {\n  var clientX = _ref.clientX,\n      clientY = _ref.clientY;\n  var target = document.elementFromPoint(clientX, clientY);\n  return (0, _closest.default)(target, '.rbc-event', node);\n}\n\nfunction isEvent(node, bounds) {\n  return !!getEventNodeFromPoint(node, bounds);\n}\n\nfunction getEventCoordinates(e) {\n  var target = e;\n\n  if (e.touches && e.touches.length) {\n    target = e.touches[0];\n  }\n\n  return {\n    clientX: target.clientX,\n    clientY: target.clientY,\n    pageX: target.pageX,\n    pageY: target.pageY\n  };\n}\n\nvar clickTolerance = 5;\nvar clickInterval = 250;\n\nvar Selection =\n/*#__PURE__*/\nfunction () {\n  function Selection(node, _temp) {\n    var _ref2 = _temp === void 0 ? {} : _temp,\n        _ref2$global = _ref2.global,\n        global = _ref2$global === void 0 ? false : _ref2$global,\n        _ref2$longPressThresh = _ref2.longPressThreshold,\n        longPressThreshold = _ref2$longPressThresh === void 0 ? 250 : _ref2$longPressThresh;\n\n    this.isDetached = false;\n    this.container = node;\n    this.globalMouse = !node || global;\n    this.longPressThreshold = longPressThreshold;\n    this._listeners = Object.create(null);\n    this._handleInitialEvent = this._handleInitialEvent.bind(this);\n    this._handleMoveEvent = this._handleMoveEvent.bind(this);\n    this._handleTerminatingEvent = this._handleTerminatingEvent.bind(this);\n    this._keyListener = this._keyListener.bind(this);\n    this._dropFromOutsideListener = this._dropFromOutsideListener.bind(this);\n    this._dragOverFromOutsideListener = this._dragOverFromOutsideListener.bind(this); // Fixes an iOS 10 bug where scrolling could not be prevented on the window.\n    // https://github.com/metafizzy/flickity/issues/457#issuecomment-254501356\n\n    this._removeTouchMoveWindowListener = addEventListener('touchmove', function () {}, window);\n    this._removeKeyDownListener = addEventListener('keydown', this._keyListener);\n    this._removeKeyUpListener = addEventListener('keyup', this._keyListener);\n    this._removeDropFromOutsideListener = addEventListener('drop', this._dropFromOutsideListener);\n    this._onDragOverfromOutisde = addEventListener('dragover', this._dragOverFromOutsideListener);\n\n    this._addInitialEventListener();\n  }\n\n  var _proto = Selection.prototype;\n\n  _proto.on = function on(type, handler) {\n    var handlers = this._listeners[type] || (this._listeners[type] = []);\n    handlers.push(handler);\n    return {\n      remove: function remove() {\n        var idx = handlers.indexOf(handler);\n        if (idx !== -1) handlers.splice(idx, 1);\n      }\n    };\n  };\n\n  _proto.emit = function emit(type) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var result;\n    var handlers = this._listeners[type] || [];\n    handlers.forEach(function (fn) {\n      if (result === undefined) result = fn.apply(void 0, args);\n    });\n    return result;\n  };\n\n  _proto.teardown = function teardown() {\n    this.isDetached = true;\n    this.listeners = Object.create(null);\n    this._removeTouchMoveWindowListener && this._removeTouchMoveWindowListener();\n    this._removeInitialEventListener && this._removeInitialEventListener();\n    this._removeEndListener && this._removeEndListener();\n    this._onEscListener && this._onEscListener();\n    this._removeMoveListener && this._removeMoveListener();\n    this._removeKeyUpListener && this._removeKeyUpListener();\n    this._removeKeyDownListener && this._removeKeyDownListener();\n    this._removeDropFromOutsideListener && this._removeDropFromOutsideListener();\n  };\n\n  _proto.isSelected = function isSelected(node) {\n    var box = this._selectRect;\n    if (!box || !this.selecting) return false;\n    return objectsCollide(box, getBoundsForNode(node));\n  };\n\n  _proto.filter = function filter(items) {\n    var box = this._selectRect; //not selecting\n\n    if (!box || !this.selecting) return [];\n    return items.filter(this.isSelected, this);\n  } // Adds a listener that will call the handler only after the user has pressed on the screen\n  // without moving their finger for 250ms.\n  ;\n\n  _proto._addLongPressListener = function _addLongPressListener(handler, initialEvent) {\n    var _this = this;\n\n    var timer = null;\n    var removeTouchMoveListener = null;\n    var removeTouchEndListener = null;\n\n    var handleTouchStart = function handleTouchStart(initialEvent) {\n      timer = setTimeout(function () {\n        cleanup();\n        handler(initialEvent);\n      }, _this.longPressThreshold);\n      removeTouchMoveListener = addEventListener('touchmove', function () {\n        return cleanup();\n      });\n      removeTouchEndListener = addEventListener('touchend', function () {\n        return cleanup();\n      });\n    };\n\n    var removeTouchStartListener = addEventListener('touchstart', handleTouchStart);\n\n    var cleanup = function cleanup() {\n      if (timer) {\n        clearTimeout(timer);\n      }\n\n      if (removeTouchMoveListener) {\n        removeTouchMoveListener();\n      }\n\n      if (removeTouchEndListener) {\n        removeTouchEndListener();\n      }\n\n      timer = null;\n      removeTouchMoveListener = null;\n      removeTouchEndListener = null;\n    };\n\n    if (initialEvent) {\n      handleTouchStart(initialEvent);\n    }\n\n    return function () {\n      cleanup();\n      removeTouchStartListener();\n    };\n  } // Listen for mousedown and touchstart events. When one is received, disable the other and setup\n  // future event handling based on the type of event.\n  ;\n\n  _proto._addInitialEventListener = function _addInitialEventListener() {\n    var _this2 = this;\n\n    var removeMouseDownListener = addEventListener('mousedown', function (e) {\n      _this2._removeInitialEventListener();\n\n      _this2._handleInitialEvent(e);\n\n      _this2._removeInitialEventListener = addEventListener('mousedown', _this2._handleInitialEvent);\n    });\n    var removeTouchStartListener = addEventListener('touchstart', function (e) {\n      _this2._removeInitialEventListener();\n\n      _this2._removeInitialEventListener = _this2._addLongPressListener(_this2._handleInitialEvent, e);\n    });\n\n    this._removeInitialEventListener = function () {\n      removeMouseDownListener();\n      removeTouchStartListener();\n    };\n  };\n\n  _proto._dropFromOutsideListener = function _dropFromOutsideListener(e) {\n    var _getEventCoordinates = getEventCoordinates(e),\n        pageX = _getEventCoordinates.pageX,\n        pageY = _getEventCoordinates.pageY,\n        clientX = _getEventCoordinates.clientX,\n        clientY = _getEventCoordinates.clientY;\n\n    this.emit('dropFromOutside', {\n      x: pageX,\n      y: pageY,\n      clientX: clientX,\n      clientY: clientY\n    });\n    e.preventDefault();\n  };\n\n  _proto._dragOverFromOutsideListener = function _dragOverFromOutsideListener(e) {\n    var _getEventCoordinates2 = getEventCoordinates(e),\n        pageX = _getEventCoordinates2.pageX,\n        pageY = _getEventCoordinates2.pageY,\n        clientX = _getEventCoordinates2.clientX,\n        clientY = _getEventCoordinates2.clientY;\n\n    this.emit('dragOverFromOutside', {\n      x: pageX,\n      y: pageY,\n      clientX: clientX,\n      clientY: clientY\n    });\n    e.preventDefault();\n  };\n\n  _proto._handleInitialEvent = function _handleInitialEvent(e) {\n    if (this.isDetached) {\n      return;\n    }\n\n    var _getEventCoordinates3 = getEventCoordinates(e),\n        clientX = _getEventCoordinates3.clientX,\n        clientY = _getEventCoordinates3.clientY,\n        pageX = _getEventCoordinates3.pageX,\n        pageY = _getEventCoordinates3.pageY;\n\n    var node = this.container(),\n        collides,\n        offsetData; // Right clicks\n\n    if (e.which === 3 || e.button === 2 || !isOverContainer(node, clientX, clientY)) return;\n\n    if (!this.globalMouse && node && !(0, _contains.default)(node, e.target)) {\n      var _normalizeDistance = normalizeDistance(0),\n          top = _normalizeDistance.top,\n          left = _normalizeDistance.left,\n          bottom = _normalizeDistance.bottom,\n          right = _normalizeDistance.right;\n\n      offsetData = getBoundsForNode(node);\n      collides = objectsCollide({\n        top: offsetData.top - top,\n        left: offsetData.left - left,\n        bottom: offsetData.bottom + bottom,\n        right: offsetData.right + right\n      }, {\n        top: pageY,\n        left: pageX\n      });\n      if (!collides) return;\n    }\n\n    var result = this.emit('beforeSelect', this._initialEventData = {\n      isTouch: /^touch/.test(e.type),\n      x: pageX,\n      y: pageY,\n      clientX: clientX,\n      clientY: clientY\n    });\n    if (result === false) return;\n\n    switch (e.type) {\n      case 'mousedown':\n        this._removeEndListener = addEventListener('mouseup', this._handleTerminatingEvent);\n        this._onEscListener = addEventListener('keydown', this._handleTerminatingEvent);\n        this._removeMoveListener = addEventListener('mousemove', this._handleMoveEvent);\n        break;\n\n      case 'touchstart':\n        this._handleMoveEvent(e);\n\n        this._removeEndListener = addEventListener('touchend', this._handleTerminatingEvent);\n        this._removeMoveListener = addEventListener('touchmove', this._handleMoveEvent);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  _proto._handleTerminatingEvent = function _handleTerminatingEvent(e) {\n    var _getEventCoordinates4 = getEventCoordinates(e),\n        pageX = _getEventCoordinates4.pageX,\n        pageY = _getEventCoordinates4.pageY;\n\n    this.selecting = false;\n    this._removeEndListener && this._removeEndListener();\n    this._removeMoveListener && this._removeMoveListener();\n    if (!this._initialEventData) return;\n    var inRoot = !this.container || (0, _contains.default)(this.container(), e.target);\n    var bounds = this._selectRect;\n    var click = this.isClick(pageX, pageY);\n    this._initialEventData = null;\n\n    if (e.key === 'Escape') {\n      return this.emit('reset');\n    }\n\n    if (!inRoot) {\n      return this.emit('reset');\n    }\n\n    if (click && inRoot) {\n      return this._handleClickEvent(e);\n    } // User drag-clicked in the Selectable area\n\n\n    if (!click) return this.emit('select', bounds);\n  };\n\n  _proto._handleClickEvent = function _handleClickEvent(e) {\n    var _getEventCoordinates5 = getEventCoordinates(e),\n        pageX = _getEventCoordinates5.pageX,\n        pageY = _getEventCoordinates5.pageY,\n        clientX = _getEventCoordinates5.clientX,\n        clientY = _getEventCoordinates5.clientY;\n\n    var now = new Date().getTime();\n\n    if (this._lastClickData && now - this._lastClickData.timestamp < clickInterval) {\n      // Double click event\n      this._lastClickData = null;\n      return this.emit('doubleClick', {\n        x: pageX,\n        y: pageY,\n        clientX: clientX,\n        clientY: clientY\n      });\n    } // Click event\n\n\n    this._lastClickData = {\n      timestamp: now\n    };\n    return this.emit('click', {\n      x: pageX,\n      y: pageY,\n      clientX: clientX,\n      clientY: clientY\n    });\n  };\n\n  _proto._handleMoveEvent = function _handleMoveEvent(e) {\n    if (this._initialEventData === null || this.isDetached) {\n      return;\n    }\n\n    var _this$_initialEventDa = this._initialEventData,\n        x = _this$_initialEventDa.x,\n        y = _this$_initialEventDa.y;\n\n    var _getEventCoordinates6 = getEventCoordinates(e),\n        pageX = _getEventCoordinates6.pageX,\n        pageY = _getEventCoordinates6.pageY;\n\n    var w = Math.abs(x - pageX);\n    var h = Math.abs(y - pageY);\n    var left = Math.min(pageX, x),\n        top = Math.min(pageY, y),\n        old = this.selecting; // Prevent emitting selectStart event until mouse is moved.\n    // in Chrome on Windows, mouseMove event may be fired just after mouseDown event.\n\n    if (this.isClick(pageX, pageY) && !old && !(w || h)) {\n      return;\n    }\n\n    this.selecting = true;\n    this._selectRect = {\n      top: top,\n      left: left,\n      x: pageX,\n      y: pageY,\n      right: left + w,\n      bottom: top + h\n    };\n\n    if (!old) {\n      this.emit('selectStart', this._initialEventData);\n    }\n\n    if (!this.isClick(pageX, pageY)) this.emit('selecting', this._selectRect);\n    e.preventDefault();\n  };\n\n  _proto._keyListener = function _keyListener(e) {\n    this.ctrl = e.metaKey || e.ctrlKey;\n  };\n\n  _proto.isClick = function isClick(pageX, pageY) {\n    var _this$_initialEventDa2 = this._initialEventData,\n        x = _this$_initialEventDa2.x,\n        y = _this$_initialEventDa2.y,\n        isTouch = _this$_initialEventDa2.isTouch;\n    return !isTouch && Math.abs(pageX - x) <= clickTolerance && Math.abs(pageY - y) <= clickTolerance;\n  };\n\n  return Selection;\n}();\n/**\n * Resolve the disance prop from either an Int or an Object\n * @return {Object}\n */\n\n\nfunction normalizeDistance(distance) {\n  if (distance === void 0) {\n    distance = 0;\n  }\n\n  if (typeof distance !== 'object') distance = {\n    top: distance,\n    left: distance,\n    right: distance,\n    bottom: distance\n  };\n  return distance;\n}\n/**\n * Given two objects containing \"top\", \"left\", \"offsetWidth\" and \"offsetHeight\"\n * properties, determine if they collide.\n * @param  {Object|HTMLElement} a\n * @param  {Object|HTMLElement} b\n * @return {bool}\n */\n\n\nfunction objectsCollide(nodeA, nodeB, tolerance) {\n  if (tolerance === void 0) {\n    tolerance = 0;\n  }\n\n  var _getBoundsForNode = getBoundsForNode(nodeA),\n      aTop = _getBoundsForNode.top,\n      aLeft = _getBoundsForNode.left,\n      _getBoundsForNode$rig = _getBoundsForNode.right,\n      aRight = _getBoundsForNode$rig === void 0 ? aLeft : _getBoundsForNode$rig,\n      _getBoundsForNode$bot = _getBoundsForNode.bottom,\n      aBottom = _getBoundsForNode$bot === void 0 ? aTop : _getBoundsForNode$bot;\n\n  var _getBoundsForNode2 = getBoundsForNode(nodeB),\n      bTop = _getBoundsForNode2.top,\n      bLeft = _getBoundsForNode2.left,\n      _getBoundsForNode2$ri = _getBoundsForNode2.right,\n      bRight = _getBoundsForNode2$ri === void 0 ? bLeft : _getBoundsForNode2$ri,\n      _getBoundsForNode2$bo = _getBoundsForNode2.bottom,\n      bBottom = _getBoundsForNode2$bo === void 0 ? bTop : _getBoundsForNode2$bo;\n\n  return !( // 'a' bottom doesn't touch 'b' top\n  aBottom - tolerance < bTop || // 'a' top doesn't touch 'b' bottom\n  aTop + tolerance > bBottom || // 'a' right doesn't touch 'b' left\n  aRight - tolerance < bLeft || // 'a' left doesn't touch 'b' right\n  aLeft + tolerance > bRight);\n}\n/**\n * Given a node, get everything needed to calculate its boundaries\n * @param  {HTMLElement} node\n * @return {Object}\n */\n\n\nfunction getBoundsForNode(node) {\n  if (!node.getBoundingClientRect) return node;\n  var rect = node.getBoundingClientRect(),\n      left = rect.left + pageOffset('left'),\n      top = rect.top + pageOffset('top');\n  return {\n    top: top,\n    left: left,\n    right: (node.offsetWidth || 0) + left,\n    bottom: (node.offsetHeight || 0) + top\n  };\n}\n\nfunction pageOffset(dir) {\n  if (dir === 'left') return window.pageXOffset || document.body.scrollLeft || 0;\n  if (dir === 'top') return window.pageYOffset || document.body.scrollTop || 0;\n}\n\nvar _default = Selection;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}