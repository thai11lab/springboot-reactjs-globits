{"ast":null,"code":"import _mapValues from \"lodash/mapValues\";\nimport _defaults from \"lodash/defaults\";\nimport _isFunction from \"lodash/isFunction\";\nimport _throttle from \"lodash/throttle\";\nimport _assign from \"lodash/assign\";\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nimport { Selection } from \"victory-core\";\nimport isEqual from \"react-fast-compare\";\nvar Helpers = {\n  getDimension: function getDimension(props) {\n    var horizontal = props.horizontal,\n        brushDimension = props.brushDimension;\n\n    if (!horizontal || !brushDimension) {\n      return brushDimension;\n    }\n\n    return brushDimension === \"x\" ? \"y\" : \"x\";\n  },\n  withinBounds: function withinBounds(point, bounds, padding) {\n    var _mapValues2 = _mapValues(bounds, Number),\n        x1 = _mapValues2.x1,\n        x2 = _mapValues2.x2,\n        y1 = _mapValues2.y1,\n        y2 = _mapValues2.y2;\n\n    var _mapValues3 = _mapValues(point, Number),\n        x = _mapValues3.x,\n        y = _mapValues3.y;\n\n    padding = padding ? padding / 2 : 0;\n    return x + padding >= Math.min(x1, x2) && x - padding <= Math.max(x1, x2) && y + padding >= Math.min(y1, y2) && y - padding <= Math.max(y1, y2);\n  },\n  getDomainBox: function getDomainBox(props, fullDomain, selectedDomain) {\n    var brushDimension = this.getDimension(props);\n    fullDomain = _defaults({}, fullDomain, props.domain);\n    selectedDomain = _defaults({}, selectedDomain, fullDomain);\n    var fullCoords = Selection.getDomainCoordinates(props, fullDomain);\n    var selectedCoords = Selection.getDomainCoordinates(props, selectedDomain);\n    return {\n      x1: brushDimension !== \"y\" ? Math.min.apply(Math, _toConsumableArray(selectedCoords.x)) : Math.min.apply(Math, _toConsumableArray(fullCoords.x)),\n      x2: brushDimension !== \"y\" ? Math.max.apply(Math, _toConsumableArray(selectedCoords.x)) : Math.max.apply(Math, _toConsumableArray(fullCoords.x)),\n      y1: brushDimension !== \"x\" ? Math.min.apply(Math, _toConsumableArray(selectedCoords.y)) : Math.min.apply(Math, _toConsumableArray(fullCoords.y)),\n      y2: brushDimension !== \"x\" ? Math.max.apply(Math, _toConsumableArray(selectedCoords.y)) : Math.max.apply(Math, _toConsumableArray(fullCoords.y))\n    };\n  },\n  getHandles: function getHandles(props, domainBox) {\n    var x1 = domainBox.x1,\n        x2 = domainBox.x2,\n        y1 = domainBox.y1,\n        y2 = domainBox.y2;\n    var minX = Math.min(x1, x2);\n    var maxX = Math.max(x1, x2);\n    var minY = Math.min(y1, y2);\n    var maxY = Math.max(y1, y2);\n    var handleWidth = props.handleWidth / 2;\n    return {\n      left: {\n        x1: minX - handleWidth,\n        x2: minX + handleWidth,\n        y1: y1,\n        y2: y2\n      },\n      right: {\n        x1: maxX - handleWidth,\n        x2: maxX + handleWidth,\n        y1: y1,\n        y2: y2\n      },\n      top: {\n        x1: x1,\n        x2: x2,\n        y1: minY + handleWidth,\n        y2: minY - handleWidth\n      },\n      bottom: {\n        x1: x1,\n        x2: x2,\n        y1: maxY + handleWidth,\n        y2: maxY - handleWidth\n      }\n    };\n  },\n  getActiveHandles: function getActiveHandles(point, props, domainBox) {\n    var _this = this;\n\n    var handles = this.getHandles(props, domainBox);\n    var activeHandles = [\"top\", \"bottom\", \"left\", \"right\"].reduce(function (memo, opt) {\n      memo = _this.withinBounds(point, handles[opt]) ? memo.concat(opt) : memo;\n      return memo;\n    }, []);\n    return activeHandles.length && activeHandles;\n  },\n  getResizeMutation: function getResizeMutation(box, handles) {\n    var x1 = box.x1,\n        y1 = box.y1,\n        x2 = box.x2,\n        y2 = box.y2;\n    var mutations = {\n      left: {\n        x1: Math.max(x1, x2),\n        x2: Math.min(x1, x2),\n        y1: y1,\n        y2: y2\n      },\n      right: {\n        x1: Math.min(x1, x2),\n        x2: Math.max(x1, x2),\n        y1: y1,\n        y2: y2\n      },\n      top: {\n        y1: Math.max(y1, y2),\n        y2: Math.min(y1, y2),\n        x1: x1,\n        x2: x2\n      },\n      bottom: {\n        y1: Math.min(y1, y2),\n        y2: Math.max(y1, y2),\n        x1: x1,\n        x2: x2\n      }\n    };\n    return handles.reduce(function (memo, current) {\n      return _assign(memo, mutations[current]);\n    }, {});\n  },\n  getMinimumDomain: function getMinimumDomain() {\n    return {\n      x: [0, 1 / Number.MAX_SAFE_INTEGER],\n      y: [0, 1 / Number.MAX_SAFE_INTEGER]\n    };\n  },\n  getDefaultBrushArea: function getDefaultBrushArea(defaultBrushArea, domain, cachedDomain) {\n    if (defaultBrushArea === \"none\") {\n      return this.getMinimumDomain();\n    } else if (defaultBrushArea === \"disable\") {\n      return cachedDomain;\n    } else {\n      return domain;\n    }\n  },\n  getSelectionMutation: function getSelectionMutation(point, box, brushDimension) {\n    var x = point.x,\n        y = point.y;\n    var x1 = box.x1,\n        x2 = box.x2,\n        y1 = box.y1,\n        y2 = box.y2;\n    return {\n      x1: brushDimension !== \"y\" ? x : x1,\n      y1: brushDimension !== \"x\" ? y : y1,\n      x2: brushDimension !== \"y\" ? x : x2,\n      y2: brushDimension !== \"x\" ? y : y2\n    };\n  },\n  panBox: function panBox(props, point) {\n    var domain = props.domain,\n        startX = props.startX,\n        startY = props.startY;\n    var brushDimension = this.getDimension(props);\n\n    var brushDomain = _defaults({}, props.brushDomain, domain);\n\n    var fullDomain = _defaults({}, props.fullDomain, domain);\n\n    var _ref = props.x1 ? props : this.getDomainBox(props, fullDomain, brushDomain),\n        x1 = _ref.x1,\n        x2 = _ref.x2,\n        y1 = _ref.y1,\n        y2 = _ref.y2;\n\n    var x = point.x,\n        y = point.y;\n    var delta = {\n      x: startX ? startX - x : 0,\n      y: startY ? startY - y : 0\n    };\n    return {\n      x1: brushDimension !== \"y\" ? Math.min(x1, x2) - delta.x : Math.min(x1, x2),\n      x2: brushDimension !== \"y\" ? Math.max(x1, x2) - delta.x : Math.max(x1, x2),\n      y1: brushDimension !== \"x\" ? Math.min(y1, y2) - delta.y : Math.min(y1, y2),\n      y2: brushDimension !== \"x\" ? Math.max(y1, y2) - delta.y : Math.max(y1, y2)\n    };\n  },\n  constrainBox: function constrainBox(box, fullDomainBox) {\n    var _mapValues4 = _mapValues(fullDomainBox, Number),\n        x1 = _mapValues4.x1,\n        y1 = _mapValues4.y1,\n        x2 = _mapValues4.x2,\n        y2 = _mapValues4.y2;\n\n    return {\n      x1: box.x2 > x2 ? x2 - Math.abs(box.x2 - box.x1) : Math.max(box.x1, x1),\n      y1: box.y2 > y2 ? y2 - Math.abs(box.y2 - box.y1) : Math.max(box.y1, y1),\n      x2: box.x1 < x1 ? x1 + Math.abs(box.x2 - box.x1) : Math.min(box.x2, x2),\n      y2: box.y1 < y1 ? y1 + Math.abs(box.y2 - box.y1) : Math.min(box.y2, y2)\n    };\n  },\n  // eslint-disable-next-line max-statements, complexity\n  onMouseDown: function onMouseDown(evt, targetProps) {\n    var _this2 = this;\n\n    evt.preventDefault();\n    var handleWidth = targetProps.handleWidth,\n        cachedBrushDomain = targetProps.cachedBrushDomain,\n        domain = targetProps.domain,\n        allowResize = targetProps.allowResize,\n        allowDrag = targetProps.allowDrag,\n        allowDraw = targetProps.allowDraw;\n    var brushDimension = this.getDimension(targetProps); // Don't trigger events for static brushes\n\n    if (!allowResize && !allowDrag) {\n      return {};\n    }\n\n    var fullDomainBox = targetProps.fullDomainBox || this.getDomainBox(targetProps, domain);\n    var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n\n    var _Selection$getSVGEven = Selection.getSVGEventCoordinates(evt, parentSVG),\n        x = _Selection$getSVGEven.x,\n        y = _Selection$getSVGEven.y; // Ignore events that occur outside of the maximum domain region\n\n\n    if (!this.withinBounds({\n      x: x,\n      y: y\n    }, fullDomainBox, handleWidth)) {\n      return {};\n    }\n\n    var brushDomain = _defaults({}, targetProps.brushDomain, domain);\n\n    var currentDomain = isEqual(brushDomain, cachedBrushDomain) ? targetProps.currentDomain || brushDomain || domain : brushDomain || domain;\n    var domainBox = this.getDomainBox(targetProps, domain, currentDomain);\n    var activeHandles = allowResize && this.getActiveHandles({\n      x: x,\n      y: y\n    }, targetProps, domainBox); // If the event occurs in any of the handle regions, start a resize\n\n    if (activeHandles) {\n      return [{\n        target: \"parent\",\n        mutation: function mutation() {\n          return _objectSpread({\n            isSelecting: true,\n            domainBox: domainBox,\n            fullDomainBox: fullDomainBox,\n            cachedBrushDomain: brushDomain,\n            currentDomain: currentDomain,\n            parentSVG: parentSVG\n          }, _this2.getResizeMutation(domainBox, activeHandles));\n        }\n      }];\n    } else if (this.withinBounds({\n      x: x,\n      y: y\n    }, domainBox) && !isEqual(domain, currentDomain)) {\n      // if the event occurs within a selected region start a panning event, unless the whole\n      // domain is selected\n      return [{\n        target: \"parent\",\n        mutation: function mutation() {\n          return _objectSpread({\n            isPanning: allowDrag,\n            startX: x,\n            startY: y,\n            domainBox: domainBox,\n            fullDomainBox: fullDomainBox,\n            currentDomain: currentDomain,\n            cachedBrushDomain: brushDomain,\n            parentSVG: parentSVG\n          }, domainBox);\n        }\n      }];\n    } else {\n      // if the event occurs outside the region, or if the whole domain is selected,\n      // start a new selection\n      return allowDraw ? [{\n        target: \"parent\",\n        mutation: function mutation() {\n          return _objectSpread({\n            isSelecting: allowResize,\n            domainBox: domainBox,\n            fullDomainBox: fullDomainBox,\n            parentSVG: parentSVG,\n            cachedBrushDomain: brushDomain,\n            cachedCurrentDomain: currentDomain,\n            currentDomain: _this2.getMinimumDomain()\n          }, _this2.getSelectionMutation({\n            x: x,\n            y: y\n          }, domainBox, brushDimension));\n        }\n      }] : {};\n    }\n  },\n  // eslint-disable-next-line max-statements, complexity\n  onMouseMove: function onMouseMove(evt, targetProps) {\n    // if a panning or selection has not been started, ignore the event\n    if (!targetProps.isPanning && !targetProps.isSelecting) {\n      return {};\n    }\n\n    var scale = targetProps.scale,\n        isPanning = targetProps.isPanning,\n        isSelecting = targetProps.isSelecting,\n        fullDomainBox = targetProps.fullDomainBox,\n        onBrushDomainChange = targetProps.onBrushDomainChange,\n        allowResize = targetProps.allowResize,\n        allowDrag = targetProps.allowDrag,\n        horizontal = targetProps.horizontal;\n    var brushDimension = this.getDimension(targetProps);\n    var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n\n    var _Selection$getSVGEven2 = Selection.getSVGEventCoordinates(evt, parentSVG),\n        x = _Selection$getSVGEven2.x,\n        y = _Selection$getSVGEven2.y; // Ignore events that occur outside of the maximum domain region\n\n\n    if (!allowResize && !allowDrag || !this.withinBounds({\n      x: x,\n      y: y\n    }, fullDomainBox)) {\n      return {};\n    }\n\n    if (allowDrag && isPanning) {\n      var startX = targetProps.startX,\n          startY = targetProps.startY;\n      var pannedBox = this.panBox(targetProps, {\n        x: x,\n        y: y\n      });\n      var constrainedBox = this.constrainBox(pannedBox, fullDomainBox);\n      var currentDomain = Selection.getBounds(_objectSpread({}, constrainedBox, {\n        scale: scale,\n        horizontal: horizontal\n      }));\n\n      var mutatedProps = _objectSpread({\n        currentDomain: currentDomain,\n        parentSVG: parentSVG,\n        startX: pannedBox.x2 >= fullDomainBox.x2 || pannedBox.x1 <= fullDomainBox.x1 ? startX : x,\n        startY: pannedBox.y2 >= fullDomainBox.y2 || pannedBox.y1 <= fullDomainBox.y1 ? startY : y\n      }, constrainedBox);\n\n      if (_isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n\n      return [{\n        target: \"parent\",\n        mutation: function mutation() {\n          return mutatedProps;\n        }\n      }];\n    } else if (allowResize && isSelecting) {\n      var x2 = brushDimension !== \"y\" ? x : targetProps.x2;\n      var y2 = brushDimension !== \"x\" ? y : targetProps.y2;\n\n      var _currentDomain = Selection.getBounds({\n        x2: x2,\n        y2: y2,\n        x1: targetProps.x1,\n        y1: targetProps.y1,\n        scale: scale,\n        horizontal: horizontal\n      });\n\n      var _mutatedProps = {\n        x2: x2,\n        y2: y2,\n        currentDomain: _currentDomain,\n        parentSVG: parentSVG\n      };\n\n      if (_isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(_currentDomain, _defaults({}, _mutatedProps, targetProps));\n      }\n\n      return [{\n        target: \"parent\",\n        mutation: function mutation() {\n          return _mutatedProps;\n        }\n      }];\n    }\n\n    return {};\n  },\n  onMouseUp: function onMouseUp(evt, targetProps) {\n    // eslint-disable-line max-statements, complexity\n    var x1 = targetProps.x1,\n        y1 = targetProps.y1,\n        x2 = targetProps.x2,\n        y2 = targetProps.y2,\n        isPanning = targetProps.isPanning,\n        isSelecting = targetProps.isSelecting,\n        onBrushDomainChange = targetProps.onBrushDomainChange,\n        onBrushDomainChangeEnd = targetProps.onBrushDomainChangeEnd,\n        onBrushCleared = targetProps.onBrushCleared,\n        domain = targetProps.domain,\n        allowResize = targetProps.allowResize,\n        allowDrag = targetProps.allowDrag,\n        defaultBrushArea = targetProps.defaultBrushArea;\n    var defaultBrushHasArea = defaultBrushArea !== undefined && defaultBrushArea !== \"none\";\n    var cachedDomain = targetProps.cachedCurrentDomain || targetProps.currentDomain;\n    var currentDomain = this.getDefaultBrushArea(defaultBrushArea, domain, cachedDomain);\n    var mutatedProps = {\n      isPanning: false,\n      isSelecting: false\n    }; // if the mouse hasn't moved since a mouseDown event, select the default brush area\n\n    if ((allowResize || defaultBrushHasArea) && (x1 === x2 || y1 === y2)) {\n      mutatedProps.currentDomain = currentDomain;\n\n      if (_isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n\n      if (_isFunction(onBrushDomainChangeEnd)) {\n        onBrushDomainChangeEnd(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n\n      if (_isFunction(onBrushCleared)) {\n        onBrushCleared(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n    } else if (allowDrag && isPanning || allowResize && isSelecting) {\n      if (_isFunction(onBrushDomainChangeEnd)) {\n        onBrushDomainChangeEnd(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n    }\n\n    return [{\n      target: \"parent\",\n      mutation: function mutation() {\n        return mutatedProps;\n      }\n    }];\n  },\n  onMouseLeave: function onMouseLeave(evt) {\n    if (evt.target.nodeName === \"svg\") {\n      return [{\n        target: \"parent\",\n        mutation: function mutation() {\n          return {\n            isPanning: false,\n            isSelecting: false\n          };\n        }\n      }];\n    }\n\n    return [];\n  }\n};\nexport default _objectSpread({}, Helpers, {\n  onMouseDown: Helpers.onMouseDown.bind(Helpers),\n  onMouseUp: Helpers.onMouseUp.bind(Helpers),\n  onMouseLeave: Helpers.onMouseLeave.bind(Helpers),\n  onMouseMove: _throttle(Helpers.onMouseMove.bind(Helpers), 16, // eslint-disable-line no-magic-numbers\n  {\n    leading: true,\n    trailing: false\n  })\n});","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/node_modules/victory-brush-container/es/brush-helpers.js"],"names":["_mapValues","_defaults","_isFunction","_throttle","_assign","_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","prototype","toString","call","Array","from","isArray","arr2","Selection","isEqual","Helpers","getDimension","props","horizontal","brushDimension","withinBounds","point","bounds","padding","_mapValues2","Number","x1","x2","y1","y2","_mapValues3","x","y","Math","min","max","getDomainBox","fullDomain","selectedDomain","domain","fullCoords","getDomainCoordinates","selectedCoords","apply","getHandles","domainBox","minX","maxX","minY","maxY","handleWidth","left","right","top","bottom","getActiveHandles","_this","handles","activeHandles","reduce","memo","opt","getResizeMutation","box","mutations","current","getMinimumDomain","MAX_SAFE_INTEGER","getDefaultBrushArea","defaultBrushArea","cachedDomain","getSelectionMutation","panBox","startX","startY","brushDomain","_ref","delta","constrainBox","fullDomainBox","_mapValues4","abs","onMouseDown","evt","targetProps","_this2","preventDefault","cachedBrushDomain","allowResize","allowDrag","allowDraw","parentSVG","getParentSVG","_Selection$getSVGEven","getSVGEventCoordinates","currentDomain","mutation","isSelecting","isPanning","cachedCurrentDomain","onMouseMove","scale","onBrushDomainChange","_Selection$getSVGEven2","pannedBox","constrainedBox","getBounds","mutatedProps","_currentDomain","_mutatedProps","onMouseUp","onBrushDomainChangeEnd","onBrushCleared","defaultBrushHasArea","undefined","onMouseLeave","nodeName","bind","leading","trailing"],"mappings":"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","sourcesContent":["import _mapValues from \"lodash/mapValues\";\nimport _defaults from \"lodash/defaults\";\nimport _isFunction from \"lodash/isFunction\";\nimport _throttle from \"lodash/throttle\";\nimport _assign from \"lodash/assign\";\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nimport { Selection } from \"victory-core\";\nimport isEqual from \"react-fast-compare\";\nvar Helpers = {\n  getDimension: function (props) {\n    var horizontal = props.horizontal,\n        brushDimension = props.brushDimension;\n\n    if (!horizontal || !brushDimension) {\n      return brushDimension;\n    }\n\n    return brushDimension === \"x\" ? \"y\" : \"x\";\n  },\n  withinBounds: function (point, bounds, padding) {\n    var _mapValues2 = _mapValues(bounds, Number),\n        x1 = _mapValues2.x1,\n        x2 = _mapValues2.x2,\n        y1 = _mapValues2.y1,\n        y2 = _mapValues2.y2;\n\n    var _mapValues3 = _mapValues(point, Number),\n        x = _mapValues3.x,\n        y = _mapValues3.y;\n\n    padding = padding ? padding / 2 : 0;\n    return x + padding >= Math.min(x1, x2) && x - padding <= Math.max(x1, x2) && y + padding >= Math.min(y1, y2) && y - padding <= Math.max(y1, y2);\n  },\n  getDomainBox: function (props, fullDomain, selectedDomain) {\n    var brushDimension = this.getDimension(props);\n    fullDomain = _defaults({}, fullDomain, props.domain);\n    selectedDomain = _defaults({}, selectedDomain, fullDomain);\n    var fullCoords = Selection.getDomainCoordinates(props, fullDomain);\n    var selectedCoords = Selection.getDomainCoordinates(props, selectedDomain);\n    return {\n      x1: brushDimension !== \"y\" ? Math.min.apply(Math, _toConsumableArray(selectedCoords.x)) : Math.min.apply(Math, _toConsumableArray(fullCoords.x)),\n      x2: brushDimension !== \"y\" ? Math.max.apply(Math, _toConsumableArray(selectedCoords.x)) : Math.max.apply(Math, _toConsumableArray(fullCoords.x)),\n      y1: brushDimension !== \"x\" ? Math.min.apply(Math, _toConsumableArray(selectedCoords.y)) : Math.min.apply(Math, _toConsumableArray(fullCoords.y)),\n      y2: brushDimension !== \"x\" ? Math.max.apply(Math, _toConsumableArray(selectedCoords.y)) : Math.max.apply(Math, _toConsumableArray(fullCoords.y))\n    };\n  },\n  getHandles: function (props, domainBox) {\n    var x1 = domainBox.x1,\n        x2 = domainBox.x2,\n        y1 = domainBox.y1,\n        y2 = domainBox.y2;\n    var minX = Math.min(x1, x2);\n    var maxX = Math.max(x1, x2);\n    var minY = Math.min(y1, y2);\n    var maxY = Math.max(y1, y2);\n    var handleWidth = props.handleWidth / 2;\n    return {\n      left: {\n        x1: minX - handleWidth,\n        x2: minX + handleWidth,\n        y1: y1,\n        y2: y2\n      },\n      right: {\n        x1: maxX - handleWidth,\n        x2: maxX + handleWidth,\n        y1: y1,\n        y2: y2\n      },\n      top: {\n        x1: x1,\n        x2: x2,\n        y1: minY + handleWidth,\n        y2: minY - handleWidth\n      },\n      bottom: {\n        x1: x1,\n        x2: x2,\n        y1: maxY + handleWidth,\n        y2: maxY - handleWidth\n      }\n    };\n  },\n  getActiveHandles: function (point, props, domainBox) {\n    var _this = this;\n\n    var handles = this.getHandles(props, domainBox);\n    var activeHandles = [\"top\", \"bottom\", \"left\", \"right\"].reduce(function (memo, opt) {\n      memo = _this.withinBounds(point, handles[opt]) ? memo.concat(opt) : memo;\n      return memo;\n    }, []);\n    return activeHandles.length && activeHandles;\n  },\n  getResizeMutation: function (box, handles) {\n    var x1 = box.x1,\n        y1 = box.y1,\n        x2 = box.x2,\n        y2 = box.y2;\n    var mutations = {\n      left: {\n        x1: Math.max(x1, x2),\n        x2: Math.min(x1, x2),\n        y1: y1,\n        y2: y2\n      },\n      right: {\n        x1: Math.min(x1, x2),\n        x2: Math.max(x1, x2),\n        y1: y1,\n        y2: y2\n      },\n      top: {\n        y1: Math.max(y1, y2),\n        y2: Math.min(y1, y2),\n        x1: x1,\n        x2: x2\n      },\n      bottom: {\n        y1: Math.min(y1, y2),\n        y2: Math.max(y1, y2),\n        x1: x1,\n        x2: x2\n      }\n    };\n    return handles.reduce(function (memo, current) {\n      return _assign(memo, mutations[current]);\n    }, {});\n  },\n  getMinimumDomain: function () {\n    return {\n      x: [0, 1 / Number.MAX_SAFE_INTEGER],\n      y: [0, 1 / Number.MAX_SAFE_INTEGER]\n    };\n  },\n  getDefaultBrushArea: function (defaultBrushArea, domain, cachedDomain) {\n    if (defaultBrushArea === \"none\") {\n      return this.getMinimumDomain();\n    } else if (defaultBrushArea === \"disable\") {\n      return cachedDomain;\n    } else {\n      return domain;\n    }\n  },\n  getSelectionMutation: function (point, box, brushDimension) {\n    var x = point.x,\n        y = point.y;\n    var x1 = box.x1,\n        x2 = box.x2,\n        y1 = box.y1,\n        y2 = box.y2;\n    return {\n      x1: brushDimension !== \"y\" ? x : x1,\n      y1: brushDimension !== \"x\" ? y : y1,\n      x2: brushDimension !== \"y\" ? x : x2,\n      y2: brushDimension !== \"x\" ? y : y2\n    };\n  },\n  panBox: function (props, point) {\n    var domain = props.domain,\n        startX = props.startX,\n        startY = props.startY;\n    var brushDimension = this.getDimension(props);\n\n    var brushDomain = _defaults({}, props.brushDomain, domain);\n\n    var fullDomain = _defaults({}, props.fullDomain, domain);\n\n    var _ref = props.x1 ? props : this.getDomainBox(props, fullDomain, brushDomain),\n        x1 = _ref.x1,\n        x2 = _ref.x2,\n        y1 = _ref.y1,\n        y2 = _ref.y2;\n\n    var x = point.x,\n        y = point.y;\n    var delta = {\n      x: startX ? startX - x : 0,\n      y: startY ? startY - y : 0\n    };\n    return {\n      x1: brushDimension !== \"y\" ? Math.min(x1, x2) - delta.x : Math.min(x1, x2),\n      x2: brushDimension !== \"y\" ? Math.max(x1, x2) - delta.x : Math.max(x1, x2),\n      y1: brushDimension !== \"x\" ? Math.min(y1, y2) - delta.y : Math.min(y1, y2),\n      y2: brushDimension !== \"x\" ? Math.max(y1, y2) - delta.y : Math.max(y1, y2)\n    };\n  },\n  constrainBox: function (box, fullDomainBox) {\n    var _mapValues4 = _mapValues(fullDomainBox, Number),\n        x1 = _mapValues4.x1,\n        y1 = _mapValues4.y1,\n        x2 = _mapValues4.x2,\n        y2 = _mapValues4.y2;\n\n    return {\n      x1: box.x2 > x2 ? x2 - Math.abs(box.x2 - box.x1) : Math.max(box.x1, x1),\n      y1: box.y2 > y2 ? y2 - Math.abs(box.y2 - box.y1) : Math.max(box.y1, y1),\n      x2: box.x1 < x1 ? x1 + Math.abs(box.x2 - box.x1) : Math.min(box.x2, x2),\n      y2: box.y1 < y1 ? y1 + Math.abs(box.y2 - box.y1) : Math.min(box.y2, y2)\n    };\n  },\n  // eslint-disable-next-line max-statements, complexity\n  onMouseDown: function (evt, targetProps) {\n    var _this2 = this;\n\n    evt.preventDefault();\n    var handleWidth = targetProps.handleWidth,\n        cachedBrushDomain = targetProps.cachedBrushDomain,\n        domain = targetProps.domain,\n        allowResize = targetProps.allowResize,\n        allowDrag = targetProps.allowDrag,\n        allowDraw = targetProps.allowDraw;\n    var brushDimension = this.getDimension(targetProps); // Don't trigger events for static brushes\n\n    if (!allowResize && !allowDrag) {\n      return {};\n    }\n\n    var fullDomainBox = targetProps.fullDomainBox || this.getDomainBox(targetProps, domain);\n    var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n\n    var _Selection$getSVGEven = Selection.getSVGEventCoordinates(evt, parentSVG),\n        x = _Selection$getSVGEven.x,\n        y = _Selection$getSVGEven.y; // Ignore events that occur outside of the maximum domain region\n\n\n    if (!this.withinBounds({\n      x: x,\n      y: y\n    }, fullDomainBox, handleWidth)) {\n      return {};\n    }\n\n    var brushDomain = _defaults({}, targetProps.brushDomain, domain);\n\n    var currentDomain = isEqual(brushDomain, cachedBrushDomain) ? targetProps.currentDomain || brushDomain || domain : brushDomain || domain;\n    var domainBox = this.getDomainBox(targetProps, domain, currentDomain);\n    var activeHandles = allowResize && this.getActiveHandles({\n      x: x,\n      y: y\n    }, targetProps, domainBox); // If the event occurs in any of the handle regions, start a resize\n\n    if (activeHandles) {\n      return [{\n        target: \"parent\",\n        mutation: function () {\n          return _objectSpread({\n            isSelecting: true,\n            domainBox: domainBox,\n            fullDomainBox: fullDomainBox,\n            cachedBrushDomain: brushDomain,\n            currentDomain: currentDomain,\n            parentSVG: parentSVG\n          }, _this2.getResizeMutation(domainBox, activeHandles));\n        }\n      }];\n    } else if (this.withinBounds({\n      x: x,\n      y: y\n    }, domainBox) && !isEqual(domain, currentDomain)) {\n      // if the event occurs within a selected region start a panning event, unless the whole\n      // domain is selected\n      return [{\n        target: \"parent\",\n        mutation: function () {\n          return _objectSpread({\n            isPanning: allowDrag,\n            startX: x,\n            startY: y,\n            domainBox: domainBox,\n            fullDomainBox: fullDomainBox,\n            currentDomain: currentDomain,\n            cachedBrushDomain: brushDomain,\n            parentSVG: parentSVG\n          }, domainBox);\n        }\n      }];\n    } else {\n      // if the event occurs outside the region, or if the whole domain is selected,\n      // start a new selection\n      return allowDraw ? [{\n        target: \"parent\",\n        mutation: function () {\n          return _objectSpread({\n            isSelecting: allowResize,\n            domainBox: domainBox,\n            fullDomainBox: fullDomainBox,\n            parentSVG: parentSVG,\n            cachedBrushDomain: brushDomain,\n            cachedCurrentDomain: currentDomain,\n            currentDomain: _this2.getMinimumDomain()\n          }, _this2.getSelectionMutation({\n            x: x,\n            y: y\n          }, domainBox, brushDimension));\n        }\n      }] : {};\n    }\n  },\n  // eslint-disable-next-line max-statements, complexity\n  onMouseMove: function (evt, targetProps) {\n    // if a panning or selection has not been started, ignore the event\n    if (!targetProps.isPanning && !targetProps.isSelecting) {\n      return {};\n    }\n\n    var scale = targetProps.scale,\n        isPanning = targetProps.isPanning,\n        isSelecting = targetProps.isSelecting,\n        fullDomainBox = targetProps.fullDomainBox,\n        onBrushDomainChange = targetProps.onBrushDomainChange,\n        allowResize = targetProps.allowResize,\n        allowDrag = targetProps.allowDrag,\n        horizontal = targetProps.horizontal;\n    var brushDimension = this.getDimension(targetProps);\n    var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n\n    var _Selection$getSVGEven2 = Selection.getSVGEventCoordinates(evt, parentSVG),\n        x = _Selection$getSVGEven2.x,\n        y = _Selection$getSVGEven2.y; // Ignore events that occur outside of the maximum domain region\n\n\n    if (!allowResize && !allowDrag || !this.withinBounds({\n      x: x,\n      y: y\n    }, fullDomainBox)) {\n      return {};\n    }\n\n    if (allowDrag && isPanning) {\n      var startX = targetProps.startX,\n          startY = targetProps.startY;\n      var pannedBox = this.panBox(targetProps, {\n        x: x,\n        y: y\n      });\n      var constrainedBox = this.constrainBox(pannedBox, fullDomainBox);\n      var currentDomain = Selection.getBounds(_objectSpread({}, constrainedBox, {\n        scale: scale,\n        horizontal: horizontal\n      }));\n\n      var mutatedProps = _objectSpread({\n        currentDomain: currentDomain,\n        parentSVG: parentSVG,\n        startX: pannedBox.x2 >= fullDomainBox.x2 || pannedBox.x1 <= fullDomainBox.x1 ? startX : x,\n        startY: pannedBox.y2 >= fullDomainBox.y2 || pannedBox.y1 <= fullDomainBox.y1 ? startY : y\n      }, constrainedBox);\n\n      if (_isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n\n      return [{\n        target: \"parent\",\n        mutation: function () {\n          return mutatedProps;\n        }\n      }];\n    } else if (allowResize && isSelecting) {\n      var x2 = brushDimension !== \"y\" ? x : targetProps.x2;\n      var y2 = brushDimension !== \"x\" ? y : targetProps.y2;\n\n      var _currentDomain = Selection.getBounds({\n        x2: x2,\n        y2: y2,\n        x1: targetProps.x1,\n        y1: targetProps.y1,\n        scale: scale,\n        horizontal: horizontal\n      });\n\n      var _mutatedProps = {\n        x2: x2,\n        y2: y2,\n        currentDomain: _currentDomain,\n        parentSVG: parentSVG\n      };\n\n      if (_isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(_currentDomain, _defaults({}, _mutatedProps, targetProps));\n      }\n\n      return [{\n        target: \"parent\",\n        mutation: function () {\n          return _mutatedProps;\n        }\n      }];\n    }\n\n    return {};\n  },\n  onMouseUp: function (evt, targetProps) {\n    // eslint-disable-line max-statements, complexity\n    var x1 = targetProps.x1,\n        y1 = targetProps.y1,\n        x2 = targetProps.x2,\n        y2 = targetProps.y2,\n        isPanning = targetProps.isPanning,\n        isSelecting = targetProps.isSelecting,\n        onBrushDomainChange = targetProps.onBrushDomainChange,\n        onBrushDomainChangeEnd = targetProps.onBrushDomainChangeEnd,\n        onBrushCleared = targetProps.onBrushCleared,\n        domain = targetProps.domain,\n        allowResize = targetProps.allowResize,\n        allowDrag = targetProps.allowDrag,\n        defaultBrushArea = targetProps.defaultBrushArea;\n    var defaultBrushHasArea = defaultBrushArea !== undefined && defaultBrushArea !== \"none\";\n    var cachedDomain = targetProps.cachedCurrentDomain || targetProps.currentDomain;\n    var currentDomain = this.getDefaultBrushArea(defaultBrushArea, domain, cachedDomain);\n    var mutatedProps = {\n      isPanning: false,\n      isSelecting: false\n    }; // if the mouse hasn't moved since a mouseDown event, select the default brush area\n\n    if ((allowResize || defaultBrushHasArea) && (x1 === x2 || y1 === y2)) {\n      mutatedProps.currentDomain = currentDomain;\n\n      if (_isFunction(onBrushDomainChange)) {\n        onBrushDomainChange(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n\n      if (_isFunction(onBrushDomainChangeEnd)) {\n        onBrushDomainChangeEnd(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n\n      if (_isFunction(onBrushCleared)) {\n        onBrushCleared(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n    } else if (allowDrag && isPanning || allowResize && isSelecting) {\n      if (_isFunction(onBrushDomainChangeEnd)) {\n        onBrushDomainChangeEnd(currentDomain, _defaults({}, mutatedProps, targetProps));\n      }\n    }\n\n    return [{\n      target: \"parent\",\n      mutation: function () {\n        return mutatedProps;\n      }\n    }];\n  },\n  onMouseLeave: function (evt) {\n    if (evt.target.nodeName === \"svg\") {\n      return [{\n        target: \"parent\",\n        mutation: function () {\n          return {\n            isPanning: false,\n            isSelecting: false\n          };\n        }\n      }];\n    }\n\n    return [];\n  }\n};\nexport default _objectSpread({}, Helpers, {\n  onMouseDown: Helpers.onMouseDown.bind(Helpers),\n  onMouseUp: Helpers.onMouseUp.bind(Helpers),\n  onMouseLeave: Helpers.onMouseLeave.bind(Helpers),\n  onMouseMove: _throttle(Helpers.onMouseMove.bind(Helpers), 16, // eslint-disable-line no-magic-numbers\n  {\n    leading: true,\n    trailing: false\n  })\n});"]},"metadata":{},"sourceType":"module"}