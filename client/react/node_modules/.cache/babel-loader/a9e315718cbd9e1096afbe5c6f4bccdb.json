{"ast":null,"code":"import _objectSpread from \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\EgretLayout\\\\Layout2\\\\Layout2.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport { Hidden } from \"@material-ui/core\";\nimport AppContext from \"app/appContext\";\nimport Footer from \"../SharedCompoents/Footer\";\nimport Layout2Navbar from \"./Layout2Navbar\";\nimport Layout2Sidenav from \"./Layout2Sidenav\";\nimport Layout2Topbar from \"./Layout2Topbar\";\nimport { PropTypes } from \"prop-types\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport SecondarySidebar from \"../SharedCompoents/SecondarySidebar\";\nimport { classList } from \"utils\";\nimport { connect } from \"react-redux\";\nimport { renderRoutes } from \"react-router-config\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\nimport { withStyles } from \"@material-ui/styles\";\n\nconst styles = theme => {\n  return {\n    layout: {\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.text.primary\n    }\n  };\n};\n\nclass Layout2 extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.updateSidebarMode = sidebarSettings => {\n      let _this$props = this.props,\n          settings = _this$props.settings,\n          setLayoutSettings = _this$props.setLayoutSettings;\n      setLayoutSettings(_objectSpread(_objectSpread({}, settings), {}, {\n        layout2Settings: _objectSpread(_objectSpread({}, settings.layout2Settings), {}, {\n          leftSidebar: _objectSpread(_objectSpread({}, settings.layout2Settings.leftSidebar), sidebarSettings)\n        })\n      }));\n    };\n  }\n\n  render() {\n    let _this$props2 = this.props,\n        settings = _this$props2.settings,\n        classes = _this$props2.classes,\n        theme = _this$props2.theme;\n    let layout2Settings = settings.layout2Settings; // let layoutClasses = {\n    //   [classes.layout]: true,\n    //   [settings.activeLayout]: true,\n    //   [`sidenav-${layout2Settings.leftSidebar.mode}`]: true,\n    //   [`layout-${layout2Settings.mode} theme-${theme.palette.type}`]: true\n    // };\n\n    let layoutClasses = {\n      [classes.layout]: true,\n      [settings.activeLayout]: true,\n      [\"sidenav-\".concat(layout2Settings.leftSidebar.mode)]: true,\n      [\"layout-\".concat(layout2Settings.mode)]: true\n    };\n    return /*#__PURE__*/React.createElement(AppContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, ({\n      routes\n    }) => /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classList(layoutClasses),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, layout2Settings.topbar.show && /*#__PURE__*/React.createElement(Layout2Topbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 47\n      }\n    }), /*#__PURE__*/React.createElement(Hidden, {\n      smDown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, layout2Settings.navbar.show && /*#__PURE__*/React.createElement(Layout2Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(Hidden, {\n      mdUp: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, layout2Settings.leftSidebar.show && /*#__PURE__*/React.createElement(Layout2Sidenav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 54\n      }\n    })), settings.perfectScrollbar &&\n    /*#__PURE__*/\n    // <Scrollbar\n    //   options={{ suppressScrollX: true }}\n    //   className=\"scrollable-content p-0\"\n    // >\n    //   <div className=\"container p-0\">{renderRoutes(routes)}</div>\n    //   <div className=\"my-auto\"></div>\n    //   {settings.footer.show && !settings.footer.fixed && <Footer />}\n    // </Scrollbar>\n    React.createElement(\"div\", {\n      options: {\n        suppressScrollX: true\n      },\n      className: \"scrollable-content p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, renderRoutes(routes)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"my-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }), settings.footer.show && !settings.footer.fixed && /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 70\n      }\n    })), !settings.perfectScrollbar && /*#__PURE__*/React.createElement(\"div\", {\n      options: {\n        suppressScrollX: true\n      },\n      className: \"scrollable-content p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }, renderRoutes(routes)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"my-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    }), settings.footer.show && !settings.footer.fixed && /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 70\n      }\n    })), settings.footer.show && settings.footer.fixed && /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 65\n      }\n    })), settings.secondarySidebar.show && /*#__PURE__*/React.createElement(SecondarySidebar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 48\n      }\n    })));\n  }\n\n}\n\nLayout2.propTypes = {\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: state.layout.settings\n});\n\nexport default withStyles(styles, {\n  withTheme: true\n})(connect(mapStateToProps, {\n  setLayoutSettings\n})(Layout2));","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/EgretLayout/Layout2/Layout2.jsx"],"names":["React","Component","Fragment","Hidden","AppContext","Footer","Layout2Navbar","Layout2Sidenav","Layout2Topbar","PropTypes","Scrollbar","SecondarySidebar","classList","connect","renderRoutes","setLayoutSettings","withStyles","styles","theme","layout","backgroundColor","palette","background","default","color","text","primary","Layout2","state","updateSidebarMode","sidebarSettings","props","settings","layout2Settings","leftSidebar","render","classes","layoutClasses","activeLayout","mode","routes","topbar","show","navbar","perfectScrollbar","suppressScrollX","footer","fixed","secondarySidebar","propTypes","object","isRequired","mapStateToProps","func","withTheme"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\n\nimport { Hidden } from \"@material-ui/core\";\nimport AppContext from \"app/appContext\";\nimport Footer from \"../SharedCompoents/Footer\";\nimport Layout2Navbar from \"./Layout2Navbar\";\nimport Layout2Sidenav from \"./Layout2Sidenav\";\nimport Layout2Topbar from \"./Layout2Topbar\";\nimport { PropTypes } from \"prop-types\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport SecondarySidebar from \"../SharedCompoents/SecondarySidebar\";\nimport { classList } from \"utils\";\nimport { connect } from \"react-redux\";\nimport { renderRoutes } from \"react-router-config\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\nimport { withStyles } from \"@material-ui/styles\";\n\nconst styles = theme => {\n  return {\n    layout: {\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.text.primary\n    }\n  };\n};\n\nclass Layout2 extends Component {\n  state = {};\n  updateSidebarMode = sidebarSettings => {\n    let { settings, setLayoutSettings } = this.props;\n    setLayoutSettings({\n      ...settings,\n      layout2Settings: {\n        ...settings.layout2Settings,\n        leftSidebar: {\n          ...settings.layout2Settings.leftSidebar,\n          ...sidebarSettings\n        }\n      }\n    });\n  };\n\n  render() {\n    let { settings, classes, theme } = this.props;\n    let { layout2Settings } = settings;\n\n    // let layoutClasses = {\n    //   [classes.layout]: true,\n    //   [settings.activeLayout]: true,\n    //   [`sidenav-${layout2Settings.leftSidebar.mode}`]: true,\n    //   [`layout-${layout2Settings.mode} theme-${theme.palette.type}`]: true\n    // };\n    let layoutClasses = {\n      [classes.layout]: true,\n      [settings.activeLayout]: true,\n      [`sidenav-${layout2Settings.leftSidebar.mode}`]: true,\n      [`layout-${layout2Settings.mode}`]: true\n    };\n    return (\n      <AppContext.Consumer>\n        {({ routes }) => (\n          <Fragment>\n            <div className={classList(layoutClasses)}>\n              {layout2Settings.topbar.show && <Layout2Topbar />}\n\n              <Hidden smDown>\n                {layout2Settings.navbar.show && <Layout2Navbar />}\n              </Hidden>\n\n              <Hidden mdUp>\n                {layout2Settings.leftSidebar.show && <Layout2Sidenav />}\n              </Hidden>\n\n              {settings.perfectScrollbar && (\n                // <Scrollbar\n                //   options={{ suppressScrollX: true }}\n                //   className=\"scrollable-content p-0\"\n                // >\n                //   <div className=\"container p-0\">{renderRoutes(routes)}</div>\n                //   <div className=\"my-auto\"></div>\n                //   {settings.footer.show && !settings.footer.fixed && <Footer />}\n                // </Scrollbar>\n                <div\n                  options={{ suppressScrollX: true }}\n                  className=\"scrollable-content p-0\"\n                >\n                  <div className=\"container p-0\">{renderRoutes(routes)}</div>\n                  <div className=\"my-auto\"></div>\n                  {settings.footer.show && !settings.footer.fixed && <Footer />}\n                </div>                \n              )}\n\n              {!settings.perfectScrollbar && (\n                <div\n                  options={{ suppressScrollX: true }}\n                  className=\"scrollable-content p-0\"\n                >\n                  <div className=\"container p-0\">{renderRoutes(routes)}</div>\n                  <div className=\"my-auto\"></div>\n                  {settings.footer.show && !settings.footer.fixed && <Footer />}\n                </div>\n              )}\n\n              {settings.footer.show && settings.footer.fixed && <Footer />}\n            </div>\n            {settings.secondarySidebar.show && <SecondarySidebar />}\n          </Fragment>\n        )}\n      </AppContext.Consumer>\n    );\n  }\n}\n\nLayout2.propTypes = {\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: state.layout.settings\n});\n\nexport default withStyles(styles, { withTheme: true })(\n  connect(\n    mapStateToProps,\n    { setLayoutSettings }\n  )(Layout2)\n);\n"]},"metadata":{},"sourceType":"module"}