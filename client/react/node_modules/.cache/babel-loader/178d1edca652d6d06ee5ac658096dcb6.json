{"ast":null,"code":"var _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\inbox\\\\AppInbox.jsx\";\nimport React, { Component } from \"react\";\nimport { EgretSidenavContainer, EgretSidenav, EgretSidenavContent } from \"egret\";\nimport InboxMessageList from \"./InboxMessagList\";\nimport { isMobile } from \"utils\";\nimport InboxSidenav from \"./InboxSidenav\";\nimport InboxTopBar from \"./InboxTopbar\";\nimport { getAllMessage } from \"./InboxService\";\n\nclass AppInbox extends Component {\n  constructor(...args) {\n    super(...args);\n    this.container = React.createRef();\n    this.state = {\n      shouldOpenSidenav: true,\n      masterCheckbox: false,\n      messageList: []\n    };\n\n    this.toggleSidenav = () => {\n      this.setState({\n        shouldOpenSidenav: !this.state.shouldOpenSidenav\n      });\n    };\n\n    this.handleMasterCheckbox = event => {\n      let temp = this.state.messageList;\n      let isChecked = event.target.checked;\n\n      if (isChecked) {\n        temp.map(message => {\n          message.selected = true;\n          return message;\n        });\n        this.setState({\n          messageList: [...temp],\n          masterCheckbox: event.target.checked\n        });\n      } else {\n        temp.map(message => {\n          message.selected = false;\n          return message;\n        });\n        this.setState({\n          messageList: [...temp],\n          masterCheckbox: event.target.checked\n        });\n      }\n    };\n\n    this.handleCheckboxSelection = (event, index) => {\n      event.persist();\n      let temp = this.state.messageList;\n      temp[index].selected = event.target.checked;\n      this.setState({\n        messageList: [...temp]\n      });\n    };\n  }\n\n  componentWillMount() {\n    if (isMobile()) this.setState({\n      shouldOpenSidenav: false\n    });\n    if (window) this.windowResizeListener = window.addEventListener(\"resize\", e => {\n      if (isMobile()) this.setState({\n        shouldOpenSidenav: false\n      });else this.setState({\n        shouldOpenSidenav: true\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    if (window) window.removeEventListener(\"resize\", this.windowResizeListener);\n  }\n\n  componentDidMount() {\n    getAllMessage().then(data => {\n      this.setState({\n        messageList: data.data\n      });\n    });\n  }\n\n  render() {\n    let masterCheckbox = this.state.masterCheckbox;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inbox flex m-sm-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inbox__sidenav w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(EgretSidenavContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(EgretSidenav, {\n      width: \"220px\",\n      toggleSidenav: this.toggleSidenav,\n      open: this.state.shouldOpenSidenav,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InboxSidenav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(EgretSidenavContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InboxTopBar, {\n      masterCheckbox: masterCheckbox,\n      handleMasterCheckbox: this.handleMasterCheckbox,\n      toggleSidenav: this.toggleSidenav,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(InboxMessageList, {\n      handleCheckboxSelection: this.handleCheckboxSelection,\n      messageList: this.state.messageList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default AppInbox;","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/inbox/AppInbox.jsx"],"names":["React","Component","EgretSidenavContainer","EgretSidenav","EgretSidenavContent","InboxMessageList","isMobile","InboxSidenav","InboxTopBar","getAllMessage","AppInbox","container","createRef","state","shouldOpenSidenav","masterCheckbox","messageList","toggleSidenav","setState","handleMasterCheckbox","event","temp","isChecked","target","checked","map","message","selected","handleCheckboxSelection","index","persist","componentWillMount","window","windowResizeListener","addEventListener","e","componentWillUnmount","removeEventListener","componentDidMount","then","data","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  EgretSidenavContainer,\n  EgretSidenav,\n  EgretSidenavContent\n} from \"egret\";\nimport InboxMessageList from \"./InboxMessagList\";\nimport { isMobile } from \"utils\";\nimport InboxSidenav from \"./InboxSidenav\";\nimport InboxTopBar from \"./InboxTopbar\";\nimport { getAllMessage } from \"./InboxService\";\n\nclass AppInbox extends Component {\n  container = React.createRef();\n  windowResizeListener;\n  state = {\n    shouldOpenSidenav: true,\n    masterCheckbox: false,\n    messageList: []\n  };\n\n  toggleSidenav = () => {\n    this.setState({ shouldOpenSidenav: !this.state.shouldOpenSidenav });\n  };\n\n  handleMasterCheckbox = event => {\n    let temp = this.state.messageList;\n    let isChecked = event.target.checked;\n    if (isChecked) {\n      temp.map(message => {\n        message.selected = true;\n        return message;\n      });\n      this.setState({\n        messageList: [...temp],\n        masterCheckbox: event.target.checked\n      });\n    } else {\n      temp.map(message => {\n        message.selected = false;\n        return message;\n      });\n      this.setState({\n        messageList: [...temp],\n        masterCheckbox: event.target.checked\n      });\n    }\n  };\n\n  handleCheckboxSelection = (event, index) => {\n    event.persist();\n    let temp = this.state.messageList;\n    temp[index].selected = event.target.checked;\n    this.setState({\n      messageList: [...temp]\n    });\n  };\n\n  componentWillMount() {\n    if (isMobile()) this.setState({ shouldOpenSidenav: false });\n    if (window)\n      this.windowResizeListener = window.addEventListener(\"resize\", e => {\n        if (isMobile()) this.setState({ shouldOpenSidenav: false });\n        else this.setState({ shouldOpenSidenav: true });\n      });\n  }\n\n  componentWillUnmount() {\n    if (window) window.removeEventListener(\"resize\", this.windowResizeListener);\n  }\n\n  componentDidMount() {\n    getAllMessage().then(data => {\n      this.setState({\n        messageList: data.data\n      });\n    });\n  }\n\n  render() {\n    let { masterCheckbox } = this.state;\n    return (\n      <div className=\"inbox flex m-sm-30\">\n        <div className=\"inbox__sidenav w-100\">\n          <EgretSidenavContainer>\n            <EgretSidenav\n              width=\"220px\"\n              toggleSidenav={this.toggleSidenav}\n              open={this.state.shouldOpenSidenav}\n            >\n              <InboxSidenav />\n            </EgretSidenav>\n            <EgretSidenavContent>\n              <InboxTopBar\n                masterCheckbox={masterCheckbox}\n                handleMasterCheckbox={this.handleMasterCheckbox}\n                toggleSidenav={this.toggleSidenav}\n              />\n              <InboxMessageList\n                handleCheckboxSelection={this.handleCheckboxSelection}\n                messageList={this.state.messageList}\n              />\n            </EgretSidenavContent>\n          </EgretSidenavContainer>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AppInbox;\n"]},"metadata":{},"sourceType":"module"}