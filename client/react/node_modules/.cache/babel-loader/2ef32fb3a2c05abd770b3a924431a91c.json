{"ast":null,"code":"var _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\charts\\\\victory-charts\\\\CircularProgressBar.jsx\";\nimport React, { Component } from \"react\";\nimport { VictoryPie, VictoryAnimation, VictoryLabel } from \"victory\";\nimport { withStyles } from \"@material-ui/core\";\n\nclass CircularProgressBar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      percent: 0,\n      data: this.getData(0)\n    };\n  }\n\n  componentDidMount() {\n    let percent = 0;\n    this.setStateInterval = window.setInterval(() => {\n      percent += 25;\n      percent = percent > 100 ? 0 : percent;\n      this.setState({\n        percent,\n        data: this.getData(percent)\n      });\n    }, 2000);\n  }\n\n  componentWillUnmount() {\n    if (this.setInterval) window.clearInterval(this.setStateInterval);\n  }\n\n  getData(percent) {\n    return [{\n      x: 1,\n      y: percent\n    }, {\n      x: 2,\n      y: 100 - percent\n    }];\n  }\n\n  render() {\n    let theme = this.props.theme;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"320px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      viewBox: \"0 0 400 400\",\n      width: \"100%\",\n      height: \"100%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(VictoryPie, {\n      standalone: false,\n      animate: {\n        duration: 1000\n      },\n      width: 400,\n      height: 400,\n      data: this.state.data,\n      innerRadius: 120,\n      cornerRadius: 25,\n      labels: () => null,\n      style: {\n        data: {\n          fill: d => {\n            const color = d.y > 30 ? \"green\" : \"red\";\n            return d.x === 1 ? color : \"transparent\";\n          }\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(VictoryAnimation, {\n      duration: 1000,\n      data: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, newProps => {\n      return /*#__PURE__*/React.createElement(VictoryLabel, {\n        textAnchor: \"middle\",\n        verticalAnchor: \"middle\",\n        x: 200,\n        y: 200,\n        text: \"\".concat(Math.round(newProps.percent), \"%\"),\n        style: {\n          fontSize: 45,\n          fill: theme.palette.text.secondary\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      });\n    })));\n  }\n\n}\n\nexport default withStyles({}, {\n  withTheme: true\n})(CircularProgressBar);","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/charts/victory-charts/CircularProgressBar.jsx"],"names":["React","Component","VictoryPie","VictoryAnimation","VictoryLabel","withStyles","CircularProgressBar","state","percent","data","getData","componentDidMount","setStateInterval","window","setInterval","setState","componentWillUnmount","clearInterval","x","y","render","theme","props","height","duration","fill","d","color","newProps","Math","round","fontSize","palette","text","secondary","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { VictoryPie, VictoryAnimation, VictoryLabel } from \"victory\";\nimport { withStyles } from \"@material-ui/core\";\n\nclass CircularProgressBar extends Component {\n  state = {\n    percent: 0,\n    data: this.getData(0)\n  };\n\n  componentDidMount() {\n    let percent = 0;\n    this.setStateInterval = window.setInterval(() => {\n      percent += 25;\n      percent = percent > 100 ? 0 : percent;\n      this.setState({\n        percent,\n        data: this.getData(percent)\n      });\n    }, 2000);\n  }\n\n  componentWillUnmount() {\n    if (this.setInterval) window.clearInterval(this.setStateInterval);\n  }\n\n  getData(percent) {\n    return [{ x: 1, y: percent }, { x: 2, y: 100 - percent }];\n  }\n\n  render() {\n    let { theme } = this.props;\n\n    return (\n      <div style={{ height: \"320px\" }}>\n        <svg viewBox=\"0 0 400 400\" width=\"100%\" height=\"100%\">\n          <VictoryPie\n            standalone={false}\n            animate={{ duration: 1000 }}\n            width={400}\n            height={400}\n            data={this.state.data}\n            innerRadius={120}\n            cornerRadius={25}\n            labels={() => null}\n            style={{\n              data: {\n                fill: d => {\n                  const color = d.y > 30 ? \"green\" : \"red\";\n                  return d.x === 1 ? color : \"transparent\";\n                }\n              }\n            }}\n          />\n          <VictoryAnimation duration={1000} data={this.state}>\n            {newProps => {\n              return (\n                <VictoryLabel\n                  textAnchor=\"middle\"\n                  verticalAnchor=\"middle\"\n                  x={200}\n                  y={200}\n                  text={`${Math.round(newProps.percent)}%`}\n                  style={{ fontSize: 45, fill: theme.palette.text.secondary }}\n                />\n              );\n            }}\n          </VictoryAnimation>\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport default withStyles({}, { withTheme: true })(CircularProgressBar);\n"]},"metadata":{},"sourceType":"module"}