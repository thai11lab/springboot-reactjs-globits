{"ast":null,"code":"import faker from \"faker\";\n\nfunction createFakeRow(index) {\n  return {\n    id: index,\n    avartar: faker.image.avatar(),\n    county: faker.address.county(),\n    email: faker.internet.email(),\n    title: faker.name.prefix(),\n    firstName: faker.name.firstName(),\n    lastName: faker.name.lastName(),\n    street: faker.address.streetName(),\n    zipCode: faker.address.zipCode(),\n    date: faker.date.past().toLocaleDateString(),\n    jobTitle: faker.name.jobTitle(),\n    catchPhrase: faker.company.catchPhrase(),\n    companyName: faker.company.companyName(),\n    jobArea: faker.name.jobArea(),\n    jobType: faker.name.jobType()\n  };\n}\n\nexport default function createRowData(count) {\n  return [...Array(count).keys()].map(i => createFakeRow(i));\n}","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/AdministrativeUnit/createRowData.js"],"names":["faker","createFakeRow","index","id","avartar","image","avatar","county","address","email","internet","title","name","prefix","firstName","lastName","street","streetName","zipCode","date","past","toLocaleDateString","jobTitle","catchPhrase","company","companyName","jobArea","jobType","createRowData","count","Array","keys","map","i"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,SAAO;AACLC,IAAAA,EAAE,EAAED,KADC;AAELE,IAAAA,OAAO,EAAEJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,EAFJ;AAGLC,IAAAA,MAAM,EAAEP,KAAK,CAACQ,OAAN,CAAcD,MAAd,EAHH;AAILE,IAAAA,KAAK,EAAET,KAAK,CAACU,QAAN,CAAeD,KAAf,EAJF;AAKLE,IAAAA,KAAK,EAAEX,KAAK,CAACY,IAAN,CAAWC,MAAX,EALF;AAMLC,IAAAA,SAAS,EAAEd,KAAK,CAACY,IAAN,CAAWE,SAAX,EANN;AAOLC,IAAAA,QAAQ,EAAEf,KAAK,CAACY,IAAN,CAAWG,QAAX,EAPL;AAQLC,IAAAA,MAAM,EAAEhB,KAAK,CAACQ,OAAN,CAAcS,UAAd,EARH;AASLC,IAAAA,OAAO,EAAElB,KAAK,CAACQ,OAAN,CAAcU,OAAd,EATJ;AAULC,IAAAA,IAAI,EAAEnB,KAAK,CAACmB,IAAN,CAAWC,IAAX,GAAkBC,kBAAlB,EAVD;AAWLC,IAAAA,QAAQ,EAAEtB,KAAK,CAACY,IAAN,CAAWU,QAAX,EAXL;AAYLC,IAAAA,WAAW,EAAEvB,KAAK,CAACwB,OAAN,CAAcD,WAAd,EAZR;AAaLE,IAAAA,WAAW,EAAEzB,KAAK,CAACwB,OAAN,CAAcC,WAAd,EAbR;AAcLC,IAAAA,OAAO,EAAE1B,KAAK,CAACY,IAAN,CAAWc,OAAX,EAdJ;AAeLC,IAAAA,OAAO,EAAE3B,KAAK,CAACY,IAAN,CAAWe,OAAX;AAfJ,GAAP;AAiBD;;AAED,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,SAAO,CAAC,GAAGC,KAAK,CAACD,KAAD,CAAL,CAAaE,IAAb,EAAJ,EAAyBC,GAAzB,CAA6BC,CAAC,IAAIhC,aAAa,CAACgC,CAAD,CAA/C,CAAP;AACD","sourcesContent":["import faker from \"faker\";\n\nfunction createFakeRow(index) {\n  return {\n    id: index,\n    avartar: faker.image.avatar(),\n    county: faker.address.county(),\n    email: faker.internet.email(),\n    title: faker.name.prefix(),\n    firstName: faker.name.firstName(),\n    lastName: faker.name.lastName(),\n    street: faker.address.streetName(),\n    zipCode: faker.address.zipCode(),\n    date: faker.date.past().toLocaleDateString(),\n    jobTitle: faker.name.jobTitle(),\n    catchPhrase: faker.company.catchPhrase(),\n    companyName: faker.company.companyName(),\n    jobArea: faker.name.jobArea(),\n    jobType: faker.name.jobType()\n  };\n}\n\nexport default function createRowData(count) {\n  return [...Array(count).keys()].map(i => createFakeRow(i));\n}\n"]},"metadata":{},"sourceType":"module"}