{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar server_1 = require(\"react-dom/server\"); // .prettierignore    (to keep relevant props together)\n\n\nvar NOOPS = function NOOPS() {}; // get callbacks from props (default: NOOP) to set them to Tabulator options later.\n\n\nexports.propsToOptions = function (props) {\n  var output = {};\n  var defaultOptions = ['height', 'layout', 'layoutColumnsOnNewData', 'columnMinWidth', 'columnVertAlign', 'resizableColumns', 'resizableRows', 'autoResize', 'tooltips', 'tooltipsHeader', 'tooltipGenerationMode', 'initialSort', 'initialFilter', 'initialHeaderFilter', 'footerElement', 'index', 'keybindings', 'clipboard', 'clipboardCopyStyled', 'clipboardCopySelector', 'clipboardCopyFormatter', 'clipboardCopyHeader', 'clipboardPasteParser', 'clipboardPasteAction', 'rowFormatter', 'placeholder'];\n\n  for (var _i = 0, defaultOptions_1 = defaultOptions; _i < defaultOptions_1.length; _i++) {\n    var opt = defaultOptions_1[_i];\n\n    if (typeof props[opt] !== 'undefined') {\n      output[opt] = props[opt];\n    }\n  }\n\n  var callbackNames = ['tableBuilt', 'rowClick', 'rowDblClick', 'rowContext', 'rowTap', 'rowDblTap', 'rowTapHold', 'rowAdded', 'rowDeleted', 'rowMoved', 'rowUpdated', 'rowSelectionChanged', 'rowSelected', 'rowDeselected', 'rowResized', 'cellClick', 'cellDblClick', 'cellContext', 'cellTap', 'cellDblTap', 'cellTapHold', 'cellEditing', 'cellEdited', 'cellEditCancelled', 'columnMoved', 'columnResized', 'columnTitleChanged', 'columnVisibilityChanged', 'htmlImporting', 'htmlImported', 'dataLoading', 'dataLoaded', 'dataEdited', 'ajaxRequesting', 'ajaxResponse', 'ajaxError', 'dataFiltering', 'dataFiltered', 'dataSorting', 'dataSorted', 'renderStarted', 'renderComplete', 'pageLoaded', 'localized', 'dataGrouping', 'dataGrouped', 'groupVisibilityChanged', 'groupClick', 'groupDblClick', 'groupContext', 'groupTap', 'groupDblTap', 'groupTapHold', 'movableRowsSendingStart', 'movableRowsSent', 'movableRowsSentFailed', 'movableRowsSendingStop', 'movableRowsReceivingStart', 'movableRowsReceived', 'movableRowsReceivedFailed', 'movableRowsReceivingStop', 'validationFailed', 'clipboardCopied', 'clipboardPasted', 'clipboardPasteError', 'downloadDataFormatter', 'downloadReady', 'downloadComplete'];\n\n  for (var _a = 0, callbackNames_1 = callbackNames; _a < callbackNames_1.length; _a++) {\n    var callbackName = callbackNames_1[_a];\n    output[callbackName] = props[callbackName] || NOOPS;\n  }\n\n  if (typeof props['footerElement'] === 'object') {\n    // convert from JSX to HTML string (tabulator's footerElement accepts string)\n    output['footerElement'] = server_1.renderToString(props['footerElement']);\n  }\n\n  return output;\n};","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/node_modules/react-tabulator/lib/ConfigUtils.js"],"names":["exports","__esModule","server_1","require","NOOPS","propsToOptions","props","output","defaultOptions","_i","defaultOptions_1","length","opt","callbackNames","_a","callbackNames_1","callbackName","renderToString"],"mappings":"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","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar server_1 = require(\"react-dom/server\");\n// .prettierignore    (to keep relevant props together)\nvar NOOPS = function () { };\n// get callbacks from props (default: NOOP) to set them to Tabulator options later.\nexports.propsToOptions = function (props) {\n    var output = {};\n    var defaultOptions = ['height', 'layout', 'layoutColumnsOnNewData', 'columnMinWidth', 'columnVertAlign',\n        'resizableColumns', 'resizableRows', 'autoResize', 'tooltips', 'tooltipsHeader', 'tooltipGenerationMode',\n        'initialSort', 'initialFilter', 'initialHeaderFilter', 'footerElement', 'index', 'keybindings', 'clipboard', 'clipboardCopyStyled',\n        'clipboardCopySelector', 'clipboardCopyFormatter', 'clipboardCopyHeader', 'clipboardPasteParser',\n        'clipboardPasteAction', 'rowFormatter', 'placeholder'];\n    for (var _i = 0, defaultOptions_1 = defaultOptions; _i < defaultOptions_1.length; _i++) {\n        var opt = defaultOptions_1[_i];\n        if (typeof props[opt] !== 'undefined') {\n            output[opt] = props[opt];\n        }\n    }\n    var callbackNames = ['tableBuilt', 'rowClick', 'rowDblClick', 'rowContext', 'rowTap', 'rowDblTap', 'rowTapHold',\n        'rowAdded', 'rowDeleted', 'rowMoved', 'rowUpdated', 'rowSelectionChanged', 'rowSelected', 'rowDeselected', 'rowResized',\n        'cellClick', 'cellDblClick', 'cellContext', 'cellTap', 'cellDblTap', 'cellTapHold', 'cellEditing', 'cellEdited', 'cellEditCancelled',\n        'columnMoved', 'columnResized', 'columnTitleChanged', 'columnVisibilityChanged',\n        'htmlImporting', 'htmlImported', 'dataLoading', 'dataLoaded', 'dataEdited',\n        'ajaxRequesting', 'ajaxResponse', 'ajaxError', 'dataFiltering', 'dataFiltered', 'dataSorting', 'dataSorted',\n        'renderStarted', 'renderComplete', 'pageLoaded', 'localized', 'dataGrouping', 'dataGrouped',\n        'groupVisibilityChanged', 'groupClick', 'groupDblClick', 'groupContext', 'groupTap', 'groupDblTap', 'groupTapHold',\n        'movableRowsSendingStart', 'movableRowsSent', 'movableRowsSentFailed', 'movableRowsSendingStop', 'movableRowsReceivingStart', 'movableRowsReceived', 'movableRowsReceivedFailed', 'movableRowsReceivingStop',\n        'validationFailed', 'clipboardCopied', 'clipboardPasted', 'clipboardPasteError',\n        'downloadDataFormatter', 'downloadReady', 'downloadComplete'];\n    for (var _a = 0, callbackNames_1 = callbackNames; _a < callbackNames_1.length; _a++) {\n        var callbackName = callbackNames_1[_a];\n        output[callbackName] = props[callbackName] || NOOPS;\n    }\n    if (typeof props['footerElement'] === 'object') {\n        // convert from JSX to HTML string (tabulator's footerElement accepts string)\n        output['footerElement'] = server_1.renderToString(props['footerElement']);\n    }\n    return output;\n};\n"]},"metadata":{},"sourceType":"script"}