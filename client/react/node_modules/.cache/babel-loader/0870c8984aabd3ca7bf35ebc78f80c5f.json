{"ast":null,"code":"import _objectSpread from \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\EgretLayout\\\\Layout2\\\\Layout2Sidenav.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, MuiThemeProvider } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { setLayoutSettings, setDefaultSettings } from \"app/redux/actions/LayoutActions\";\nimport { isMobile } from \"utils\";\nimport { withRouter } from \"react-router-dom\";\nimport Sidenav from \"../SharedCompoents/Sidenav\";\nimport Brand from \"../SharedCompoents/Brand\";\nimport SidenavTheme from \"../EgretTheme/SidenavTheme\";\n\nclass Layout2Sidenav extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sidenavToggleChecked: false\n    };\n\n    this.updateSidebarMode = sidebarSettings => {\n      let _this$props = this.props,\n          settings = _this$props.settings,\n          setLayoutSettings = _this$props.setLayoutSettings;\n      setLayoutSettings(_objectSpread(_objectSpread({}, settings), {}, {\n        layout2Settings: _objectSpread(_objectSpread({}, settings.layout2Settings), {}, {\n          leftSidebar: _objectSpread(_objectSpread({}, settings.layout2Settings.leftSidebar), sidebarSettings)\n        })\n      }));\n    };\n  }\n\n  componentWillMount() {\n    // CLOSE SIDENAV ON ROUTE CHANGE ON MOBILE\n    this.unlistenRouteChange = this.props.history.listen((location, action) => {\n      if (isMobile()) {\n        this.updateSidebarMode({\n          mode: \"close\"\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unlistenRouteChange();\n  }\n\n  render() {\n    let _this$props2 = this.props,\n        theme = _this$props2.theme,\n        settings = _this$props2.settings;\n    const sidenavTheme = settings.themes[settings.layout2Settings.leftSidebar.theme] || theme;\n    return /*#__PURE__*/React.createElement(MuiThemeProvider, {\n      theme: sidenavTheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SidenavTheme, {\n      theme: sidenavTheme,\n      settings: settings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidenav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidenav__hold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Brand, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Sidenav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nLayout2Sidenav.propTypes = {\n  setDefaultSettings: PropTypes.func.isRequired,\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setDefaultSettings: PropTypes.func.isRequired,\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: state.layout.settings\n});\n\nexport default withStyles({}, {\n  withTheme: true\n})(withRouter(connect(mapStateToProps, {\n  setLayoutSettings,\n  setDefaultSettings\n})(Layout2Sidenav)));","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/EgretLayout/Layout2/Layout2Sidenav.jsx"],"names":["React","Component","PropTypes","withStyles","MuiThemeProvider","connect","setLayoutSettings","setDefaultSettings","isMobile","withRouter","Sidenav","Brand","SidenavTheme","Layout2Sidenav","state","sidenavToggleChecked","updateSidebarMode","sidebarSettings","props","settings","layout2Settings","leftSidebar","componentWillMount","unlistenRouteChange","history","listen","location","action","mode","componentWillUnmount","render","theme","sidenavTheme","themes","propTypes","func","isRequired","object","mapStateToProps","layout","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, MuiThemeProvider } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport {\n  setLayoutSettings,\n  setDefaultSettings\n} from \"app/redux/actions/LayoutActions\";\nimport { isMobile } from \"utils\";\nimport { withRouter } from \"react-router-dom\";\nimport Sidenav from \"../SharedCompoents/Sidenav\";\nimport Brand from \"../SharedCompoents/Brand\";\nimport SidenavTheme from \"../EgretTheme/SidenavTheme\";\n\nclass Layout2Sidenav extends Component {\n  state = {\n    sidenavToggleChecked: false\n  };\n\n  componentWillMount() {\n    // CLOSE SIDENAV ON ROUTE CHANGE ON MOBILE\n    this.unlistenRouteChange = this.props.history.listen((location, action) => {\n      if (isMobile()) {\n        this.updateSidebarMode({ mode: \"close\" });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unlistenRouteChange();\n  }\n\n  updateSidebarMode = sidebarSettings => {\n    let { settings, setLayoutSettings } = this.props;\n    setLayoutSettings({\n      ...settings,\n      layout2Settings: {\n        ...settings.layout2Settings,\n        leftSidebar: {\n          ...settings.layout2Settings.leftSidebar,\n          ...sidebarSettings\n        }\n      }\n    });\n  };\n\n  render() {\n    let { theme, settings } = this.props;\n    const sidenavTheme =\n      settings.themes[settings.layout2Settings.leftSidebar.theme] || theme;\n    return (\n      <MuiThemeProvider theme={sidenavTheme}>\n        <SidenavTheme theme={sidenavTheme} settings={settings} />\n        <div className=\"sidenav\">\n          <div className=\"sidenav__hold\">\n            <Brand />\n            <Sidenav />\n          </div>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nLayout2Sidenav.propTypes = {\n  setDefaultSettings: PropTypes.func.isRequired,\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setDefaultSettings: PropTypes.func.isRequired,\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: state.layout.settings\n});\n\nexport default withStyles({}, { withTheme: true })(\n  withRouter(\n    connect(\n      mapStateToProps,\n      {\n        setLayoutSettings,\n        setDefaultSettings\n      }\n    )(Layout2Sidenav)\n  )\n);\n"]},"metadata":{},"sourceType":"module"}