{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\GlobitsTableMDB\\\\TableBody\\\\TableBody.js\";\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst TableBody = props => {\n  const children = props.children,\n        color = props.color,\n        columns = props.columns,\n        rows = props.rows,\n        textWhite = props.textWhite,\n        attributes = _objectWithoutProperties(props, [\"children\", \"color\", \"columns\", \"rows\", \"textWhite\"]);\n\n  const classes = classNames(color, {\n    'text-white': textWhite\n  });\n\n  const renderTD = (field, key, array, row) => {\n    if (field === 'clickEvent') {\n      return null;\n    }\n\n    if (field !== 'colspan') {\n      if (row.message) {\n        return key === 0 && /*#__PURE__*/React.createElement(\"td\", {\n          key: key,\n          colSpan: row.colspan,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }\n        }, row.message);\n      } else {\n        return array[key + 1] !== 'colspan' && row[field] !== null && /*#__PURE__*/React.createElement(\"td\", {\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }\n        }, row[field]) || /*#__PURE__*/React.createElement(\"td\", {\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }\n        });\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"td\", {\n      key: key,\n      colSpan: row.colspan,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, row[array[key - 1]]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"tbody\", Object.assign({\n    \"data-test\": \"table-body\"\n  }, attributes, {\n    className: classes || undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }), rows && rows.map((row, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    onClick: row.hasOwnProperty('clickEvent') ? row.clickEvent : undefined,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, columns ? columns.map(({\n    field\n  }, key, array) => renderTD(field, key, array, row)) : Object.keys(row).map((field, key, array) => renderTD(field, key, array, row)))), children);\n};\n\nTableBody.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.string,\n  rows: PropTypes.arrayOf(PropTypes.object),\n  textWhite: PropTypes.bool\n};\nTableBody.defaultProps = {\n  textWhite: false\n};\nexport default TableBody;\nexport { TableBody as MDBTableBody };","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/GlobitsTableMDB/TableBody/TableBody.js"],"names":["classNames","PropTypes","React","TableBody","props","children","color","columns","rows","textWhite","attributes","classes","renderTD","field","key","array","row","message","colspan","undefined","map","index","hasOwnProperty","clickEvent","Object","keys","propTypes","node","string","arrayOf","object","bool","defaultProps","MDBTableBody"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst TableBody = props => {\n  const { children, color, columns, rows, textWhite, ...attributes } = props;\n\n  const classes = classNames(color, {\n    'text-white': textWhite\n  });\n  const renderTD = (field, key, array, row) => {\n    if (field === 'clickEvent') {return null;}\n    if (field !== 'colspan') {\n      if (row.message) {\n        return (\n          key === 0 && (\n            <td key={key} colSpan={row.colspan}>\n              {row.message}\n            </td>\n          )\n        );\n      } else {\n        return (\n          (array[key + 1] !== 'colspan' && row[field] !== null && (\n            <td key={key}>\n              {\n                row[field]\n              }\n              </td>\n          )) || <td key={key}></td>\n        );\n      }\n    }\n    return (\n      <td key={key} colSpan={row.colspan}>\n        {row[array[key - 1]]}\n      </td>\n    );\n  };\n\n  return (\n    <tbody\n      data-test='table-body'\n      {...attributes}\n      className={classes || undefined}\n    >\n      {rows &&\n        rows.map((row, index) => (\n          <tr\n            onClick={\n              row.hasOwnProperty('clickEvent') ? row.clickEvent : undefined\n            }\n            key={index}\n          >\n            {columns\n              ? columns.map(({ field }, key, array) =>\n                  renderTD(field, key, array, row)\n                )\n              : Object.keys(row).map((field, key, array) =>\n                  renderTD(field, key, array, row)\n                )}\n          </tr>\n        ))}\n      {children}\n    </tbody>\n  );\n};\n\nTableBody.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.string,\n  rows: PropTypes.arrayOf(PropTypes.object),\n  textWhite: PropTypes.bool\n};\n\nTableBody.defaultProps = {\n  textWhite: false\n};\n\nexport default TableBody;\nexport { TableBody as MDBTableBody };\n"]},"metadata":{},"sourceType":"module"}