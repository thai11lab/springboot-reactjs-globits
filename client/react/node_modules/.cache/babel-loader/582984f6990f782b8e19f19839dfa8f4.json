{"ast":null,"code":"import _slicedToArray from \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\chat-box\\\\ChatContainer.jsx\";\nimport React, { Fragment } from \"react\";\nimport { IconButton, Icon, Divider, Fab, TextField, MenuItem } from \"@material-ui/core\";\nimport { EgretMenu } from \"egret\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport EmptyMessage from \"./EmptyMessage\";\nimport ChatAvatar from \"./ChatAvatar\";\nimport { getTimeDifference } from \"utils\";\nimport shortid from \"shortid\";\n\nconst ChatContainer = ({\n  id: currentUserId,\n  toggleSidenav,\n  currentChatRoom,\n  opponentUser,\n  messageList = [],\n  setBottomRef,\n  handleMessageSend\n}) => {\n  let _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      message = _React$useState2[0],\n      setMessage = _React$useState2[1];\n\n  const sendMessageOnEnter = event => {\n    if (event.key === \"Enter\" && !event.shiftKey) {\n      message = message.trim();\n      if (message !== \"\") handleMessageSend(message);\n      setMessage(\"\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-container flex-column position-relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-container__topbar flex flex-middle flex-space-between p-4 bg-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"show-on-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: toggleSidenav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    className: \"text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, \"short_text\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hide-on-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pl-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  })), opponentUser && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChatAvatar, {\n    src: opponentUser.avatar,\n    status: opponentUser.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"ml-16 white-space-pre mb-0 font-weight-500 font-size-18 text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, opponentUser.name))), /*#__PURE__*/React.createElement(EgretMenu, {\n    menuButton: /*#__PURE__*/React.createElement(IconButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      className: \"text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, \"more_vert\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    className: \"flex flex-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    className: \"mr-16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"account_circle\"), \" Contact\"), /*#__PURE__*/React.createElement(MenuItem, {\n    className: \"flex flex-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    className: \"mr-16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"volume_mute\"), \" Mute\"), /*#__PURE__*/React.createElement(MenuItem, {\n    className: \"flex flex-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    className: \"mr-16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"delete\"), \" Clear Chat\"))), /*#__PURE__*/React.createElement(Scrollbar, {\n    containerRef: ref => {\n      setBottomRef(ref);\n    },\n    className: \"chat-message-list flex-grow-1 position-relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, currentChatRoom === \"\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-column flex-center flex-middle h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(EmptyMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Select a contact\")), messageList.map((message, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-top px-16 py-12\",\n    key: shortid.generate(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ChatAvatar, {\n    src: message.avatar,\n    status: message.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted m-0 mb-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, message.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-16 py-8 mb-4 list__message \".concat(currentUserId === message.contactId ? \"bg-primary text-white\" : \"bg-paper\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"white-space-pre-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, message.text)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, getTimeDifference(new Date(message.time)), \" ago\"))))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), currentChatRoom !== \"\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-middle px-16 py-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Type your message here*\",\n    value: message,\n    onChange: e => setMessage(e.target.value),\n    onKeyDown: sendMessageOnEnter,\n    fullWidth: true,\n    multiline: true,\n    rows: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    onClick: () => {\n      if (message.trim() !== \"\") handleMessageSend(message);\n      setMessage(\"\");\n    },\n    color: \"primary\",\n    className: \"ml-16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, \"send\")))));\n};\n\nexport default ChatContainer;","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/chat-box/ChatContainer.jsx"],"names":["React","Fragment","IconButton","Icon","Divider","Fab","TextField","MenuItem","EgretMenu","Scrollbar","EmptyMessage","ChatAvatar","getTimeDifference","shortid","ChatContainer","id","currentUserId","toggleSidenav","currentChatRoom","opponentUser","messageList","setBottomRef","handleMessageSend","useState","message","setMessage","sendMessageOnEnter","event","key","shiftKey","trim","avatar","status","name","ref","map","index","generate","contactId","text","Date","time","e","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport {\n  IconButton,\n  Icon,\n  Divider,\n  Fab,\n  TextField,\n  MenuItem\n} from \"@material-ui/core\";\nimport { EgretMenu } from \"egret\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport EmptyMessage from \"./EmptyMessage\";\nimport ChatAvatar from \"./ChatAvatar\";\nimport { getTimeDifference } from \"utils\";\nimport shortid from \"shortid\";\n\nconst ChatContainer = ({\n  id: currentUserId,\n  toggleSidenav,\n  currentChatRoom,\n  opponentUser,\n  messageList = [],\n  setBottomRef,\n  handleMessageSend\n}) => {\n  let [message, setMessage] = React.useState(\"\");\n  const sendMessageOnEnter = event => {\n    if (event.key === \"Enter\" && !event.shiftKey) {\n      message = message.trim();\n      if (message !== \"\") handleMessageSend(message);\n      setMessage(\"\");\n    }\n  };\n\n  return (\n    <div className=\"chat-container flex-column position-relative\">\n      <div className=\"chat-container__topbar flex flex-middle flex-space-between p-4 bg-primary\">\n        <div className=\"flex flex-middle\">\n          <div className=\"show-on-mobile\">\n            <IconButton onClick={toggleSidenav}>\n              <Icon className=\"text-white\">short_text</Icon>\n            </IconButton>\n          </div>\n\n          <div className=\"hide-on-mobile\">\n            <div className=\"pl-12\"></div>\n          </div>\n\n          {opponentUser && (\n            <Fragment>\n              <ChatAvatar\n                src={opponentUser.avatar}\n                status={opponentUser.status}\n              />\n              <h5 className=\"ml-16 white-space-pre mb-0 font-weight-500 font-size-18 text-white\">\n                {opponentUser.name}\n              </h5>\n            </Fragment>\n          )}\n        </div>\n        <EgretMenu\n          menuButton={\n            <IconButton>\n              <Icon className=\"text-white\">more_vert</Icon>\n            </IconButton>\n          }\n        >\n          <MenuItem className=\"flex flex-middle\">\n            <Icon className=\"mr-16\">account_circle</Icon> Contact\n          </MenuItem>\n          <MenuItem className=\"flex flex-middle\">\n            <Icon className=\"mr-16\">volume_mute</Icon> Mute\n          </MenuItem>\n          <MenuItem className=\"flex flex-middle\">\n            <Icon className=\"mr-16\">delete</Icon> Clear Chat\n          </MenuItem>\n        </EgretMenu>\n      </div>\n\n      <Scrollbar\n        containerRef={ref => {\n          setBottomRef(ref);\n        }}\n        className=\"chat-message-list flex-grow-1 position-relative\"\n      >\n        {currentChatRoom === \"\" && (\n          <div className=\"flex-column flex-center flex-middle h-100\">\n            <EmptyMessage />\n            <p>Select a contact</p>\n          </div>\n        )}\n        {messageList.map((message, index) => (\n          <div className=\"flex flex-top px-16 py-12\" key={shortid.generate()}>\n            <ChatAvatar src={message.avatar} status={message.status} />\n            <div className=\"ml-16\">\n              <p className=\"text-muted m-0 mb-8\">{message.name}</p>\n              <div\n                className={`px-16 py-8 mb-4 list__message ${\n                  currentUserId === message.contactId\n                    ? \"bg-primary text-white\"\n                    : \"bg-paper\"\n                }`}\n              >\n                <span className=\"white-space-pre-line\">{message.text}</span>\n              </div>\n              <p className=\"text-muted mb-0\">\n                {getTimeDifference(new Date(message.time))} ago\n              </p>\n            </div>\n          </div>\n        ))}\n        {/* <div ref={ref => setBottomRef(ref)} /> */}\n      </Scrollbar>\n\n      <Divider />\n\n      {currentChatRoom !== \"\" && (\n        <div className=\"flex flex-middle px-16 py-8\">\n          <TextField\n            label=\"Type your message here*\"\n            value={message}\n            onChange={e => setMessage(e.target.value)}\n            onKeyDown={sendMessageOnEnter}\n            fullWidth\n            multiline={true}\n            rows={1}\n          />\n          <div>\n            <Fab\n              onClick={() => {\n                if (message.trim() !== \"\") handleMessageSend(message);\n                setMessage(\"\");\n              }}\n              color=\"primary\"\n              className=\"ml-16\"\n            >\n              <Icon>send</Icon>\n            </Fab>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatContainer;\n"]},"metadata":{},"sourceType":"module"}