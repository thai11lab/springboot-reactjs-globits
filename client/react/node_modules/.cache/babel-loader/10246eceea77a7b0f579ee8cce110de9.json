{"ast":null,"code":"import _objectSpread from \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\calendar\\\\EventEditorDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, IconButton, Button, Icon, Grid } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { MuiPickersUtilsProvider, DateTimePicker } from \"@material-ui/pickers\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { addNewEvent, updateEvent, deleteEvent } from \"./CalendarService\";\n\nclass EventEditorDialog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"\",\n      start: \"\",\n      end: \"\",\n      location: \"\",\n      note: \"\"\n    };\n\n    this.handleChange = event => {\n      event.persist();\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = () => {\n      let id = this.state.id;\n\n      if (id) {\n        updateEvent(_objectSpread({}, this.state)).then(() => {\n          this.props.handleClose();\n        });\n      } else {\n        addNewEvent(_objectSpread({\n          id: this.generateRandomId()\n        }, this.state)).then(() => {\n          this.props.handleClose();\n        });\n      }\n    };\n\n    this.handleDeleteEvent = () => {\n      if (this.state.id) {\n        deleteEvent(this.state).then(() => {\n          this.props.handleClose();\n        });\n      }\n    };\n\n    this.handleDateChange = (date, name) => {\n      this.setState({\n        [name]: date\n      });\n    };\n\n    this.generateRandomId = () => {\n      let tempId = Math.random().toString();\n      let id = tempId.substr(2, tempId.length - 1);\n      return id;\n    };\n  }\n\n  componentWillMount() {\n    this.setState(_objectSpread({}, this.props.event));\n  }\n\n  render() {\n    let _this$state = this.state,\n        title = _this$state.title,\n        start = _this$state.start,\n        end = _this$state.end,\n        location = _this$state.location,\n        note = _this$state.note;\n    let _this$props = this.props,\n        open = _this$props.open,\n        handleClose = _this$props.handleClose;\n    return /*#__PURE__*/React.createElement(Dialog, {\n      onClose: handleClose,\n      open: open,\n      maxWidth: \"xs\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-space-between flex-middle pl-16 pr-8 py-8 bg-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"m-0 text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"Add Events\"), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      className: \"text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"clear\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ValidatorForm, {\n      ref: \"form\",\n      onSubmit: this.handleFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"mb-24 w-100\",\n      label: \"Title\",\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"title\",\n      value: title,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DateTimePicker, {\n      margin: \"none\",\n      id: \"mui-pickers-date\",\n      label: \"Start date\",\n      inputVariant: \"standard\",\n      type: \"text\",\n      autoOk: true,\n      value: start,\n      onChange: date => this.handleDateChange(date, \"start\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DateTimePicker, {\n      margin: \"none\",\n      id: \"mui-pickers-date\",\n      label: \"End date\",\n      inputVariant: \"standard\",\n      type: \"text\",\n      autoOk: true,\n      value: end,\n      onChange: date => this.handleDateChange(date, \"end\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"py-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"mb-24 w-100\",\n      label: \"Location\",\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"location\",\n      value: location,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"mb-36 w-100\",\n      label: \"Note\",\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"note\",\n      value: note,\n      rowsMax: 2,\n      multiline: true,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-space-between flex-middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleDeleteEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      className: \"mr-8 text-middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, \"delete\"), \"Delete\")))));\n  }\n\n}\n\nexport default EventEditorDialog;","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/calendar/EventEditorDialog.jsx"],"names":["React","Component","Dialog","IconButton","Button","Icon","Grid","ValidatorForm","TextValidator","MuiPickersUtilsProvider","DateTimePicker","DateFnsUtils","addNewEvent","updateEvent","deleteEvent","EventEditorDialog","state","title","start","end","location","note","handleChange","event","persist","setState","target","name","value","handleFormSubmit","id","then","props","handleClose","generateRandomId","handleDeleteEvent","handleDateChange","date","tempId","Math","random","toString","substr","length","componentWillMount","render","open"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Dialog, IconButton, Button, Icon, Grid } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { MuiPickersUtilsProvider, DateTimePicker } from \"@material-ui/pickers\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { addNewEvent, updateEvent, deleteEvent } from \"./CalendarService\";\n\nclass EventEditorDialog extends Component {\n  state = {\n    title: \"\",\n    start: \"\",\n    end: \"\",\n    location: \"\",\n    note: \"\"\n  };\n\n  handleChange = event => {\n    event.persist();\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleFormSubmit = () => {\n    let { id } = this.state;\n    if (id) {\n      updateEvent({\n        ...this.state\n      }).then(() => {\n        this.props.handleClose();\n      });\n    } else {\n      addNewEvent({\n        id: this.generateRandomId(),\n        ...this.state\n      }).then(() => {\n        this.props.handleClose();\n      });\n    }\n  };\n\n  handleDeleteEvent = () => {\n    if (this.state.id) {\n      deleteEvent(this.state).then(() => {\n        this.props.handleClose();\n      });\n    }\n  };\n\n  handleDateChange = (date, name) => {\n    this.setState({\n      [name]: date\n    });\n  };\n\n  generateRandomId = () => {\n    let tempId = Math.random().toString();\n    let id = tempId.substr(2, tempId.length - 1);\n    return id;\n  };\n\n  componentWillMount() {\n    this.setState({\n      ...this.props.event\n    });\n  }\n\n  render() {\n    let { title, start, end, location, note } = this.state;\n    let { open, handleClose } = this.props;\n\n    return (\n      <Dialog onClose={handleClose} open={open} maxWidth=\"xs\" fullWidth={true}>\n        <div className=\"flex flex-space-between flex-middle pl-16 pr-8 py-8 bg-primary\">\n          <h4 className=\"m-0 text-white\">Add Events</h4>\n          <IconButton onClick={handleClose}>\n            <Icon className=\"text-white\">clear</Icon>\n          </IconButton>\n        </div>\n\n        <div className=\"p-16\">\n          <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\n            <TextValidator\n              className=\"mb-24 w-100\"\n              label=\"Title\"\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"title\"\n              value={title}\n              validators={[\"required\"]}\n              errorMessages={[\"this field is required\"]}\n            />\n\n            <Grid container spacing={4}>\n              <Grid item sm={6} xs={12}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <DateTimePicker\n                    margin=\"none\"\n                    id=\"mui-pickers-date\"\n                    label=\"Start date\"\n                    inputVariant=\"standard\"\n                    type=\"text\"\n                    autoOk={true}\n                    value={start}\n                    onChange={date => this.handleDateChange(date, \"start\")}\n                  />\n                </MuiPickersUtilsProvider>\n              </Grid>\n              <Grid item sm={6} xs={12}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <DateTimePicker\n                    margin=\"none\"\n                    id=\"mui-pickers-date\"\n                    label=\"End date\"\n                    inputVariant=\"standard\"\n                    type=\"text\"\n                    autoOk={true}\n                    value={end}\n                    onChange={date => this.handleDateChange(date, \"end\")}\n                  />\n                </MuiPickersUtilsProvider>\n              </Grid>\n            </Grid>\n            <div className=\"py-8\" />\n            <TextValidator\n              className=\"mb-24 w-100\"\n              label=\"Location\"\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"location\"\n              value={location}\n              validators={[\"required\"]}\n              errorMessages={[\"this field is required\"]}\n            />\n\n            <TextValidator\n              className=\"mb-36 w-100\"\n              label=\"Note\"\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"note\"\n              value={note}\n              rowsMax={2}\n              multiline={true}\n              validators={[\"required\"]}\n              errorMessages={[\"this field is required\"]}\n            />\n\n            <div className=\"flex flex-space-between flex-middle\">\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Save\n              </Button>\n              <Button onClick={this.handleDeleteEvent}>\n                <Icon className=\"mr-8 text-middle\">delete</Icon>\n                Delete\n              </Button>\n            </div>\n          </ValidatorForm>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default EventEditorDialog;\n"]},"metadata":{},"sourceType":"module"}