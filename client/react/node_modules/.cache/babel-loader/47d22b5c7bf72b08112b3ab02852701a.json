{"ast":null,"code":"var _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\egret\\\\components\\\\EgretVerticalNav\\\\EgretVerticalNav.jsx\";\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Icon } from \"@material-ui/core\";\nimport TouchRipple from \"@material-ui/core/ButtonBase\";\nimport EgretVerticalNavExpansionPanel from \"./EgretVerticalNavExpansionPanel\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nconst ViewEgretVerticalNavExpansionPanel = withTranslation()(EgretVerticalNavExpansionPanel);\n\nconst styles = theme => ({\n  expandIcon: {\n    transition: \"transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms\",\n    transform: \"rotate(90deg)\"\n  },\n  collapseIcon: {\n    transition: \"transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms\",\n    transform: \"rotate(0deg)\"\n  }\n});\n\nclass EgretVerticalNav extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      collapsed: true\n    };\n\n    this.renderLevels = data => {\n      const _this$props = this.props,\n            t = _this$props.t,\n            i18n = _this$props.i18n,\n            classes = _this$props.classes;\n      return data.map((item, index) => {\n        if (item.children) {\n          return /*#__PURE__*/React.createElement(ViewEgretVerticalNavExpansionPanel, {\n            item: item,\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 11\n            }\n          }, this.renderLevels(item.children));\n        } else {\n          return /*#__PURE__*/React.createElement(NavLink, {\n            key: index,\n            to: item.path,\n            className: \"nav-item\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(TouchRipple, {\n            key: item.name,\n            name: \"child\",\n            className: \"w-100\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 13\n            }\n          }, (() => {\n            if (item.icon) {\n              return /*#__PURE__*/React.createElement(Icon, {\n                className: \"item-icon text-middle\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 21\n                }\n              }, item.icon);\n            } else {\n              return /*#__PURE__*/React.createElement(\"span\", {\n                className: \"item-icon icon-text\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 21\n                }\n              }, item.iconText);\n            }\n          })(), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"text-middle pl-20 item-text\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }\n          }, t(item.name)), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"mx-auto\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }\n          }), item.badge && /*#__PURE__*/React.createElement(\"div\", {\n            className: \"badge bg-\".concat(item.badge.color),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }\n          }, item.badge.value)));\n        }\n      });\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        collapsed: !this.state.collapsed\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"navigation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, this.renderLevels(this.props.navigation));\n  }\n\n}\n\nexport default withStyles(styles)(EgretVerticalNav);","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/egret/components/EgretVerticalNav/EgretVerticalNav.jsx"],"names":["React","Component","NavLink","Icon","TouchRipple","EgretVerticalNavExpansionPanel","withStyles","useTranslation","withTranslation","Trans","ViewEgretVerticalNavExpansionPanel","styles","theme","expandIcon","transition","transform","collapseIcon","EgretVerticalNav","state","collapsed","renderLevels","data","props","t","i18n","classes","map","item","index","children","path","name","icon","iconText","badge","color","value","handleClick","setState","render","navigation"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Icon } from \"@material-ui/core\";\nimport TouchRipple from \"@material-ui/core/ButtonBase\";\nimport EgretVerticalNavExpansionPanel from \"./EgretVerticalNavExpansionPanel\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nconst ViewEgretVerticalNavExpansionPanel = withTranslation()(EgretVerticalNavExpansionPanel);\nconst styles = theme => ({\n  expandIcon: {\n    transition: \"transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms\",\n    transform: \"rotate(90deg)\"\n  },\n  collapseIcon: {\n    transition: \"transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms\",\n    transform: \"rotate(0deg)\"\n  }\n});\n\nclass EgretVerticalNav extends Component {\n  state = {\n    collapsed: true\n  };\n\n  renderLevels = data => {\n    const { t, i18n,classes } = this.props;\n    return data.map((item, index) => {\n      if (item.children) {\n        return (\n          <ViewEgretVerticalNavExpansionPanel item={item} key={index}>\n            {this.renderLevels(item.children)}\n          </ViewEgretVerticalNavExpansionPanel>\n        );\n      } else {\n        return (\n          <NavLink key={index} to={item.path} className=\"nav-item\">\n            <TouchRipple key={item.name} name=\"child\" className=\"w-100\">\n              {(() => {\n                if (item.icon) {\n                  return (\n                    <Icon className=\"item-icon text-middle\">{item.icon}</Icon>\n                  );\n                } else {\n                  return (\n                    <span className=\"item-icon icon-text\">{item.iconText}</span>\n                  );\n                }\n              })()}\n              <span className=\"text-middle pl-20 item-text\">{t(item.name)}</span>\n              <div className=\"mx-auto\"></div>\n              {item.badge && (\n                <div className={`badge bg-${item.badge.color}`}>\n                  {item.badge.value}\n                </div>\n              )}\n            </TouchRipple>\n          </NavLink>\n        );\n      }\n    });\n  };\n\n  handleClick = () => {\n    this.setState({ collapsed: !this.state.collapsed });\n  };\n\n  render() {\n    return (\n      <div className=\"navigation\">\n        {this.renderLevels(this.props.navigation)}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(EgretVerticalNav);\n"]},"metadata":{},"sourceType":"module"}