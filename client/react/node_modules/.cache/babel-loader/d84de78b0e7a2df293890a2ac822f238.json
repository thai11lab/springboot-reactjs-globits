{"ast":null,"code":"import _objectSpread from \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\todo\\\\TodoEditor.jsx\";\nimport React, { Component } from \"react\";\nimport { Card, IconButton, Icon, FormControlLabel, Checkbox, Chip, Button, Grid, MenuItem, Tooltip, Hidden } from \"@material-ui/core\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { Link } from \"react-router-dom\";\nimport { getTodoById, getAllTodoTag, updateTodoById, deleteTodo, addTodo } from \"./TodoService\";\nimport { EgretMenu } from \"egret\";\nimport TagDialog from \"./TagDialog\";\n\nclass TodoEditor extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todo: {\n        title: \"\",\n        note: \"\",\n        done: false,\n        read: false,\n        starred: false,\n        important: false,\n        startDate: new Date(),\n        dueDate: new Date(),\n        tag: []\n      },\n      tagList: [],\n      shouldOpenTagDialog: false\n    };\n\n    this.addNewTodo = () => {\n      let id = this.state.tagList.length + 1;\n      addTodo(_objectSpread(_objectSpread({}, this.state.todo), {}, {\n        id\n      })).then(() => {\n        this.props.history.push(\"/todo/list\");\n      });\n    };\n\n    this.updateTodo = todo => {\n      updateTodoById(todo);\n      this.setState({\n        todo: _objectSpread(_objectSpread({}, this.state.todo), todo)\n      });\n    };\n\n    this.reloadTagList = () => {\n      getAllTodoTag().then(({\n        data\n      }) => {\n        this.setState({\n          tagList: [...data]\n        });\n      });\n    };\n\n    this.addTagInTodo = id => {\n      let tag = this.state.todo.tag;\n\n      if (!tag.includes(id)) {\n        tag.push(id);\n        this.setState({\n          todo: _objectSpread(_objectSpread({}, this.state.todo), {}, {\n            tag\n          })\n        });\n      }\n    };\n\n    this.handleTagDelete = tagId => {\n      let _this$state$todo$tag = this.state.todo.tag,\n          tagList = _this$state$todo$tag === void 0 ? [] : _this$state$todo$tag;\n      tagList = tagList.filter(id => id !== tagId);\n      this.setState({\n        todo: _objectSpread(_objectSpread({}, this.state.todo), {}, {\n          tag: [...tagList]\n        })\n      }, () => updateTodoById(_objectSpread({}, this.state.todo)));\n    };\n\n    this.handleTodoDelete = () => {\n      deleteTodo(_objectSpread({}, this.state.todo)).then(() => {\n        this.props.history.push(\"/todo/list\");\n      });\n    };\n\n    this.handleChange = event => {\n      event.persist();\n      this.setState({\n        todo: _objectSpread(_objectSpread({}, this.state.todo), {}, {\n          [event.target.name]: event.target.value\n        })\n      });\n    };\n\n    this.handleDateChange = (filedName, date) => {\n      this.setState(this.setState({\n        todo: _objectSpread(_objectSpread({}, this.state.todo), {}, {\n          [filedName]: date\n        })\n      }));\n    };\n\n    this.handleSubmit = event => {\n      let todoId = this.props.match.params.id;\n\n      if (todoId === \"add\") {\n        this.addNewTodo();\n      } else {\n        updateTodoById(_objectSpread({}, this.state.todo)).then(() => {\n          this.props.history.push(\"/todo/list\");\n        });\n      }\n    };\n\n    this.handleTagDialogToggle = () => {\n      this.setState({\n        shouldOpenTagDialog: !this.state.shouldOpenTagDialog\n      });\n    };\n  }\n\n  componentWillMount() {\n    let todoId = this.props.match.params.id;\n    getAllTodoTag().then(({\n      data: tagList\n    }) => {\n      if (todoId !== \"add\") {\n        getTodoById(todoId).then(({\n          data\n        }) => {\n          if (!data) {\n            this.props.history.push(\"/todo/list\");\n            return;\n          }\n\n          this.setState({\n            todo: _objectSpread({}, data),\n            tagList: [...tagList]\n          });\n        });\n      } else {\n        this.setState({\n          tagList\n        });\n      }\n    });\n  }\n\n  render() {\n    let _this$state$todo = this.state.todo,\n        title = _this$state$todo.title,\n        note = _this$state$todo.note,\n        done = _this$state$todo.done,\n        read = _this$state$todo.read,\n        starred = _this$state$todo.starred,\n        important = _this$state$todo.important,\n        startDate = _this$state$todo.startDate,\n        dueDate = _this$state$todo.dueDate,\n        _this$state$todo$tag2 = _this$state$todo.tag,\n        tagIdList = _this$state$todo$tag2 === void 0 ? [] : _this$state$todo$tag2;\n    let tagList = this.state.tagList;\n    return /*#__PURE__*/React.createElement(Card, {\n      className: \"todo-editor position-relative m-sm-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editor__topbar bg-light-gray py-8 flex flex-wrap flex-middle flex-space-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-wrap flex-middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/todo/list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, \"arrow_back\"))), /*#__PURE__*/React.createElement(Hidden, {\n      smDown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      className: \"ml-4\",\n      onChange: () => this.updateTodo(_objectSpread(_objectSpread({}, this.state), {}, {\n        done: !done\n      })),\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        checked: done,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 26\n        }\n      }),\n      label: \"Mark As \".concat(done ? \"Und\" : \"D\", \"one\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Mark As \".concat(read ? \"Unr\" : \"R\", \"ead\"),\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => this.updateTodo(_objectSpread(_objectSpread({}, this.state), {}, {\n        read: !read\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }, read ? \"drafts\" : \"markunread\"))), /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Mark As \".concat(important ? \"Uni\" : \"I\", \"mportant\"),\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => this.updateTodo(_objectSpread(_objectSpread({}, this.state), {}, {\n        important: !important\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      color: important ? \"error\" : \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }\n    }, important ? \"error\" : \"error_outline\"))), /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Mark As \".concat(starred ? \"Uns\" : \"S\", \"tarred\"),\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => this.updateTodo(_objectSpread(_objectSpread({}, this.state), {}, {\n        starred: !starred\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      color: starred ? \"secondary\" : \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }\n    }, starred ? \"star\" : \"star_outline\"))), /*#__PURE__*/React.createElement(Hidden, {\n      smDown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Manage tags\",\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.handleTagDialogToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 19\n      }\n    }, \"library_add\")))), /*#__PURE__*/React.createElement(EgretMenu, {\n      menuButton: /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Add tags\",\n        fontSize: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }\n      }, \"label\"))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }\n    }, this.state.tagList.map(tag => /*#__PURE__*/React.createElement(MenuItem, {\n      className: \"capitalize\",\n      key: tag.id,\n      onClick: () => this.addTagInTodo(tag.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }, tag.name))), /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Delete\",\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.handleTodoDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }\n    }, \"delete_outline\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editor__form p-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"my-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }\n    }, tagIdList.map(tagId => {\n      let tagName = (tagList.find(tag => tag.id === tagId) || {}).name;\n      if (!tagName) return null;else return /*#__PURE__*/React.createElement(Chip, {\n        className: \"capitalize mr-8\",\n        key: tagId,\n        label: tagName,\n        onDelete: () => this.handleTagDelete(tagId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 19\n        }\n      });\n    })), /*#__PURE__*/React.createElement(ValidatorForm, {\n      ref: \"form\",\n      onSubmit: this.handleSubmit,\n      onError: errors => null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"mb-16 w-100\",\n      label: \"Title*\",\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"title\",\n      value: title,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"mb-16 w-100\",\n      label: \"Put your notes*\",\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"note\",\n      multiline: true,\n      value: note,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 3,\n      md: 4,\n      sm: 12,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n      margin: \"none\",\n      id: \"mui-pickers-date\",\n      label: \"Start Date*\",\n      inputVariant: \"standard\",\n      type: \"text\",\n      autoOk: true,\n      value: new Date(startDate),\n      onChange: date => this.handleDateChange(\"startDate\", date),\n      KeyboardButtonProps: {\n        \"aria-label\": \"change date\"\n      },\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 3,\n      md: 4,\n      sm: 12,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n      margin: \"none\",\n      id: \"mui-pickers-date\",\n      label: \"End Date*\",\n      inputVariant: \"standard\",\n      type: \"text\",\n      autoOk: true,\n      value: new Date(dueDate),\n      onChange: date => this.handleDateChange(\"dueDate\", date),\n      KeyboardButtonProps: {\n        \"aria-label\": \"change date\"\n      },\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 21\n      }\n    }))))), /*#__PURE__*/React.createElement(Link, {\n      to: \"/todo/list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"mr-16\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 15\n      }\n    }, \"cancel\")), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 13\n      }\n    }, \"save\"))), /*#__PURE__*/React.createElement(TagDialog, {\n      reloadTagList: this.reloadTagList,\n      open: this.state.shouldOpenTagDialog,\n      handleClose: this.handleTagDialogToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default TodoEditor;","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/todo/TodoEditor.jsx"],"names":["React","Component","Card","IconButton","Icon","FormControlLabel","Checkbox","Chip","Button","Grid","MenuItem","Tooltip","Hidden","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","ValidatorForm","TextValidator","Link","getTodoById","getAllTodoTag","updateTodoById","deleteTodo","addTodo","EgretMenu","TagDialog","TodoEditor","state","todo","title","note","done","read","starred","important","startDate","Date","dueDate","tag","tagList","shouldOpenTagDialog","addNewTodo","id","length","then","props","history","push","updateTodo","setState","reloadTagList","data","addTagInTodo","includes","handleTagDelete","tagId","filter","handleTodoDelete","handleChange","event","persist","target","name","value","handleDateChange","filedName","date","handleSubmit","todoId","match","params","handleTagDialogToggle","componentWillMount","render","tagIdList","map","tagName","find","errors"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Card,\n  IconButton,\n  Icon,\n  FormControlLabel,\n  Checkbox,\n  Chip,\n  Button,\n  Grid,\n  MenuItem,\n  Tooltip,\n  Hidden\n} from \"@material-ui/core\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getTodoById,\n  getAllTodoTag,\n  updateTodoById,\n  deleteTodo,\n  addTodo\n} from \"./TodoService\";\nimport {EgretMenu} from \"egret\";\nimport TagDialog from \"./TagDialog\";\n\nclass TodoEditor extends Component {\n  state = {\n    todo: {\n      title: \"\",\n      note: \"\",\n      done: false,\n      read: false,\n      starred: false,\n      important: false,\n      startDate: new Date(),\n      dueDate: new Date(),\n      tag: []\n    },\n    tagList: [],\n    shouldOpenTagDialog: false\n  };\n\n  componentWillMount() {\n    let { id: todoId } = this.props.match.params;\n\n    getAllTodoTag().then(({ data: tagList }) => {\n      if (todoId !== \"add\") {\n        getTodoById(todoId).then(({ data }) => {\n          if (!data) {\n            this.props.history.push(\"/todo/list\");\n            return;\n          }\n          this.setState({\n            todo: { ...data },\n            tagList: [...tagList]\n          });\n        });\n      } else {\n        this.setState({\n          tagList\n        });\n      }\n    });\n  }\n\n  addNewTodo = () => {\n    let id = this.state.tagList.length + 1;\n    addTodo({ ...this.state.todo, id }).then(() => {\n      this.props.history.push(\"/todo/list\");\n    });\n  };\n\n  updateTodo = todo => {\n    updateTodoById(todo);\n    this.setState({\n      todo: {\n        ...this.state.todo,\n        ...todo\n      }\n    });\n  };\n\n  reloadTagList = () => {\n    getAllTodoTag().then(({ data }) => {\n      this.setState({\n        tagList: [...data]\n      });\n    });\n  };\n\n  addTagInTodo = id => {\n    let { tag } = this.state.todo;\n    if (!tag.includes(id)) {\n      tag.push(id);\n      this.setState({\n        todo: {\n          ...this.state.todo,\n          tag\n        }\n      });\n    }\n  };\n\n  handleTagDelete = tagId => {\n    let { tag: tagList = [] } = this.state.todo;\n    tagList = tagList.filter(id => id !== tagId);\n    this.setState(\n      {\n        todo: {\n          ...this.state.todo,\n          tag: [...tagList]\n        }\n      },\n      () => updateTodoById({ ...this.state.todo })\n    );\n  };\n\n  handleTodoDelete = () => {\n    deleteTodo({ ...this.state.todo }).then(() => {\n      this.props.history.push(\"/todo/list\");\n    });\n  };\n\n  handleChange = event => {\n    event.persist();\n    this.setState({\n      todo: {\n        ...this.state.todo,\n        [event.target.name]: event.target.value\n      }\n    });\n  };\n\n  handleDateChange = (filedName, date) => {\n    this.setState(\n      this.setState({\n        todo: {\n          ...this.state.todo,\n          [filedName]: date\n        }\n      })\n    );\n  };\n\n  handleSubmit = event => {\n    let { id: todoId } = this.props.match.params;\n\n    if (todoId === \"add\") {\n      this.addNewTodo();\n    } else {\n      updateTodoById({ ...this.state.todo }).then(() => {\n        this.props.history.push(\"/todo/list\");\n      });\n    }\n  };\n\n  handleTagDialogToggle = () => {\n    this.setState({\n      shouldOpenTagDialog: !this.state.shouldOpenTagDialog\n    });\n  };\n\n  render() {\n    let {\n      title,\n      note,\n      done,\n      read,\n      starred,\n      important,\n      startDate,\n      dueDate,\n      tag: tagIdList = []\n    } = this.state.todo;\n    let { tagList } = this.state;\n\n    return (\n      <Card className=\"todo-editor position-relative m-sm-30\">\n        <div className=\"editor__topbar bg-light-gray py-8 flex flex-wrap flex-middle flex-space-between\">\n          <div className=\"flex flex-wrap flex-middle\">\n            <Link to=\"/todo/list\">\n              <IconButton>\n                <Icon>arrow_back</Icon>\n              </IconButton>\n            </Link>\n            <Hidden smDown>\n              <FormControlLabel\n                className=\"ml-4\"\n                onChange={() => this.updateTodo({ ...this.state, done: !done })}\n                control={<Checkbox checked={done} />}\n                label={`Mark As ${done ? \"Und\" : \"D\"}one`}\n              />\n            </Hidden>\n          </div>\n          <div className=\"flex flex-wrap\">\n            <Tooltip\n              title={`Mark As ${read ? \"Unr\" : \"R\"}ead`}\n              fontSize=\"large\"\n            >\n              <IconButton\n                onClick={() => this.updateTodo({ ...this.state, read: !read })}\n              >\n                <Icon>{read ? \"drafts\" : \"markunread\"}</Icon>\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip\n              title={`Mark As ${important ? \"Uni\" : \"I\"}mportant`}\n              fontSize=\"large\"\n            >\n              <IconButton\n                onClick={() =>\n                  this.updateTodo({ ...this.state, important: !important })\n                }\n              >\n                <Icon color={important ? \"error\" : \"inherit\"}>\n                  {important ? \"error\" : \"error_outline\"}\n                </Icon>\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip\n              title={`Mark As ${starred ? \"Uns\" : \"S\"}tarred`}\n              fontSize=\"large\"\n            >\n              <IconButton\n                onClick={() =>\n                  this.updateTodo({ ...this.state, starred: !starred })\n                }\n              >\n                <Icon color={starred ? \"secondary\" : \"inherit\"}>\n                  {starred ? \"star\" : \"star_outline\"}\n                </Icon>\n              </IconButton>\n            </Tooltip>\n\n            <Hidden smDown>\n              <Tooltip title=\"Manage tags\" fontSize=\"large\">\n                <IconButton onClick={this.handleTagDialogToggle}>\n                  <Icon>library_add</Icon>\n                </IconButton>\n              </Tooltip>\n            </Hidden>\n\n            <EgretMenu\n              menuButton={\n                <Tooltip title=\"Add tags\" fontSize=\"large\">\n                  <IconButton>\n                    <Icon>label</Icon>\n                  </IconButton>\n                </Tooltip>\n              }\n            >\n              {this.state.tagList.map(tag => (\n                <MenuItem\n                  className=\"capitalize\"\n                  key={tag.id}\n                  onClick={() => this.addTagInTodo(tag.id)}\n                >\n                  {tag.name}\n                </MenuItem>\n              ))}\n            </EgretMenu>\n\n            <Tooltip title=\"Delete\" fontSize=\"large\">\n              <IconButton onClick={this.handleTodoDelete}>\n                <Icon>delete_outline</Icon>\n              </IconButton>\n            </Tooltip>\n          </div>\n        </div>\n\n        <div className=\"editor__form p-16\">\n          <div className=\"my-16\">\n            {tagIdList.map(tagId => {\n              let tagName = (tagList.find(tag => tag.id === tagId) || {}).name;\n              if (!tagName) return null;\n              else\n                return (\n                  <Chip\n                    className=\"capitalize mr-8\"\n                    key={tagId}\n                    label={tagName}\n                    onDelete={() => this.handleTagDelete(tagId)}\n                  />\n                );\n            })}\n          </div>\n\n          <ValidatorForm\n            ref=\"form\"\n            onSubmit={this.handleSubmit}\n            onError={errors => null}\n          >\n            <TextValidator\n              className=\"mb-16 w-100\"\n              label=\"Title*\"\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"title\"\n              value={title}\n              validators={[\"required\"]}\n              errorMessages={[\"this field is required\"]}\n            />\n            <TextValidator\n              className=\"mb-16 w-100\"\n              label=\"Put your notes*\"\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"note\"\n              multiline={true}\n              value={note}\n              validators={[\"required\"]}\n              errorMessages={[\"this field is required\"]}\n            />\n            <div className=\"mb-16\">\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <Grid container spacing={2}>\n                  <Grid item lg={3} md={4} sm={12} xs={12}>\n                    <KeyboardDatePicker\n                      margin=\"none\"\n                      id=\"mui-pickers-date\"\n                      label=\"Start Date*\"\n                      inputVariant=\"standard\"\n                      type=\"text\"\n                      autoOk={true}\n                      value={new Date(startDate)}\n                      onChange={date =>\n                        this.handleDateChange(\"startDate\", date)\n                      }\n                      KeyboardButtonProps={{\n                        \"aria-label\": \"change date\"\n                      }}\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item lg={3} md={4} sm={12} xs={12}>\n                    <KeyboardDatePicker\n                      margin=\"none\"\n                      id=\"mui-pickers-date\"\n                      label=\"End Date*\"\n                      inputVariant=\"standard\"\n                      type=\"text\"\n                      autoOk={true}\n                      value={new Date(dueDate)}\n                      onChange={date => this.handleDateChange(\"dueDate\", date)}\n                      KeyboardButtonProps={{\n                        \"aria-label\": \"change date\"\n                      }}\n                      fullWidth\n                    />\n                  </Grid>\n                </Grid>\n              </MuiPickersUtilsProvider>\n            </div>\n            <Link to=\"/todo/list\">\n              <Button className=\"mr-16\" type=\"submit\">\n                cancel\n              </Button>\n            </Link>\n            <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n              save\n            </Button>\n          </ValidatorForm>\n        </div>\n        <TagDialog\n          reloadTagList={this.reloadTagList}\n          open={this.state.shouldOpenTagDialog}\n          handleClose={this.handleTagDialogToggle}\n        />\n      </Card>\n    );\n  }\n}\n\nexport default TodoEditor;\n"]},"metadata":{},"sourceType":"module"}