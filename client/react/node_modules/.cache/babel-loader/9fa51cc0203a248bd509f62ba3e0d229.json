{"ast":null,"code":"var _jsxFileName = \"D:\\\\TraniningGlobits\\\\baitap_level2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\GlobitsDatatableMDB\\\\DataTableSelect\\\\DataTableSelect.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DataTableSelect = ({\n  value,\n  onChange,\n  entries,\n  label\n}) => {\n  const getValue = e => {\n    const value = parseInt(e.target.value, 10);\n    onChange(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": \"datatable-select\",\n    className: \"dataTables_length bs-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, label, /*#__PURE__*/React.createElement(\"select\", {\n    value: value,\n    onChange: getValue,\n    className: \"custom-select custom-select-sm form-control form-control-sm\",\n    style: {\n      marginLeft: '.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, entries.map(entry => /*#__PURE__*/React.createElement(\"option\", {\n    key: entry,\n    value: entry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, entry)))));\n};\n\nDataTableSelect.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.number).isRequired,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]).isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.number.isRequired\n};\nexport default DataTableSelect;\nexport { DataTableSelect as MDBDataTableSelect };","map":{"version":3,"sources":["D:/TraniningGlobits/baitap_level2/client/react/src/app/views/GlobitsDatatableMDB/DataTableSelect/DataTableSelect.js"],"names":["React","PropTypes","DataTableSelect","value","onChange","entries","label","getValue","e","parseInt","target","marginLeft","map","entry","propTypes","arrayOf","number","isRequired","oneOfType","string","object","func","MDBDataTableSelect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,OAAnB;AAA4BC,EAAAA;AAA5B,CAAD,KAAyC;AAC/D,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AACpB,UAAML,KAAK,GAAGM,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASP,KAAV,EAAiB,EAAjB,CAAtB;AACAC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAHD;;AAKA,sBACE;AAAK,iBAAU,kBAAf;AAAkC,IAAA,SAAS,EAAC,6BAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,KADH,eAEE;AACE,IAAA,KAAK,EAAEH,KADT;AAEE,IAAA,QAAQ,EAAEI,QAFZ;AAGE,IAAA,SAAS,EAAC,6DAHZ;AAIE,IAAA,KAAK,EAAE;AAAEI,MAAAA,UAAU,EAAE;AAAd,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGN,OAAO,CAACO,GAAR,CAAYC,KAAK,iBAChB;AAAQ,IAAA,GAAG,EAAEA,KAAb;AAAoB,IAAA,KAAK,EAAEA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KADH,CADD,CANH,CAFF,CADF,CADF;AAmBD,CAzBD;;AA2BAX,eAAe,CAACY,SAAhB,GAA4B;AAC1BT,EAAAA,OAAO,EAAEJ,SAAS,CAACc,OAAV,CAAkBd,SAAS,CAACe,MAA5B,EAAoCC,UADnB;AAE1BX,EAAAA,KAAK,EAAEL,SAAS,CAACiB,SAAV,CAAoB,CACzBjB,SAAS,CAACkB,MADe,EAEzBlB,SAAS,CAACe,MAFe,EAGzBf,SAAS,CAACmB,MAHe,CAApB,EAIJH,UANuB;AAO1Bb,EAAAA,QAAQ,EAAEH,SAAS,CAACoB,IAAV,CAAeJ,UAPC;AAQ1Bd,EAAAA,KAAK,EAAEF,SAAS,CAACe,MAAV,CAAiBC;AARE,CAA5B;AAWA,eAAef,eAAf;AACA,SAASA,eAAe,IAAIoB,kBAA5B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DataTableSelect = ({ value, onChange, entries, label }) => {\n  const getValue = e => {\n    const value = parseInt(e.target.value, 10);\n    onChange(value);\n  };\n\n  return (\n    <div data-test='datatable-select' className='dataTables_length bs-select'>\n      <label>\n        {label}\n        <select\n          value={value}\n          onChange={getValue}\n          className='custom-select custom-select-sm form-control form-control-sm'\n          style={{ marginLeft: '.5rem' }}\n        >\n          {entries.map(entry => (\n            <option key={entry} value={entry}>\n              {entry}\n            </option>\n          ))}\n        </select>\n      </label>\n    </div>\n  );\n};\n\nDataTableSelect.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.number).isRequired,\n  label: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object\n  ]).isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.number.isRequired\n};\n\nexport default DataTableSelect;\nexport { DataTableSelect as MDBDataTableSelect };\n"]},"metadata":{},"sourceType":"module"}