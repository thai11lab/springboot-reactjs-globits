(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["react"], factory);
	else if(typeof exports === 'object')
		exports["ReactBootstrapTable2Paginator"] = factory(require("react"));
	else
		root["ReactBootstrapTable2Paginator"] = factory(root["React"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 13);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

if (false) {
  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
    Symbol.for &&
    Symbol.for('react.element')) ||
    0xeac7;

  var isValidElement = function(object) {
    return typeof object === 'object' &&
      object !== null &&
      object.$$typeof === REACT_ELEMENT_TYPE;
  };

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(14)();
}


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  PAGINATION_SIZE: 5,
  PAGE_START_INDEX: 1,
  With_FIRST_AND_LAST: true,
  SHOW_ALL_PAGE_BTNS: false,
  SHOW_TOTAL: false,
  PAGINATION_TOTAL: null,
  FIRST_PAGE_TEXT: '<<',
  PRE_PAGE_TEXT: '<',
  NEXT_PAGE_TEXT: '>',
  LAST_PAGE_TEXT: '>>',
  NEXT_PAGE_TITLE: 'next page',
  LAST_PAGE_TITLE: 'last page',
  PRE_PAGE_TITLE: 'previous page',
  FIRST_PAGE_TITLE: 'first page',
  SIZE_PER_PAGE_LIST: [10, 25, 30, 50],
  HIDE_SIZE_PER_PAGE: false,
  HIDE_PAGE_LIST_ONLY_ONE_PAGE: false
};

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _const = __webpack_require__(2);

var _const2 = _interopRequireDefault(_const);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint no-mixed-operators: 0 */


exports.default = function (ExtendBase) {
  return function (_ExtendBase) {
    _inherits(PageResolver, _ExtendBase);

    function PageResolver() {
      _classCallCheck(this, PageResolver);

      return _possibleConstructorReturn(this, (PageResolver.__proto__ || Object.getPrototypeOf(PageResolver)).apply(this, arguments));
    }

    _createClass(PageResolver, [{
      key: 'backToPrevPage',
      value: function backToPrevPage() {
        var _props = this.props,
            currPage = _props.currPage,
            pageStartIndex = _props.pageStartIndex;

        return currPage - 1 < pageStartIndex ? pageStartIndex : currPage - 1;
      }
    }, {
      key: 'initialState',
      value: function initialState() {
        var totalPages = this.calculateTotalPage();
        var lastPage = this.calculateLastPage(totalPages);
        return { totalPages: totalPages, lastPage: lastPage };
      }
    }, {
      key: 'calculateTotalPage',
      value: function calculateTotalPage() {
        var sizePerPage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.currSizePerPage;
        var dataSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.props.dataSize;

        return Math.ceil(dataSize / sizePerPage);
      }
    }, {
      key: 'calculateLastPage',
      value: function calculateLastPage(totalPages) {
        var pageStartIndex = this.props.pageStartIndex;

        return pageStartIndex + totalPages - 1;
      }
    }, {
      key: 'calculateFromTo',
      value: function calculateFromTo() {
        var _props2 = this.props,
            dataSize = _props2.dataSize,
            currPage = _props2.currPage,
            currSizePerPage = _props2.currSizePerPage,
            pageStartIndex = _props2.pageStartIndex;

        var offset = Math.abs(_const2.default.PAGE_START_INDEX - pageStartIndex);

        var from = (currPage - pageStartIndex) * currSizePerPage;
        from = dataSize === 0 ? 0 : from + 1;
        var to = Math.min(currSizePerPage * (currPage + offset), dataSize);
        if (to > dataSize) to = dataSize;

        return [from, to];
      }
    }, {
      key: 'calculatePages',
      value: function calculatePages(totalPages, lastPage) {
        var _props3 = this.props,
            currPage = _props3.currPage,
            paginationSize = _props3.paginationSize,
            pageStartIndex = _props3.pageStartIndex,
            withFirstAndLast = _props3.withFirstAndLast,
            firstPageText = _props3.firstPageText,
            prePageText = _props3.prePageText,
            nextPageText = _props3.nextPageText,
            lastPageText = _props3.lastPageText,
            alwaysShowAllBtns = _props3.alwaysShowAllBtns;


        var pages = void 0;
        var endPage = totalPages;
        if (endPage <= 0) return [];

        var startPage = Math.max(currPage - Math.floor(paginationSize / 2), pageStartIndex);
        endPage = startPage + paginationSize - 1;

        if (endPage > lastPage) {
          endPage = lastPage;
          startPage = endPage - paginationSize + 1;
        }

        if (startPage !== pageStartIndex && totalPages > paginationSize && withFirstAndLast) {
          pages = [firstPageText, prePageText];
        } else if (totalPages > 1 || alwaysShowAllBtns) {
          pages = [prePageText];
        } else {
          pages = [];
        }

        for (var i = startPage; i <= endPage; i += 1) {
          if (i >= pageStartIndex) pages.push(i);
        }

        if (endPage <= lastPage && pages.length > 1) {
          pages.push(nextPageText);
        }
        if (endPage !== lastPage && withFirstAndLast) {
          pages.push(lastPageText);
        }
        return pages;
      }
    }, {
      key: 'calculatePageStatus',
      value: function calculatePageStatus() {
        var _this2 = this;

        var pages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var lastPage = arguments[1];
        var _props4 = this.props,
            currPage = _props4.currPage,
            pageStartIndex = _props4.pageStartIndex,
            firstPageText = _props4.firstPageText,
            prePageText = _props4.prePageText,
            nextPageText = _props4.nextPageText,
            lastPageText = _props4.lastPageText,
            alwaysShowAllBtns = _props4.alwaysShowAllBtns;

        var isStart = function isStart(page) {
          return currPage === pageStartIndex && (page === firstPageText || page === prePageText);
        };
        var isEnd = function isEnd(page) {
          return currPage === lastPage && (page === nextPageText || page === lastPageText);
        };

        return pages.filter(function (page) {
          if (alwaysShowAllBtns) {
            return true;
          }
          return !(isStart(page) || isEnd(page));
        }).map(function (page) {
          var title = void 0;
          var active = page === currPage;
          var disabled = isStart(page) || isEnd(page);

          if (page === nextPageText) {
            title = _this2.props.nextPageTitle;
          } else if (page === prePageText) {
            title = _this2.props.prePageTitle;
          } else if (page === firstPageText) {
            title = _this2.props.firstPageTitle;
          } else if (page === lastPageText) {
            title = _this2.props.lastPageTitle;
          } else {
            title = '' + page;
          }

          return { page: page, active: active, disabled: disabled, title: title };
        });
      }
    }, {
      key: 'calculateSizePerPageStatus',
      value: function calculateSizePerPageStatus() {
        var sizePerPageList = this.props.sizePerPageList;

        return sizePerPageList.map(function (_sizePerPage) {
          var pageText = typeof _sizePerPage.text !== 'undefined' ? _sizePerPage.text : _sizePerPage;
          var pageNumber = typeof _sizePerPage.value !== 'undefined' ? _sizePerPage.value : _sizePerPage;
          return {
            text: '' + pageText,
            page: pageNumber
          };
        });
      }
    }]);

    return PageResolver;
  }(ExtendBase);
};

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2016 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				classes.push(classNames.apply(null, arg));
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if (typeof module !== 'undefined' && module.exports) {
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
			return classNames;
		}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {
		window.classNames = classNames;
	}
}());


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _pageResolver2 = __webpack_require__(3);

var _pageResolver3 = _interopRequireDefault(_pageResolver2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/prop-types: 0 */


exports.default = function (WrappedComponent) {
  return function (_pageResolver) {
    _inherits(PaginationHandler, _pageResolver);

    function PaginationHandler(props) {
      _classCallCheck(this, PaginationHandler);

      var _this = _possibleConstructorReturn(this, (PaginationHandler.__proto__ || Object.getPrototypeOf(PaginationHandler)).call(this, props));

      _this.handleChangePage = _this.handleChangePage.bind(_this);
      _this.handleChangeSizePerPage = _this.handleChangeSizePerPage.bind(_this);
      _this.state = _this.initialState();
      return _this;
    }

    _createClass(PaginationHandler, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        var dataSize = nextProps.dataSize,
            currSizePerPage = nextProps.currSizePerPage;

        if (currSizePerPage !== this.props.currSizePerPage || dataSize !== this.props.dataSize) {
          var totalPages = this.calculateTotalPage(currSizePerPage, dataSize);
          var lastPage = this.calculateLastPage(totalPages);
          this.setState({ totalPages: totalPages, lastPage: lastPage });
        }
      }
    }, {
      key: 'handleChangeSizePerPage',
      value: function handleChangeSizePerPage(sizePerPage) {
        var _props = this.props,
            currSizePerPage = _props.currSizePerPage,
            onSizePerPageChange = _props.onSizePerPageChange;

        var selectedSize = typeof sizePerPage === 'string' ? parseInt(sizePerPage, 10) : sizePerPage;
        var currPage = this.props.currPage;

        if (selectedSize !== currSizePerPage) {
          var newTotalPages = this.calculateTotalPage(selectedSize);
          var newLastPage = this.calculateLastPage(newTotalPages);
          if (currPage > newLastPage) currPage = newLastPage;
          onSizePerPageChange(selectedSize, currPage);
        }
      }
    }, {
      key: 'handleChangePage',
      value: function handleChangePage(newPage) {
        var page = void 0;
        var _props2 = this.props,
            currPage = _props2.currPage,
            pageStartIndex = _props2.pageStartIndex,
            prePageText = _props2.prePageText,
            nextPageText = _props2.nextPageText,
            lastPageText = _props2.lastPageText,
            firstPageText = _props2.firstPageText,
            onPageChange = _props2.onPageChange;
        var lastPage = this.state.lastPage;


        if (newPage === prePageText) {
          page = this.backToPrevPage();
        } else if (newPage === nextPageText) {
          page = currPage + 1 > lastPage ? lastPage : currPage + 1;
        } else if (newPage === lastPageText) {
          page = lastPage;
        } else if (newPage === firstPageText) {
          page = pageStartIndex;
        } else {
          page = parseInt(newPage, 10);
        }
        if (page !== currPage) {
          onPageChange(page);
        }
      }
    }, {
      key: 'render',
      value: function render() {
        return _react2.default.createElement(WrappedComponent, _extends({}, this.props, {
          lastPage: this.state.lastPage,
          totalPages: this.state.totalPages,
          onPageChange: this.handleChangePage,
          onSizePerPageChange: this.handleChangeSizePerPage
        }));
      }
    }]);

    return PaginationHandler;
  }((0, _pageResolver3.default)(_react.Component));
};

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _const = __webpack_require__(2);

var _const2 = _interopRequireDefault(_const);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/prop-types: 0 */
/* eslint react/require-default-props: 0 */
/* eslint no-lonely-if: 0 */


var StateContext = _react2.default.createContext();

var StateProvider = function (_React$Component) {
  _inherits(StateProvider, _React$Component);

  function StateProvider(props) {
    _classCallCheck(this, StateProvider);

    var _this = _possibleConstructorReturn(this, (StateProvider.__proto__ || Object.getPrototypeOf(StateProvider)).call(this, props));

    _initialiseProps.call(_this);

    _this.handleChangePage = _this.handleChangePage.bind(_this);
    _this.handleChangeSizePerPage = _this.handleChangeSizePerPage.bind(_this);

    var currPage = void 0;
    var currSizePerPage = void 0;
    var options = props.pagination.options;

    var sizePerPageList = options.sizePerPageList || _const2.default.SIZE_PER_PAGE_LIST;

    // initialize current page
    if (typeof options.page !== 'undefined') {
      currPage = options.page;
    } else if (typeof options.pageStartIndex !== 'undefined') {
      currPage = options.pageStartIndex;
    } else {
      currPage = _const2.default.PAGE_START_INDEX;
    }

    // initialize current sizePerPage
    if (typeof options.sizePerPage !== 'undefined') {
      currSizePerPage = options.sizePerPage;
    } else if (_typeof(sizePerPageList[0]) === 'object') {
      currSizePerPage = sizePerPageList[0].value;
    } else {
      currSizePerPage = sizePerPageList[0];
    }

    _this.currPage = currPage;
    _this.currSizePerPage = currSizePerPage;
    return _this;
  }

  _createClass(StateProvider, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var custom = nextProps.pagination.options.custom;

      // user should align the page when the page is not fit to the data size when remote enable

      if (this.isRemotePagination() || custom) {
        this.currPage = nextProps.pagination.options.page;
        this.currSizePerPage = nextProps.pagination.options.sizePerPage;
      }
    }
  }, {
    key: 'handleChangePage',
    value: function handleChangePage(currPage) {
      var currSizePerPage = this.currSizePerPage;
      var options = this.props.pagination.options;


      if (options.onPageChange) {
        options.onPageChange(currPage, currSizePerPage);
      }

      this.currPage = currPage;

      if (this.isRemotePagination()) {
        this.getPaginationRemoteEmitter().emit('paginationChange', currPage, currSizePerPage);
        return;
      }
      this.forceUpdate();
    }
  }, {
    key: 'handleChangeSizePerPage',
    value: function handleChangeSizePerPage(currSizePerPage, currPage) {
      var options = this.props.pagination.options;


      if (options.onSizePerPageChange) {
        options.onSizePerPageChange(currSizePerPage, currPage);
      }

      this.currPage = currPage;
      this.currSizePerPage = currSizePerPage;

      if (this.isRemotePagination()) {
        this.getPaginationRemoteEmitter().emit('paginationChange', currPage, currSizePerPage);
        return;
      }
      this.forceUpdate();
    }
  }, {
    key: 'render',
    value: function render() {
      var paginationProps = this.getPaginationProps();
      var pagination = _extends({}, this.props.pagination, {
        options: paginationProps
      });

      return _react2.default.createElement(
        StateContext.Provider,
        {
          value: {
            paginationProps: paginationProps,
            paginationTableProps: {
              pagination: pagination,
              setPaginationRemoteEmitter: this.setPaginationRemoteEmitter
            }
          }
        },
        this.props.children
      );
    }
  }]);

  return StateProvider;
}(_react2.default.Component);

var _initialiseProps = function _initialiseProps() {
  var _this2 = this;

  this.getPaginationProps = function () {
    var _props = _this2.props,
        options = _props.pagination.options,
        bootstrap4 = _props.bootstrap4;
    var currPage = _this2.currPage,
        currSizePerPage = _this2.currSizePerPage;

    var withFirstAndLast = typeof options.withFirstAndLast === 'undefined' ? _const2.default.With_FIRST_AND_LAST : options.withFirstAndLast;
    var alwaysShowAllBtns = typeof options.alwaysShowAllBtns === 'undefined' ? _const2.default.SHOW_ALL_PAGE_BTNS : options.alwaysShowAllBtns;
    var hideSizePerPage = typeof options.hideSizePerPage === 'undefined' ? _const2.default.HIDE_SIZE_PER_PAGE : options.hideSizePerPage;
    var hidePageListOnlyOnePage = typeof options.hidePageListOnlyOnePage === 'undefined' ? _const2.default.HIDE_PAGE_LIST_ONLY_ONE_PAGE : options.hidePageListOnlyOnePage;
    var pageStartIndex = typeof options.pageStartIndex === 'undefined' ? _const2.default.PAGE_START_INDEX : options.pageStartIndex;
    return _extends({}, options, {
      bootstrap4: bootstrap4,
      page: currPage,
      sizePerPage: currSizePerPage,
      pageStartIndex: pageStartIndex,
      hidePageListOnlyOnePage: hidePageListOnlyOnePage,
      hideSizePerPage: hideSizePerPage,
      alwaysShowAllBtns: alwaysShowAllBtns,
      withFirstAndLast: withFirstAndLast,
      dataSize: options.totalSize,
      sizePerPageList: options.sizePerPageList || _const2.default.SIZE_PER_PAGE_LIST,
      paginationSize: options.paginationSize || _const2.default.PAGINATION_SIZE,
      showTotal: options.showTotal,
      pageListRenderer: options.pageListRenderer,
      pageButtonRenderer: options.pageButtonRenderer,
      sizePerPageRenderer: options.sizePerPageRenderer,
      paginationTotalRenderer: options.paginationTotalRenderer,
      sizePerPageOptionRenderer: options.sizePerPageOptionRenderer,
      firstPageText: options.firstPageText || _const2.default.FIRST_PAGE_TEXT,
      prePageText: options.prePageText || _const2.default.PRE_PAGE_TEXT,
      nextPageText: options.nextPageText || _const2.default.NEXT_PAGE_TEXT,
      lastPageText: options.lastPageText || _const2.default.LAST_PAGE_TEXT,
      prePageTitle: options.prePageTitle || _const2.default.PRE_PAGE_TITLE,
      nextPageTitle: options.nextPageTitle || _const2.default.NEXT_PAGE_TITLE,
      firstPageTitle: options.firstPageTitle || _const2.default.FIRST_PAGE_TITLE,
      lastPageTitle: options.lastPageTitle || _const2.default.LAST_PAGE_TITLE,
      onPageChange: _this2.handleChangePage,
      onSizePerPageChange: _this2.handleChangeSizePerPage
    });
  };

  this.setPaginationRemoteEmitter = function (remoteEmitter) {
    _this2.remoteEmitter = remoteEmitter;
  };

  this.getPaginationRemoteEmitter = function () {
    return _this2.remoteEmitter || _this2.props.remoteEmitter;
  };

  this.isRemotePagination = function () {
    var e = {};
    _this2.remoteEmitter.emit('isRemotePagination', e);
    return e.result;
  };
};

exports.default = function () {
  return {
    Provider: StateProvider,
    Consumer: StateContext.Consumer
  };
};

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BootstrapContext = undefined;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// consider to have a common lib?1
var BootstrapContext = exports.BootstrapContext = _react2.default.createContext({
  bootstrap4: false
});

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SizePerPageDropdownAdapter = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _pageResolver2 = __webpack_require__(3);

var _pageResolver3 = _interopRequireDefault(_pageResolver2);

var _sizePerPageDropdown = __webpack_require__(9);

var _sizePerPageDropdown2 = _interopRequireDefault(_sizePerPageDropdown);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/prop-types: 0 */


var sizePerPageDropdownAdapter = function sizePerPageDropdownAdapter(WrappedComponent) {
  return function (_pageResolver) {
    _inherits(SizePerPageDropdownAdapter, _pageResolver);

    function SizePerPageDropdownAdapter(props) {
      _classCallCheck(this, SizePerPageDropdownAdapter);

      var _this = _possibleConstructorReturn(this, (SizePerPageDropdownAdapter.__proto__ || Object.getPrototypeOf(SizePerPageDropdownAdapter)).call(this, props));

      _this.closeDropDown = _this.closeDropDown.bind(_this);
      _this.toggleDropDown = _this.toggleDropDown.bind(_this);
      _this.handleChangeSizePerPage = _this.handleChangeSizePerPage.bind(_this);
      _this.state = { dropdownOpen: false };
      return _this;
    }

    _createClass(SizePerPageDropdownAdapter, [{
      key: 'toggleDropDown',
      value: function toggleDropDown() {
        var dropdownOpen = !this.state.dropdownOpen;
        this.setState(function () {
          return { dropdownOpen: dropdownOpen };
        });
      }
    }, {
      key: 'closeDropDown',
      value: function closeDropDown() {
        this.setState(function () {
          return { dropdownOpen: false };
        });
      }
    }, {
      key: 'handleChangeSizePerPage',
      value: function handleChangeSizePerPage(sizePerPage) {
        this.props.onSizePerPageChange(sizePerPage);
        this.closeDropDown();
      }
    }, {
      key: 'render',
      value: function render() {
        var _props = this.props,
            sizePerPageList = _props.sizePerPageList,
            currSizePerPage = _props.currSizePerPage,
            hideSizePerPage = _props.hideSizePerPage,
            sizePerPageRenderer = _props.sizePerPageRenderer,
            sizePerPageOptionRenderer = _props.sizePerPageOptionRenderer;
        var open = this.state.dropdownOpen;


        if (sizePerPageList.length > 1 && !hideSizePerPage) {
          if (sizePerPageRenderer) {
            return sizePerPageRenderer({
              options: this.calculateSizePerPageStatus(),
              currSizePerPage: '' + currSizePerPage,
              onSizePerPageChange: this.handleChangeSizePerPage
            });
          }
          return _react2.default.createElement(WrappedComponent, {
            currSizePerPage: '' + currSizePerPage,
            options: this.calculateSizePerPageStatus(),
            optionRenderer: sizePerPageOptionRenderer,
            onSizePerPageChange: this.handleChangeSizePerPage,
            onClick: this.toggleDropDown,
            onBlur: this.closeDropDown,
            open: open
          });
        }
        return null;
      }
    }]);

    return SizePerPageDropdownAdapter;
  }((0, _pageResolver3.default)(_react.Component));
};

var SizePerPageDropdownAdapter = exports.SizePerPageDropdownAdapter = sizePerPageDropdownAdapter(_sizePerPageDropdown2.default);
exports.default = sizePerPageDropdownAdapter;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _bootstrap = __webpack_require__(7);

var _sizePerPageOption = __webpack_require__(20);

var _sizePerPageOption2 = _interopRequireDefault(_sizePerPageOption);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var sizePerPageDefaultClass = 'react-bs-table-sizePerPage-dropdown';

var SizePerPageDropDown = function SizePerPageDropDown(props) {
  var open = props.open,
      hidden = props.hidden,
      onClick = props.onClick,
      onBlur = props.onBlur,
      options = props.options,
      className = props.className,
      variation = props.variation,
      btnContextual = props.btnContextual,
      optionRenderer = props.optionRenderer,
      currSizePerPage = props.currSizePerPage,
      onSizePerPageChange = props.onSizePerPageChange;


  var dropDownStyle = { visibility: hidden ? 'hidden' : 'visible' };
  var openClass = open ? 'open show' : '';
  var dropdownClasses = (0, _classnames2.default)(openClass, sizePerPageDefaultClass, variation, className);

  return _react2.default.createElement(
    _bootstrap.BootstrapContext.Consumer,
    null,
    function (_ref) {
      var bootstrap4 = _ref.bootstrap4;
      return _react2.default.createElement(
        'span',
        {
          style: dropDownStyle,
          className: dropdownClasses
        },
        _react2.default.createElement(
          'button',
          {
            id: 'pageDropDown',
            className: 'btn ' + btnContextual + ' dropdown-toggle',
            'data-toggle': 'dropdown',
            'aria-expanded': open,
            onClick: onClick,
            onBlur: onBlur
          },
          currSizePerPage,
          ' ',
          bootstrap4 ? null : _react2.default.createElement(
            'span',
            null,
            _react2.default.createElement('span', { className: 'caret' })
          )
        ),
        _react2.default.createElement(
          'ul',
          {
            className: 'dropdown-menu ' + openClass,
            role: 'menu',
            'aria-labelledby': 'pageDropDown'
          },
          options.map(function (option) {
            if (optionRenderer) {
              return optionRenderer(_extends({}, option, {
                onSizePerPageChange: onSizePerPageChange
              }));
            }
            return _react2.default.createElement(_sizePerPageOption2.default, _extends({}, option, {
              key: option.text,
              bootstrap4: bootstrap4,
              onSizePerPageChange: onSizePerPageChange
            }));
          })
        )
      );
    }
  );
};

SizePerPageDropDown.propTypes = {
  currSizePerPage: _propTypes2.default.string.isRequired,
  options: _propTypes2.default.array.isRequired,
  onClick: _propTypes2.default.func.isRequired,
  onBlur: _propTypes2.default.func.isRequired,
  onSizePerPageChange: _propTypes2.default.func.isRequired,
  open: _propTypes2.default.bool,
  hidden: _propTypes2.default.bool,
  btnContextual: _propTypes2.default.string,
  variation: _propTypes2.default.oneOf(['dropdown', 'dropup']),
  className: _propTypes2.default.string,
  optionRenderer: _propTypes2.default.func
};
SizePerPageDropDown.defaultProps = {
  open: false,
  hidden: false,
  btnContextual: 'btn-default btn-secondary',
  variation: 'dropdown',
  className: '',
  optionRenderer: null
};

exports.default = SizePerPageDropDown;

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PaginationListWithAdapter = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _pageResolver2 = __webpack_require__(3);

var _pageResolver3 = _interopRequireDefault(_pageResolver2);

var _paginationList = __webpack_require__(11);

var _paginationList2 = _interopRequireDefault(_paginationList);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/prop-types: 0 */


var paginationListAdapter = function paginationListAdapter(WrappedComponent) {
  return function (_pageResolver) {
    _inherits(PaginationListAdapter, _pageResolver);

    function PaginationListAdapter() {
      _classCallCheck(this, PaginationListAdapter);

      return _possibleConstructorReturn(this, (PaginationListAdapter.__proto__ || Object.getPrototypeOf(PaginationListAdapter)).apply(this, arguments));
    }

    _createClass(PaginationListAdapter, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            lastPage = _props.lastPage,
            totalPages = _props.totalPages,
            pageButtonRenderer = _props.pageButtonRenderer,
            onPageChange = _props.onPageChange;

        var pages = this.calculatePageStatus(this.calculatePages(totalPages, lastPage), lastPage);
        return _react2.default.createElement(WrappedComponent, {
          pageButtonRenderer: pageButtonRenderer,
          onPageChange: onPageChange,
          pages: pages
        });
      }
    }]);

    return PaginationListAdapter;
  }((0, _pageResolver3.default)(_react.Component));
};

var PaginationListWithAdapter = exports.PaginationListWithAdapter = paginationListAdapter(_paginationList2.default);
exports.default = paginationListAdapter;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _pageButton = __webpack_require__(21);

var _pageButton2 = _interopRequireDefault(_pageButton);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PaginatonList = function PaginatonList(props) {
  return _react2.default.createElement(
    'ul',
    { className: 'pagination react-bootstrap-table-page-btns-ul' },
    props.pages.map(function (pageProps) {
      if (props.pageButtonRenderer) {
        return props.pageButtonRenderer(_extends({}, pageProps, {
          onPageChange: props.onPageChange
        }));
      }
      return _react2.default.createElement(_pageButton2.default, _extends({
        key: pageProps.page
      }, pageProps, {
        onPageChange: props.onPageChange
      }));
    })
  );
};

PaginatonList.propTypes = {
  pages: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    page: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
    active: _propTypes2.default.bool,
    disable: _propTypes2.default.bool,
    title: _propTypes2.default.string
  })).isRequired,
  onPageChange: _propTypes2.default.func.isRequired,
  pageButtonRenderer: _propTypes2.default.func
};

PaginatonList.defaultProps = {
  pageButtonRenderer: null
};

exports.default = PaginatonList;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /* eslint react/prop-types: 0 */


exports.default = function (WrappedComponent) {
  return function (_ref) {
    var page = _ref.page,
        sizePerPage = _ref.sizePerPage,
        rest = _objectWithoutProperties(_ref, ['page', 'sizePerPage']);

    return _react2.default.createElement(WrappedComponent, _extends({}, rest, {
      currPage: page,
      currSizePerPage: sizePerPage
    }));
  };
};

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SizePerPageDropdownStandalone = exports.PaginationListStandalone = exports.PaginationProvider = undefined;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _stateContext = __webpack_require__(6);

var _stateContext2 = _interopRequireDefault(_stateContext);

var _dataContext = __webpack_require__(18);

var _dataContext2 = _interopRequireDefault(_dataContext);

var _paginationListStandalone = __webpack_require__(24);

var _paginationListStandalone2 = _interopRequireDefault(_paginationListStandalone);

var _sizePerPageDropdownStandalone = __webpack_require__(25);

var _sizePerPageDropdownStandalone2 = _interopRequireDefault(_sizePerPageDropdownStandalone);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return {
    createContext: _dataContext2.default,
    options: options
  };
};

var _createBaseContext = (0, _stateContext2.default)(),
    Provider = _createBaseContext.Provider,
    Consumer = _createBaseContext.Consumer;

var CustomizableProvider = function CustomizableProvider(props) {
  return _react2.default.createElement(
    Provider,
    props,
    _react2.default.createElement(
      Consumer,
      null,
      function (paginationProps) {
        return props.children(paginationProps);
      }
    )
  );
};

CustomizableProvider.propTypes = {
  children: _propTypes2.default.func.isRequired
};

var PaginationProvider = exports.PaginationProvider = CustomizableProvider;
exports.PaginationListStandalone = _paginationListStandalone2.default;
exports.SizePerPageDropdownStandalone = _sizePerPageDropdownStandalone2.default;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



var emptyFunction = __webpack_require__(15);
var invariant = __webpack_require__(16);
var ReactPropTypesSecret = __webpack_require__(17);

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    invariant(
      false,
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if (false) {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _const = __webpack_require__(2);

var _const2 = _interopRequireDefault(_const);

var _bootstrap = __webpack_require__(7);

var _pagination = __webpack_require__(19);

var _pagination2 = _interopRequireDefault(_pagination);

var _page = __webpack_require__(23);

var _stateContext = __webpack_require__(6);

var _stateContext2 = _interopRequireDefault(_stateContext);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/prop-types: 0 */
/* eslint react/require-default-props: 0 */
/* eslint no-lonely-if: 0 */


var _createBaseContext = (0, _stateContext2.default)(),
    Provider = _createBaseContext.Provider;

var PaginationDataContext = _react2.default.createContext();

var PaginationDataProvider = function (_Provider) {
  _inherits(PaginationDataProvider, _Provider);

  function PaginationDataProvider() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, PaginationDataProvider);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PaginationDataProvider.__proto__ || Object.getPrototypeOf(PaginationDataProvider)).call.apply(_ref, [this].concat(args))), _this), _this.isRemotePagination = function () {
      return _this.props.isRemotePagination();
    }, _this.renderDefaultPagination = function () {
      if (!_this.props.pagination.options.custom) {
        var _this$getPaginationPr = _this.getPaginationProps(),
            bootstrap4 = _this$getPaginationPr.bootstrap4,
            currPage = _this$getPaginationPr.page,
            currSizePerPage = _this$getPaginationPr.sizePerPage,
            dataSize = _this$getPaginationPr.dataSize,
            rest = _objectWithoutProperties(_this$getPaginationPr, ['bootstrap4', 'page', 'sizePerPage', 'dataSize']);

        return _react2.default.createElement(
          _bootstrap.BootstrapContext.Provider,
          { value: { bootstrap4: bootstrap4 } },
          _react2.default.createElement(_pagination2.default, _extends({}, rest, {
            key: 'pagination',
            dataSize: dataSize || _this.props.data.length,
            currPage: currPage,
            currSizePerPage: currSizePerPage
          }))
        );
      }
      return null;
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(PaginationDataProvider, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      _get(PaginationDataProvider.prototype.__proto__ || Object.getPrototypeOf(PaginationDataProvider.prototype), 'componentWillReceiveProps', this).call(this, nextProps);
      var currSizePerPage = this.currSizePerPage;
      var _nextProps$pagination = nextProps.pagination.options,
          custom = _nextProps$pagination.custom,
          onPageChange = _nextProps$pagination.onPageChange;


      var pageStartIndex = typeof nextProps.pagination.options.pageStartIndex !== 'undefined' ? nextProps.pagination.options.pageStartIndex : _const2.default.PAGE_START_INDEX;

      // user should align the page when the page is not fit to the data size when remote enable
      if (!this.isRemotePagination() && !custom) {
        var newPage = (0, _page.alignPage)(nextProps.data.length, this.currPage, currSizePerPage, pageStartIndex);

        if (this.currPage !== newPage) {
          if (onPageChange) {
            onPageChange(newPage, currSizePerPage);
          }
          this.currPage = newPage;
        }
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var data = this.props.data;
      var options = this.props.pagination.options;
      var currPage = this.currPage,
          currSizePerPage = this.currSizePerPage;

      var pageStartIndex = typeof options.pageStartIndex === 'undefined' ? _const2.default.PAGE_START_INDEX : options.pageStartIndex;

      data = this.isRemotePagination() ? data : (0, _page.getByCurrPage)(data, currPage, currSizePerPage, pageStartIndex);

      return _react2.default.createElement(
        PaginationDataContext.Provider,
        { value: { data: data, setRemoteEmitter: this.setRemoteEmitter } },
        this.props.children,
        this.renderDefaultPagination()
      );
    }
  }]);

  return PaginationDataProvider;
}(Provider);

PaginationDataProvider.propTypes = {
  data: _propTypes2.default.array.isRequired,
  remoteEmitter: _propTypes2.default.object.isRequired,
  isRemotePagination: _propTypes2.default.func.isRequired
};

exports.default = function () {
  return {
    Provider: PaginationDataProvider,
    Consumer: PaginationDataContext.Consumer
  };
};

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _pageResolver2 = __webpack_require__(3);

var _pageResolver3 = _interopRequireDefault(_pageResolver2);

var _paginationHandler = __webpack_require__(5);

var _paginationHandler2 = _interopRequireDefault(_paginationHandler);

var _sizePerPageDropdownAdapter = __webpack_require__(8);

var _paginationListAdapter = __webpack_require__(10);

var _paginationTotal = __webpack_require__(22);

var _paginationTotal2 = _interopRequireDefault(_paginationTotal);

var _const = __webpack_require__(2);

var _const2 = _interopRequireDefault(_const);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/require-default-props: 0 */
/* eslint arrow-body-style: 0 */


var Pagination = function (_pageResolver) {
  _inherits(Pagination, _pageResolver);

  function Pagination() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Pagination);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Pagination.__proto__ || Object.getPrototypeOf(Pagination)).call.apply(_ref, [this].concat(args))), _this), _this.defaultTotal = function (from, to, size) {
      return _react2.default.createElement(_paginationTotal2.default, {
        from: from,
        to: to,
        dataSize: size
      });
    }, _this.setTotal = function (from, to, size, total) {
      if (total && typeof total === 'function') {
        return total(from, to, size);
      }

      return _this.defaultTotal(from, to, size);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Pagination, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          showTotal = _props.showTotal,
          dataSize = _props.dataSize,
          pageListRenderer = _props.pageListRenderer,
          pageButtonRenderer = _props.pageButtonRenderer,
          paginationTotalRenderer = _props.paginationTotalRenderer,
          hidePageListOnlyOnePage = _props.hidePageListOnlyOnePage,
          totalPages = _props.totalPages,
          lastPage = _props.lastPage,
          onPageChange = _props.onPageChange,
          sizePerPageList = _props.sizePerPageList,
          currSizePerPage = _props.currSizePerPage,
          hideSizePerPage = _props.hideSizePerPage,
          sizePerPageRenderer = _props.sizePerPageRenderer,
          sizePerPageOptionRenderer = _props.sizePerPageOptionRenderer,
          onSizePerPageChange = _props.onSizePerPageChange,
          rest = _objectWithoutProperties(_props, ['showTotal', 'dataSize', 'pageListRenderer', 'pageButtonRenderer', 'paginationTotalRenderer', 'hidePageListOnlyOnePage', 'totalPages', 'lastPage', 'onPageChange', 'sizePerPageList', 'currSizePerPage', 'hideSizePerPage', 'sizePerPageRenderer', 'sizePerPageOptionRenderer', 'onSizePerPageChange']);

      var pages = this.calculatePageStatus(this.calculatePages(totalPages, lastPage), lastPage);

      var _calculateFromTo = this.calculateFromTo(),
          _calculateFromTo2 = _slicedToArray(_calculateFromTo, 2),
          from = _calculateFromTo2[0],
          to = _calculateFromTo2[1];

      var pageListClass = (0, _classnames2.default)('react-bootstrap-table-pagination-list', 'col-md-6 col-xs-6 col-sm-6 col-lg-6', {
        'react-bootstrap-table-pagination-list-hidden': hidePageListOnlyOnePage && totalPages === 1
      });
      return _react2.default.createElement(
        'div',
        { className: 'row react-bootstrap-table-pagination' },
        _react2.default.createElement(
          'div',
          { className: 'col-md-6 col-xs-6 col-sm-6 col-lg-6' },
          _react2.default.createElement(_sizePerPageDropdownAdapter.SizePerPageDropdownAdapter, {
            sizePerPageList: sizePerPageList,
            currSizePerPage: currSizePerPage,
            hideSizePerPage: hideSizePerPage,
            sizePerPageRenderer: sizePerPageRenderer,
            sizePerPageOptionRenderer: sizePerPageOptionRenderer,
            onSizePerPageChange: onSizePerPageChange
          }),
          showTotal ? this.setTotal(from, to, dataSize, paginationTotalRenderer) : null
        ),
        pageListRenderer ? pageListRenderer({
          pages: pages,
          onPageChange: onPageChange
        }) : _react2.default.createElement(
          'div',
          { className: pageListClass },
          _react2.default.createElement(_paginationListAdapter.PaginationListWithAdapter, _extends({}, rest, {
            lastPage: lastPage,
            totalPages: totalPages,
            pageButtonRenderer: pageButtonRenderer,
            onPageChange: onPageChange
          }))
        )
      );
    }
  }]);

  return Pagination;
}((0, _pageResolver3.default)(_react.Component));

Pagination.propTypes = {
  dataSize: _propTypes2.default.number.isRequired,
  sizePerPageList: _propTypes2.default.array.isRequired,
  currPage: _propTypes2.default.number.isRequired,
  currSizePerPage: _propTypes2.default.number.isRequired,
  onPageChange: _propTypes2.default.func.isRequired,
  onSizePerPageChange: _propTypes2.default.func.isRequired,
  pageStartIndex: _propTypes2.default.number,
  paginationSize: _propTypes2.default.number,
  showTotal: _propTypes2.default.bool,
  pageListRenderer: _propTypes2.default.func,
  pageButtonRenderer: _propTypes2.default.func,
  sizePerPageRenderer: _propTypes2.default.func,
  paginationTotalRenderer: _propTypes2.default.func,
  sizePerPageOptionRenderer: _propTypes2.default.func,
  firstPageText: _propTypes2.default.string,
  prePageText: _propTypes2.default.string,
  nextPageText: _propTypes2.default.string,
  lastPageText: _propTypes2.default.string,
  nextPageTitle: _propTypes2.default.string,
  prePageTitle: _propTypes2.default.string,
  firstPageTitle: _propTypes2.default.string,
  lastPageTitle: _propTypes2.default.string,
  withFirstAndLast: _propTypes2.default.bool,
  alwaysShowAllBtns: _propTypes2.default.bool,
  hideSizePerPage: _propTypes2.default.bool,
  hidePageListOnlyOnePage: _propTypes2.default.bool
};

Pagination.defaultProps = {
  pageStartIndex: _const2.default.PAGE_START_INDEX,
  paginationSize: _const2.default.PAGINATION_SIZE,
  withFirstAndLast: _const2.default.With_FIRST_AND_LAST,
  alwaysShowAllBtns: _const2.default.SHOW_ALL_PAGE_BTNS,
  showTotal: _const2.default.SHOW_TOTAL,
  pageListRenderer: null,
  pageButtonRenderer: null,
  sizePerPageRenderer: null,
  paginationTotalRenderer: _const2.default.PAGINATION_TOTAL,
  sizePerPageOptionRenderer: null,
  firstPageText: _const2.default.FIRST_PAGE_TEXT,
  prePageText: _const2.default.PRE_PAGE_TEXT,
  nextPageText: _const2.default.NEXT_PAGE_TEXT,
  lastPageText: _const2.default.LAST_PAGE_TEXT,
  sizePerPageList: _const2.default.SIZE_PER_PAGE_LIST,
  nextPageTitle: _const2.default.NEXT_PAGE_TITLE,
  prePageTitle: _const2.default.PRE_PAGE_TITLE,
  firstPageTitle: _const2.default.FIRST_PAGE_TITLE,
  lastPageTitle: _const2.default.LAST_PAGE_TITLE,
  hideSizePerPage: _const2.default.HIDE_SIZE_PER_PAGE,
  hidePageListOnlyOnePage: _const2.default.HIDE_PAGE_LIST_ONLY_ONE_PAGE
};

exports.default = (0, _paginationHandler2.default)(Pagination);

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint jsx-a11y/href-no-hash: 0 */
var SizePerPageOption = function SizePerPageOption(_ref) {
  var text = _ref.text,
      page = _ref.page,
      onSizePerPageChange = _ref.onSizePerPageChange,
      bootstrap4 = _ref.bootstrap4;
  return bootstrap4 ? _react2.default.createElement(
    'a',
    {
      href: '#',
      tabIndex: '-1',
      role: 'menuitem',
      className: 'dropdown-item',
      'data-page': page,
      onMouseDown: function onMouseDown(e) {
        e.preventDefault();
        onSizePerPageChange(page);
      }
    },
    text
  ) : _react2.default.createElement(
    'li',
    {
      key: text,
      role: 'presentation',
      className: 'dropdown-item'
    },
    _react2.default.createElement(
      'a',
      {
        href: '#',
        tabIndex: '-1',
        role: 'menuitem',
        'data-page': page,
        onMouseDown: function onMouseDown(e) {
          e.preventDefault();
          onSizePerPageChange(page);
        }
      },
      text
    )
  );
};

SizePerPageOption.propTypes = {
  text: _propTypes2.default.string.isRequired,
  page: _propTypes2.default.number.isRequired,
  onSizePerPageChange: _propTypes2.default.func.isRequired,
  bootstrap4: _propTypes2.default.bool
};

SizePerPageOption.defaultProps = {
  bootstrap4: false
};

exports.default = SizePerPageOption;

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/require-default-props: 0 */
/* eslint jsx-a11y/href-no-hash: 0 */


var PageButton = function (_Component) {
  _inherits(PageButton, _Component);

  function PageButton(props) {
    _classCallCheck(this, PageButton);

    var _this = _possibleConstructorReturn(this, (PageButton.__proto__ || Object.getPrototypeOf(PageButton)).call(this, props));

    _this.handleClick = _this.handleClick.bind(_this);
    return _this;
  }

  _createClass(PageButton, [{
    key: 'handleClick',
    value: function handleClick(e) {
      e.preventDefault();
      this.props.onPageChange(this.props.page);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          page = _props.page,
          title = _props.title,
          active = _props.active,
          disabled = _props.disabled,
          className = _props.className;

      var classes = (0, _classnames2.default)({
        active: active,
        disabled: disabled,
        'page-item': true
      }, className);

      return _react2.default.createElement(
        'li',
        { className: classes, title: title },
        _react2.default.createElement(
          'a',
          { href: '#', onClick: this.handleClick, className: 'page-link' },
          page
        )
      );
    }
  }]);

  return PageButton;
}(_react.Component);

PageButton.propTypes = {
  onPageChange: _propTypes2.default.func.isRequired,
  page: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]).isRequired,
  active: _propTypes2.default.bool.isRequired,
  disabled: _propTypes2.default.bool.isRequired,
  className: _propTypes2.default.string,
  title: _propTypes2.default.string
};

exports.default = PageButton;

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PaginationTotal = function PaginationTotal(props) {
  return _react2.default.createElement(
    'span',
    { className: 'react-bootstrap-table-pagination-total' },
    '\xA0Showing rows ',
    props.from,
    ' to\xA0',
    props.to,
    ' of\xA0',
    props.dataSize
  );
};

PaginationTotal.propTypes = {
  from: _propTypes2.default.number.isRequired,
  to: _propTypes2.default.number.isRequired,
  dataSize: _propTypes2.default.number.isRequired
};

exports.default = PaginationTotal;

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var getNormalizedPage = function getNormalizedPage(page, pageStartIndex) {
  var offset = Math.abs(1 - pageStartIndex);
  return page + offset;
};

var endIndex = function endIndex(page, sizePerPage, pageStartIndex) {
  return getNormalizedPage(page, pageStartIndex) * sizePerPage - 1;
};

var startIndex = function startIndex(end, sizePerPage) {
  return end - (sizePerPage - 1);
};

var alignPage = exports.alignPage = function alignPage(dataSize, page, sizePerPage, pageStartIndex) {
  if (page < pageStartIndex || page > Math.floor(dataSize / sizePerPage) + pageStartIndex) {
    return pageStartIndex;
  }
  return page;
};

var getByCurrPage = exports.getByCurrPage = function getByCurrPage(data, page, sizePerPage, pageStartIndex) {
  var dataSize = data.length;
  if (!dataSize) return [];

  var end = endIndex(page, sizePerPage, pageStartIndex);
  var start = startIndex(end, sizePerPage);

  var result = [];
  for (var i = start; i <= end; i += 1) {
    result.push(data[i]);
    if (i + 1 === dataSize) break;
  }
  return result;
};

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _paginationList = __webpack_require__(11);

var _paginationList2 = _interopRequireDefault(_paginationList);

var _standaloneAdapter = __webpack_require__(12);

var _standaloneAdapter2 = _interopRequireDefault(_standaloneAdapter);

var _paginationHandler = __webpack_require__(5);

var _paginationHandler2 = _interopRequireDefault(_paginationHandler);

var _paginationListAdapter = __webpack_require__(10);

var _paginationListAdapter2 = _interopRequireDefault(_paginationListAdapter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PaginationListStandalone = function PaginationListStandalone(props) {
  return _react2.default.createElement(_paginationList2.default, props);
};

exports.default = (0, _standaloneAdapter2.default)((0, _paginationHandler2.default)((0, _paginationListAdapter2.default)(PaginationListStandalone)));

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _sizePerPageDropdown = __webpack_require__(9);

var _sizePerPageDropdown2 = _interopRequireDefault(_sizePerPageDropdown);

var _standaloneAdapter = __webpack_require__(12);

var _standaloneAdapter2 = _interopRequireDefault(_standaloneAdapter);

var _paginationHandler = __webpack_require__(5);

var _paginationHandler2 = _interopRequireDefault(_paginationHandler);

var _sizePerPageDropdownAdapter = __webpack_require__(8);

var _sizePerPageDropdownAdapter2 = _interopRequireDefault(_sizePerPageDropdownAdapter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SizePerPageDropdownStandalone = function SizePerPageDropdownStandalone(props) {
  return _react2.default.createElement(_sizePerPageDropdown2.default, props);
};

exports.default = (0, _standaloneAdapter2.default)((0, _paginationHandler2.default)((0, _sizePerPageDropdownAdapter2.default)(SizePerPageDropdownStandalone)));

/***/ })
/******/ ]);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwid2VicGFjazovLy93ZWJwYWNrL2Jvb3RzdHJhcCBiOTE0ZWE2NjZjMDY5MGQ0OTM3NiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiUmVhY3RcIixcImNvbW1vbmpzMlwiOlwicmVhY3RcIixcImNvbW1vbmpzXCI6XCJyZWFjdFwiLFwiYW1kXCI6XCJyZWFjdFwifSIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvY29uc3QuanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2UtcmVzb2x2ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NsYXNzbmFtZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2luYXRpb24taGFuZGxlci5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvc3RhdGUtY29udGV4dC5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvYm9vdHN0cmFwLmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9zaXplLXBlci1wYWdlLWRyb3Bkb3duLWFkYXB0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3NpemUtcGVyLXBhZ2UtZHJvcGRvd24uanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2luYXRpb24tbGlzdC1hZGFwdGVyLmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9wYWdpbmF0aW9uLWxpc3QuanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3N0YW5kYWxvbmUtYWRhcHRlci5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2VtcHR5RnVuY3Rpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2ludmFyaWFudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL2RhdGEtY29udGV4dC5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvcGFnaW5hdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvc2l6ZS1wZXItcGFnZS1vcHRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2UtYnV0dG9uLmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9wYWdpbmF0aW9uLXRvdGFsLmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9wYWdlLmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9wYWdpbmF0aW9uLWxpc3Qtc3RhbmRhbG9uZS5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvc2l6ZS1wZXItcGFnZS1kcm9wZG93bi1zdGFuZGFsb25lLmpzIl0sIm5hbWVzIjpbIlBBR0lOQVRJT05fU0laRSIsIlBBR0VfU1RBUlRfSU5ERVgiLCJXaXRoX0ZJUlNUX0FORF9MQVNUIiwiU0hPV19BTExfUEFHRV9CVE5TIiwiU0hPV19UT1RBTCIsIlBBR0lOQVRJT05fVE9UQUwiLCJGSVJTVF9QQUdFX1RFWFQiLCJQUkVfUEFHRV9URVhUIiwiTkVYVF9QQUdFX1RFWFQiLCJMQVNUX1BBR0VfVEVYVCIsIk5FWFRfUEFHRV9USVRMRSIsIkxBU1RfUEFHRV9USVRMRSIsIlBSRV9QQUdFX1RJVExFIiwiRklSU1RfUEFHRV9USVRMRSIsIlNJWkVfUEVSX1BBR0VfTElTVCIsIkhJREVfU0laRV9QRVJfUEFHRSIsIkhJREVfUEFHRV9MSVNUX09OTFlfT05FX1BBR0UiLCJwcm9wcyIsImN1cnJQYWdlIiwicGFnZVN0YXJ0SW5kZXgiLCJ0b3RhbFBhZ2VzIiwiY2FsY3VsYXRlVG90YWxQYWdlIiwibGFzdFBhZ2UiLCJjYWxjdWxhdGVMYXN0UGFnZSIsInNpemVQZXJQYWdlIiwiY3VyclNpemVQZXJQYWdlIiwiZGF0YVNpemUiLCJNYXRoIiwiY2VpbCIsIm9mZnNldCIsImFicyIsImZyb20iLCJ0byIsIm1pbiIsInBhZ2luYXRpb25TaXplIiwid2l0aEZpcnN0QW5kTGFzdCIsImZpcnN0UGFnZVRleHQiLCJwcmVQYWdlVGV4dCIsIm5leHRQYWdlVGV4dCIsImxhc3RQYWdlVGV4dCIsImFsd2F5c1Nob3dBbGxCdG5zIiwicGFnZXMiLCJlbmRQYWdlIiwic3RhcnRQYWdlIiwibWF4IiwiZmxvb3IiLCJpIiwicHVzaCIsImxlbmd0aCIsImlzU3RhcnQiLCJwYWdlIiwiaXNFbmQiLCJmaWx0ZXIiLCJtYXAiLCJ0aXRsZSIsImFjdGl2ZSIsImRpc2FibGVkIiwibmV4dFBhZ2VUaXRsZSIsInByZVBhZ2VUaXRsZSIsImZpcnN0UGFnZVRpdGxlIiwibGFzdFBhZ2VUaXRsZSIsInNpemVQZXJQYWdlTGlzdCIsIl9zaXplUGVyUGFnZSIsInBhZ2VUZXh0IiwidGV4dCIsInBhZ2VOdW1iZXIiLCJ2YWx1ZSIsIkV4dGVuZEJhc2UiLCJoYW5kbGVDaGFuZ2VQYWdlIiwiYmluZCIsImhhbmRsZUNoYW5nZVNpemVQZXJQYWdlIiwic3RhdGUiLCJpbml0aWFsU3RhdGUiLCJuZXh0UHJvcHMiLCJzZXRTdGF0ZSIsIm9uU2l6ZVBlclBhZ2VDaGFuZ2UiLCJzZWxlY3RlZFNpemUiLCJwYXJzZUludCIsIm5ld1RvdGFsUGFnZXMiLCJuZXdMYXN0UGFnZSIsIm5ld1BhZ2UiLCJvblBhZ2VDaGFuZ2UiLCJiYWNrVG9QcmV2UGFnZSIsIlN0YXRlQ29udGV4dCIsImNyZWF0ZUNvbnRleHQiLCJTdGF0ZVByb3ZpZGVyIiwib3B0aW9ucyIsInBhZ2luYXRpb24iLCJjdXN0b20iLCJpc1JlbW90ZVBhZ2luYXRpb24iLCJnZXRQYWdpbmF0aW9uUmVtb3RlRW1pdHRlciIsImVtaXQiLCJmb3JjZVVwZGF0ZSIsInBhZ2luYXRpb25Qcm9wcyIsImdldFBhZ2luYXRpb25Qcm9wcyIsInBhZ2luYXRpb25UYWJsZVByb3BzIiwic2V0UGFnaW5hdGlvblJlbW90ZUVtaXR0ZXIiLCJjaGlsZHJlbiIsIkNvbXBvbmVudCIsImJvb3RzdHJhcDQiLCJoaWRlU2l6ZVBlclBhZ2UiLCJoaWRlUGFnZUxpc3RPbmx5T25lUGFnZSIsInRvdGFsU2l6ZSIsInNob3dUb3RhbCIsInBhZ2VMaXN0UmVuZGVyZXIiLCJwYWdlQnV0dG9uUmVuZGVyZXIiLCJzaXplUGVyUGFnZVJlbmRlcmVyIiwicGFnaW5hdGlvblRvdGFsUmVuZGVyZXIiLCJzaXplUGVyUGFnZU9wdGlvblJlbmRlcmVyIiwicmVtb3RlRW1pdHRlciIsImUiLCJyZXN1bHQiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiQm9vdHN0cmFwQ29udGV4dCIsInNpemVQZXJQYWdlRHJvcGRvd25BZGFwdGVyIiwiY2xvc2VEcm9wRG93biIsInRvZ2dsZURyb3BEb3duIiwiZHJvcGRvd25PcGVuIiwib3BlbiIsImNhbGN1bGF0ZVNpemVQZXJQYWdlU3RhdHVzIiwiU2l6ZVBlclBhZ2VEcm9wZG93bkFkYXB0ZXIiLCJzaXplUGVyUGFnZURlZmF1bHRDbGFzcyIsIlNpemVQZXJQYWdlRHJvcERvd24iLCJoaWRkZW4iLCJvbkNsaWNrIiwib25CbHVyIiwiY2xhc3NOYW1lIiwidmFyaWF0aW9uIiwiYnRuQ29udGV4dHVhbCIsIm9wdGlvblJlbmRlcmVyIiwiZHJvcERvd25TdHlsZSIsInZpc2liaWxpdHkiLCJvcGVuQ2xhc3MiLCJkcm9wZG93bkNsYXNzZXMiLCJvcHRpb24iLCJwcm9wVHlwZXMiLCJzdHJpbmciLCJpc1JlcXVpcmVkIiwiYXJyYXkiLCJmdW5jIiwiYm9vbCIsIm9uZU9mIiwiZGVmYXVsdFByb3BzIiwicGFnaW5hdGlvbkxpc3RBZGFwdGVyIiwiY2FsY3VsYXRlUGFnZVN0YXR1cyIsImNhbGN1bGF0ZVBhZ2VzIiwiUGFnaW5hdGlvbkxpc3RXaXRoQWRhcHRlciIsIlBhZ2luYXRvbkxpc3QiLCJwYWdlUHJvcHMiLCJhcnJheU9mIiwic2hhcGUiLCJvbmVPZlR5cGUiLCJudW1iZXIiLCJkaXNhYmxlIiwicmVzdCIsIkN1c3RvbWl6YWJsZVByb3ZpZGVyIiwiUGFnaW5hdGlvblByb3ZpZGVyIiwiUGFnaW5hdGlvbkxpc3RTdGFuZGFsb25lIiwiU2l6ZVBlclBhZ2VEcm9wZG93blN0YW5kYWxvbmUiLCJQYWdpbmF0aW9uRGF0YUNvbnRleHQiLCJQYWdpbmF0aW9uRGF0YVByb3ZpZGVyIiwicmVuZGVyRGVmYXVsdFBhZ2luYXRpb24iLCJkYXRhIiwic2V0UmVtb3RlRW1pdHRlciIsIm9iamVjdCIsIlBhZ2luYXRpb24iLCJkZWZhdWx0VG90YWwiLCJzaXplIiwic2V0VG90YWwiLCJ0b3RhbCIsImNhbGN1bGF0ZUZyb21UbyIsInBhZ2VMaXN0Q2xhc3MiLCJTaXplUGVyUGFnZU9wdGlvbiIsInByZXZlbnREZWZhdWx0IiwiUGFnZUJ1dHRvbiIsImhhbmRsZUNsaWNrIiwiY2xhc3NlcyIsIlBhZ2luYXRpb25Ub3RhbCIsImdldE5vcm1hbGl6ZWRQYWdlIiwiZW5kSW5kZXgiLCJzdGFydEluZGV4IiwiZW5kIiwiYWxpZ25QYWdlIiwiZ2V0QnlDdXJyUGFnZSIsInN0YXJ0Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsTztBQ1ZBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBMkIsMEJBQTBCLEVBQUU7QUFDdkQseUNBQWlDLGVBQWU7QUFDaEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOERBQXNELCtEQUErRDs7QUFFckg7QUFDQTs7QUFFQTtBQUNBOzs7Ozs7O0FDN0RBLCtDOzs7Ozs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTs7Ozs7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TStDLDJCQUEyQixTQUEzQkEsd0JBQTJCO0FBQUEsU0FDL0Isd0RBQXFCN0ksS0FBckIsQ0FEK0I7QUFBQSxDQUFqQzs7a0JBS0EsaUNBQWtCLGlDQUFrQixxQ0FBc0I2SSx3QkFBdEIsQ0FBbEIsQ0FBbEIsQzs7Ozs7Ozs7Ozs7OztBQ1hBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBLElBQU1DLGdDQUFnQyxTQUFoQ0EsNkJBQWdDO0FBQUEsU0FDcEMsNkRBQTBCOUksS0FBMUIsQ0FEb0M7QUFBQSxDQUF0Qzs7a0JBS0EsaUNBQWtCLGlDQUFrQiwwQ0FBMkI4SSw2QkFBM0IsQ0FBbEIsQ0FBbEIsQyIsImZpbGUiOiJyZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9kaXN0L3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIHdlYnBhY2tVbml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblx0aWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKVxuXHRcdG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShyZXF1aXJlKFwicmVhY3RcIikpO1xuXHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRkZWZpbmUoW1wicmVhY3RcIl0sIGZhY3RvcnkpO1xuXHRlbHNlIGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jylcblx0XHRleHBvcnRzW1wiUmVhY3RCb290c3RyYXBUYWJsZTJQYWdpbmF0b3JcIl0gPSBmYWN0b3J5KHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5cdGVsc2Vcblx0XHRyb290W1wiUmVhY3RCb290c3RyYXBUYWJsZTJQYWdpbmF0b3JcIl0gPSBmYWN0b3J5KHJvb3RbXCJSZWFjdFwiXSk7XG59KSh0aGlzLCBmdW5jdGlvbihfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzBfXykge1xucmV0dXJuIFxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrL3VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24iLCIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcbiBcdFx0XHRcdGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gXHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuIFx0XHRcdFx0Z2V0OiBnZXR0ZXJcbiBcdFx0XHR9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAxMyk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gd2VicGFjay9ib290c3RyYXAgYjkxNGVhNjY2YzA2OTBkNDkzNzYiLCJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfMF9fO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIHtcInJvb3RcIjpcIlJlYWN0XCIsXCJjb21tb25qczJcIjpcInJlYWN0XCIsXCJjb21tb25qc1wiOlwicmVhY3RcIixcImFtZFwiOlwicmVhY3RcIn1cbi8vIG1vZHVsZSBpZCA9IDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCIvKipcbiAqIENvcHlyaWdodCAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUkVBQ1RfRUxFTUVOVF9UWVBFID0gKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiZcbiAgICBTeW1ib2wuZm9yICYmXG4gICAgU3ltYm9sLmZvcigncmVhY3QuZWxlbWVudCcpKSB8fFxuICAgIDB4ZWFjNztcblxuICB2YXIgaXNWYWxpZEVsZW1lbnQgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiZcbiAgICAgIG9iamVjdCAhPT0gbnVsbCAmJlxuICAgICAgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG4gIH07XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShpc1ZhbGlkRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSIsImV4cG9ydCBkZWZhdWx0IHtcbiAgUEFHSU5BVElPTl9TSVpFOiA1LFxuICBQQUdFX1NUQVJUX0lOREVYOiAxLFxuICBXaXRoX0ZJUlNUX0FORF9MQVNUOiB0cnVlLFxuICBTSE9XX0FMTF9QQUdFX0JUTlM6IGZhbHNlLFxuICBTSE9XX1RPVEFMOiBmYWxzZSxcbiAgUEFHSU5BVElPTl9UT1RBTDogbnVsbCxcbiAgRklSU1RfUEFHRV9URVhUOiAnPDwnLFxuICBQUkVfUEFHRV9URVhUOiAnPCcsXG4gIE5FWFRfUEFHRV9URVhUOiAnPicsXG4gIExBU1RfUEFHRV9URVhUOiAnPj4nLFxuICBORVhUX1BBR0VfVElUTEU6ICduZXh0IHBhZ2UnLFxuICBMQVNUX1BBR0VfVElUTEU6ICdsYXN0IHBhZ2UnLFxuICBQUkVfUEFHRV9USVRMRTogJ3ByZXZpb3VzIHBhZ2UnLFxuICBGSVJTVF9QQUdFX1RJVExFOiAnZmlyc3QgcGFnZScsXG4gIFNJWkVfUEVSX1BBR0VfTElTVDogWzEwLCAyNSwgMzAsIDUwXSxcbiAgSElERV9TSVpFX1BFUl9QQUdFOiBmYWxzZSxcbiAgSElERV9QQUdFX0xJU1RfT05MWV9PTkVfUEFHRTogZmFsc2Vcbn07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvY29uc3QuanMiLCIvKiBlc2xpbnQgbm8tbWl4ZWQtb3BlcmF0b3JzOiAwICovXG5pbXBvcnQgQ29uc3QgZnJvbSAnLi9jb25zdCc7XG5cbmV4cG9ydCBkZWZhdWx0IEV4dGVuZEJhc2UgPT5cbiAgY2xhc3MgUGFnZVJlc29sdmVyIGV4dGVuZHMgRXh0ZW5kQmFzZSB7XG4gICAgYmFja1RvUHJldlBhZ2UoKSB7XG4gICAgICBjb25zdCB7IGN1cnJQYWdlLCBwYWdlU3RhcnRJbmRleCB9ID0gdGhpcy5wcm9wcztcbiAgICAgIHJldHVybiAoY3VyclBhZ2UgLSAxKSA8IHBhZ2VTdGFydEluZGV4ID8gcGFnZVN0YXJ0SW5kZXggOiBjdXJyUGFnZSAtIDE7XG4gICAgfVxuXG4gICAgaW5pdGlhbFN0YXRlKCkge1xuICAgICAgY29uc3QgdG90YWxQYWdlcyA9IHRoaXMuY2FsY3VsYXRlVG90YWxQYWdlKCk7XG4gICAgICBjb25zdCBsYXN0UGFnZSA9IHRoaXMuY2FsY3VsYXRlTGFzdFBhZ2UodG90YWxQYWdlcyk7XG4gICAgICByZXR1cm4geyB0b3RhbFBhZ2VzLCBsYXN0UGFnZSB9O1xuICAgIH1cblxuICAgIGNhbGN1bGF0ZVRvdGFsUGFnZShzaXplUGVyUGFnZSA9IHRoaXMucHJvcHMuY3VyclNpemVQZXJQYWdlLCBkYXRhU2l6ZSA9IHRoaXMucHJvcHMuZGF0YVNpemUpIHtcbiAgICAgIHJldHVybiBNYXRoLmNlaWwoZGF0YVNpemUgLyBzaXplUGVyUGFnZSk7XG4gICAgfVxuXG4gICAgY2FsY3VsYXRlTGFzdFBhZ2UodG90YWxQYWdlcykge1xuICAgICAgY29uc3QgeyBwYWdlU3RhcnRJbmRleCB9ID0gdGhpcy5wcm9wcztcbiAgICAgIHJldHVybiBwYWdlU3RhcnRJbmRleCArIHRvdGFsUGFnZXMgLSAxO1xuICAgIH1cblxuICAgIGNhbGN1bGF0ZUZyb21UbygpIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgZGF0YVNpemUsXG4gICAgICAgIGN1cnJQYWdlLFxuICAgICAgICBjdXJyU2l6ZVBlclBhZ2UsXG4gICAgICAgIHBhZ2VTdGFydEluZGV4XG4gICAgICB9ID0gdGhpcy5wcm9wcztcbiAgICAgIGNvbnN0IG9mZnNldCA9IE1hdGguYWJzKENvbnN0LlBBR0VfU1RBUlRfSU5ERVggLSBwYWdlU3RhcnRJbmRleCk7XG5cbiAgICAgIGxldCBmcm9tID0gKChjdXJyUGFnZSAtIHBhZ2VTdGFydEluZGV4KSAqIGN1cnJTaXplUGVyUGFnZSk7XG4gICAgICBmcm9tID0gZGF0YVNpemUgPT09IDAgPyAwIDogZnJvbSArIDE7XG4gICAgICBsZXQgdG8gPSBNYXRoLm1pbihjdXJyU2l6ZVBlclBhZ2UgKiAoY3VyclBhZ2UgKyBvZmZzZXQpLCBkYXRhU2l6ZSk7XG4gICAgICBpZiAodG8gPiBkYXRhU2l6ZSkgdG8gPSBkYXRhU2l6ZTtcblxuICAgICAgcmV0dXJuIFtmcm9tLCB0b107XG4gICAgfVxuXG4gICAgY2FsY3VsYXRlUGFnZXMoXG4gICAgICB0b3RhbFBhZ2VzLFxuICAgICAgbGFzdFBhZ2VcbiAgICApIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgY3VyclBhZ2UsXG4gICAgICAgIHBhZ2luYXRpb25TaXplLFxuICAgICAgICBwYWdlU3RhcnRJbmRleCxcbiAgICAgICAgd2l0aEZpcnN0QW5kTGFzdCxcbiAgICAgICAgZmlyc3RQYWdlVGV4dCxcbiAgICAgICAgcHJlUGFnZVRleHQsXG4gICAgICAgIG5leHRQYWdlVGV4dCxcbiAgICAgICAgbGFzdFBhZ2VUZXh0LFxuICAgICAgICBhbHdheXNTaG93QWxsQnRuc1xuICAgICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIGxldCBwYWdlcztcbiAgICAgIGxldCBlbmRQYWdlID0gdG90YWxQYWdlcztcbiAgICAgIGlmIChlbmRQYWdlIDw9IDApIHJldHVybiBbXTtcblxuICAgICAgbGV0IHN0YXJ0UGFnZSA9IE1hdGgubWF4KGN1cnJQYWdlIC0gTWF0aC5mbG9vcihwYWdpbmF0aW9uU2l6ZSAvIDIpLCBwYWdlU3RhcnRJbmRleCk7XG4gICAgICBlbmRQYWdlID0gc3RhcnRQYWdlICsgcGFnaW5hdGlvblNpemUgLSAxO1xuXG4gICAgICBpZiAoZW5kUGFnZSA+IGxhc3RQYWdlKSB7XG4gICAgICAgIGVuZFBhZ2UgPSBsYXN0UGFnZTtcbiAgICAgICAgc3RhcnRQYWdlID0gZW5kUGFnZSAtIHBhZ2luYXRpb25TaXplICsgMTtcbiAgICAgIH1cblxuICAgICAgaWYgKHN0YXJ0UGFnZSAhPT0gcGFnZVN0YXJ0SW5kZXggJiYgdG90YWxQYWdlcyA+IHBhZ2luYXRpb25TaXplICYmIHdpdGhGaXJzdEFuZExhc3QpIHtcbiAgICAgICAgcGFnZXMgPSBbZmlyc3RQYWdlVGV4dCwgcHJlUGFnZVRleHRdO1xuICAgICAgfSBlbHNlIGlmICh0b3RhbFBhZ2VzID4gMSB8fCBhbHdheXNTaG93QWxsQnRucykge1xuICAgICAgICBwYWdlcyA9IFtwcmVQYWdlVGV4dF07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwYWdlcyA9IFtdO1xuICAgICAgfVxuXG4gICAgICBmb3IgKGxldCBpID0gc3RhcnRQYWdlOyBpIDw9IGVuZFBhZ2U7IGkgKz0gMSkge1xuICAgICAgICBpZiAoaSA+PSBwYWdlU3RhcnRJbmRleCkgcGFnZXMucHVzaChpKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGVuZFBhZ2UgPD0gbGFzdFBhZ2UgJiYgcGFnZXMubGVuZ3RoID4gMSkge1xuICAgICAgICBwYWdlcy5wdXNoKG5leHRQYWdlVGV4dCk7XG4gICAgICB9XG4gICAgICBpZiAoZW5kUGFnZSAhPT0gbGFzdFBhZ2UgJiYgd2l0aEZpcnN0QW5kTGFzdCkge1xuICAgICAgICBwYWdlcy5wdXNoKGxhc3RQYWdlVGV4dCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcGFnZXM7XG4gICAgfVxuXG4gICAgY2FsY3VsYXRlUGFnZVN0YXR1cyhwYWdlcyA9IFtdLCBsYXN0UGFnZSkge1xuICAgICAgY29uc3Qge1xuICAgICAgICBjdXJyUGFnZSxcbiAgICAgICAgcGFnZVN0YXJ0SW5kZXgsXG4gICAgICAgIGZpcnN0UGFnZVRleHQsXG4gICAgICAgIHByZVBhZ2VUZXh0LFxuICAgICAgICBuZXh0UGFnZVRleHQsXG4gICAgICAgIGxhc3RQYWdlVGV4dCxcbiAgICAgICAgYWx3YXlzU2hvd0FsbEJ0bnNcbiAgICAgIH0gPSB0aGlzLnByb3BzO1xuICAgICAgY29uc3QgaXNTdGFydCA9IHBhZ2UgPT5cbiAgICAgICAgKGN1cnJQYWdlID09PSBwYWdlU3RhcnRJbmRleCAmJiAocGFnZSA9PT0gZmlyc3RQYWdlVGV4dCB8fCBwYWdlID09PSBwcmVQYWdlVGV4dCkpO1xuICAgICAgY29uc3QgaXNFbmQgPSBwYWdlID0+XG4gICAgICAgIChjdXJyUGFnZSA9PT0gbGFzdFBhZ2UgJiYgKHBhZ2UgPT09IG5leHRQYWdlVGV4dCB8fCBwYWdlID09PSBsYXN0UGFnZVRleHQpKTtcblxuICAgICAgcmV0dXJuIHBhZ2VzXG4gICAgICAgIC5maWx0ZXIoKHBhZ2UpID0+IHtcbiAgICAgICAgICBpZiAoYWx3YXlzU2hvd0FsbEJ0bnMpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gIShpc1N0YXJ0KHBhZ2UpIHx8IGlzRW5kKHBhZ2UpKTtcbiAgICAgICAgfSlcbiAgICAgICAgLm1hcCgocGFnZSkgPT4ge1xuICAgICAgICAgIGxldCB0aXRsZTtcbiAgICAgICAgICBjb25zdCBhY3RpdmUgPSBwYWdlID09PSBjdXJyUGFnZTtcbiAgICAgICAgICBjb25zdCBkaXNhYmxlZCA9IChpc1N0YXJ0KHBhZ2UpIHx8IGlzRW5kKHBhZ2UpKTtcblxuICAgICAgICAgIGlmIChwYWdlID09PSBuZXh0UGFnZVRleHQpIHtcbiAgICAgICAgICAgIHRpdGxlID0gdGhpcy5wcm9wcy5uZXh0UGFnZVRpdGxlO1xuICAgICAgICAgIH0gZWxzZSBpZiAocGFnZSA9PT0gcHJlUGFnZVRleHQpIHtcbiAgICAgICAgICAgIHRpdGxlID0gdGhpcy5wcm9wcy5wcmVQYWdlVGl0bGU7XG4gICAgICAgICAgfSBlbHNlIGlmIChwYWdlID09PSBmaXJzdFBhZ2VUZXh0KSB7XG4gICAgICAgICAgICB0aXRsZSA9IHRoaXMucHJvcHMuZmlyc3RQYWdlVGl0bGU7XG4gICAgICAgICAgfSBlbHNlIGlmIChwYWdlID09PSBsYXN0UGFnZVRleHQpIHtcbiAgICAgICAgICAgIHRpdGxlID0gdGhpcy5wcm9wcy5sYXN0UGFnZVRpdGxlO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aXRsZSA9IGAke3BhZ2V9YDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4geyBwYWdlLCBhY3RpdmUsIGRpc2FibGVkLCB0aXRsZSB9O1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBjYWxjdWxhdGVTaXplUGVyUGFnZVN0YXR1cygpIHtcbiAgICAgIGNvbnN0IHsgc2l6ZVBlclBhZ2VMaXN0IH0gPSB0aGlzLnByb3BzO1xuICAgICAgcmV0dXJuIHNpemVQZXJQYWdlTGlzdC5tYXAoKF9zaXplUGVyUGFnZSkgPT4ge1xuICAgICAgICBjb25zdCBwYWdlVGV4dCA9IHR5cGVvZiBfc2l6ZVBlclBhZ2UudGV4dCAhPT0gJ3VuZGVmaW5lZCcgPyBfc2l6ZVBlclBhZ2UudGV4dCA6IF9zaXplUGVyUGFnZTtcbiAgICAgICAgY29uc3QgcGFnZU51bWJlciA9IHR5cGVvZiBfc2l6ZVBlclBhZ2UudmFsdWUgIT09ICd1bmRlZmluZWQnID8gX3NpemVQZXJQYWdlLnZhbHVlIDogX3NpemVQZXJQYWdlO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHRleHQ6IGAke3BhZ2VUZXh0fWAsXG4gICAgICAgICAgcGFnZTogcGFnZU51bWJlclxuICAgICAgICB9O1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvcGFnZS1yZXNvbHZlci5qcyIsIi8qIVxuICBDb3B5cmlnaHQgKGMpIDIwMTYgSmVkIFdhdHNvbi5cbiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlIChNSVQpLCBzZWVcbiAgaHR0cDovL2plZHdhdHNvbi5naXRodWIuaW8vY2xhc3NuYW1lc1xuKi9cbi8qIGdsb2JhbCBkZWZpbmUgKi9cblxuKGZ1bmN0aW9uICgpIHtcblx0J3VzZSBzdHJpY3QnO1xuXG5cdHZhciBoYXNPd24gPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuXHRmdW5jdGlvbiBjbGFzc05hbWVzICgpIHtcblx0XHR2YXIgY2xhc3NlcyA9IFtdO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBhcmcgPSBhcmd1bWVudHNbaV07XG5cdFx0XHRpZiAoIWFyZykgY29udGludWU7XG5cblx0XHRcdHZhciBhcmdUeXBlID0gdHlwZW9mIGFyZztcblxuXHRcdFx0aWYgKGFyZ1R5cGUgPT09ICdzdHJpbmcnIHx8IGFyZ1R5cGUgPT09ICdudW1iZXInKSB7XG5cdFx0XHRcdGNsYXNzZXMucHVzaChhcmcpO1xuXHRcdFx0fSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGFyZykpIHtcblx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGNsYXNzTmFtZXMuYXBwbHkobnVsbCwgYXJnKSk7XG5cdFx0XHR9IGVsc2UgaWYgKGFyZ1R5cGUgPT09ICdvYmplY3QnKSB7XG5cdFx0XHRcdGZvciAodmFyIGtleSBpbiBhcmcpIHtcblx0XHRcdFx0XHRpZiAoaGFzT3duLmNhbGwoYXJnLCBrZXkpICYmIGFyZ1trZXldKSB7XG5cdFx0XHRcdFx0XHRjbGFzc2VzLnB1c2goa2V5KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gY2xhc3Nlcy5qb2luKCcgJyk7XG5cdH1cblxuXHRpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGNsYXNzTmFtZXM7XG5cdH0gZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZGVmaW5lLmFtZCA9PT0gJ29iamVjdCcgJiYgZGVmaW5lLmFtZCkge1xuXHRcdC8vIHJlZ2lzdGVyIGFzICdjbGFzc25hbWVzJywgY29uc2lzdGVudCB3aXRoIG5wbSBwYWNrYWdlIG5hbWVcblx0XHRkZWZpbmUoJ2NsYXNzbmFtZXMnLCBbXSwgZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIGNsYXNzTmFtZXM7XG5cdFx0fSk7XG5cdH0gZWxzZSB7XG5cdFx0d2luZG93LmNsYXNzTmFtZXMgPSBjbGFzc05hbWVzO1xuXHR9XG59KCkpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY2xhc3NuYW1lcy9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSIsIi8qIGVzbGludCByZWFjdC9wcm9wLXR5cGVzOiAwICovXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgcGFnZVJlc29sdmVyIGZyb20gJy4vcGFnZS1yZXNvbHZlcic7XG5cbmV4cG9ydCBkZWZhdWx0IFdyYXBwZWRDb21wb25lbnQgPT5cbiAgY2xhc3MgUGFnaW5hdGlvbkhhbmRsZXIgZXh0ZW5kcyBwYWdlUmVzb2x2ZXIoQ29tcG9uZW50KSB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgIHRoaXMuaGFuZGxlQ2hhbmdlUGFnZSA9IHRoaXMuaGFuZGxlQ2hhbmdlUGFnZS5iaW5kKHRoaXMpO1xuICAgICAgdGhpcy5oYW5kbGVDaGFuZ2VTaXplUGVyUGFnZSA9IHRoaXMuaGFuZGxlQ2hhbmdlU2l6ZVBlclBhZ2UuYmluZCh0aGlzKTtcbiAgICAgIHRoaXMuc3RhdGUgPSB0aGlzLmluaXRpYWxTdGF0ZSgpO1xuICAgIH1cblxuICAgIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICBjb25zdCB7IGRhdGFTaXplLCBjdXJyU2l6ZVBlclBhZ2UgfSA9IG5leHRQcm9wcztcbiAgICAgIGlmIChjdXJyU2l6ZVBlclBhZ2UgIT09IHRoaXMucHJvcHMuY3VyclNpemVQZXJQYWdlIHx8IGRhdGFTaXplICE9PSB0aGlzLnByb3BzLmRhdGFTaXplKSB7XG4gICAgICAgIGNvbnN0IHRvdGFsUGFnZXMgPSB0aGlzLmNhbGN1bGF0ZVRvdGFsUGFnZShjdXJyU2l6ZVBlclBhZ2UsIGRhdGFTaXplKTtcbiAgICAgICAgY29uc3QgbGFzdFBhZ2UgPSB0aGlzLmNhbGN1bGF0ZUxhc3RQYWdlKHRvdGFsUGFnZXMpO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgdG90YWxQYWdlcywgbGFzdFBhZ2UgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaGFuZGxlQ2hhbmdlU2l6ZVBlclBhZ2Uoc2l6ZVBlclBhZ2UpIHtcbiAgICAgIGNvbnN0IHsgY3VyclNpemVQZXJQYWdlLCBvblNpemVQZXJQYWdlQ2hhbmdlIH0gPSB0aGlzLnByb3BzO1xuICAgICAgY29uc3Qgc2VsZWN0ZWRTaXplID0gdHlwZW9mIHNpemVQZXJQYWdlID09PSAnc3RyaW5nJyA/IHBhcnNlSW50KHNpemVQZXJQYWdlLCAxMCkgOiBzaXplUGVyUGFnZTtcbiAgICAgIGxldCB7IGN1cnJQYWdlIH0gPSB0aGlzLnByb3BzO1xuICAgICAgaWYgKHNlbGVjdGVkU2l6ZSAhPT0gY3VyclNpemVQZXJQYWdlKSB7XG4gICAgICAgIGNvbnN0IG5ld1RvdGFsUGFnZXMgPSB0aGlzLmNhbGN1bGF0ZVRvdGFsUGFnZShzZWxlY3RlZFNpemUpO1xuICAgICAgICBjb25zdCBuZXdMYXN0UGFnZSA9IHRoaXMuY2FsY3VsYXRlTGFzdFBhZ2UobmV3VG90YWxQYWdlcyk7XG4gICAgICAgIGlmIChjdXJyUGFnZSA+IG5ld0xhc3RQYWdlKSBjdXJyUGFnZSA9IG5ld0xhc3RQYWdlO1xuICAgICAgICBvblNpemVQZXJQYWdlQ2hhbmdlKHNlbGVjdGVkU2l6ZSwgY3VyclBhZ2UpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGhhbmRsZUNoYW5nZVBhZ2UobmV3UGFnZSkge1xuICAgICAgbGV0IHBhZ2U7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGN1cnJQYWdlLFxuICAgICAgICBwYWdlU3RhcnRJbmRleCxcbiAgICAgICAgcHJlUGFnZVRleHQsXG4gICAgICAgIG5leHRQYWdlVGV4dCxcbiAgICAgICAgbGFzdFBhZ2VUZXh0LFxuICAgICAgICBmaXJzdFBhZ2VUZXh0LFxuICAgICAgICBvblBhZ2VDaGFuZ2VcbiAgICAgIH0gPSB0aGlzLnByb3BzO1xuICAgICAgY29uc3QgeyBsYXN0UGFnZSB9ID0gdGhpcy5zdGF0ZTtcblxuICAgICAgaWYgKG5ld1BhZ2UgPT09IHByZVBhZ2VUZXh0KSB7XG4gICAgICAgIHBhZ2UgPSB0aGlzLmJhY2tUb1ByZXZQYWdlKCk7XG4gICAgICB9IGVsc2UgaWYgKG5ld1BhZ2UgPT09IG5leHRQYWdlVGV4dCkge1xuICAgICAgICBwYWdlID0gKGN1cnJQYWdlICsgMSkgPiBsYXN0UGFnZSA/IGxhc3RQYWdlIDogY3VyclBhZ2UgKyAxO1xuICAgICAgfSBlbHNlIGlmIChuZXdQYWdlID09PSBsYXN0UGFnZVRleHQpIHtcbiAgICAgICAgcGFnZSA9IGxhc3RQYWdlO1xuICAgICAgfSBlbHNlIGlmIChuZXdQYWdlID09PSBmaXJzdFBhZ2VUZXh0KSB7XG4gICAgICAgIHBhZ2UgPSBwYWdlU3RhcnRJbmRleDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhZ2UgPSBwYXJzZUludChuZXdQYWdlLCAxMCk7XG4gICAgICB9XG4gICAgICBpZiAocGFnZSAhPT0gY3VyclBhZ2UpIHtcbiAgICAgICAgb25QYWdlQ2hhbmdlKHBhZ2UpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxXcmFwcGVkQ29tcG9uZW50XG4gICAgICAgICAgeyAuLi50aGlzLnByb3BzIH1cbiAgICAgICAgICBsYXN0UGFnZT17IHRoaXMuc3RhdGUubGFzdFBhZ2UgfVxuICAgICAgICAgIHRvdGFsUGFnZXM9eyB0aGlzLnN0YXRlLnRvdGFsUGFnZXMgfVxuICAgICAgICAgIG9uUGFnZUNoYW5nZT17IHRoaXMuaGFuZGxlQ2hhbmdlUGFnZSB9XG4gICAgICAgICAgb25TaXplUGVyUGFnZUNoYW5nZT17IHRoaXMuaGFuZGxlQ2hhbmdlU2l6ZVBlclBhZ2UgfVxuICAgICAgICAvPlxuICAgICAgKTtcbiAgICB9XG4gIH07XG5cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9wYWdpbmF0aW9uLWhhbmRsZXIuanMiLCIvKiBlc2xpbnQgcmVhY3QvcHJvcC10eXBlczogMCAqL1xuLyogZXNsaW50IHJlYWN0L3JlcXVpcmUtZGVmYXVsdC1wcm9wczogMCAqL1xuLyogZXNsaW50IG5vLWxvbmVseS1pZjogMCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBDb25zdCBmcm9tICcuL2NvbnN0JztcblxuY29uc3QgU3RhdGVDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dCgpO1xuXG5jbGFzcyBTdGF0ZVByb3ZpZGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5oYW5kbGVDaGFuZ2VQYWdlID0gdGhpcy5oYW5kbGVDaGFuZ2VQYWdlLmJpbmQodGhpcyk7XG4gICAgdGhpcy5oYW5kbGVDaGFuZ2VTaXplUGVyUGFnZSA9IHRoaXMuaGFuZGxlQ2hhbmdlU2l6ZVBlclBhZ2UuYmluZCh0aGlzKTtcblxuICAgIGxldCBjdXJyUGFnZTtcbiAgICBsZXQgY3VyclNpemVQZXJQYWdlO1xuICAgIGNvbnN0IHsgb3B0aW9ucyB9ID0gcHJvcHMucGFnaW5hdGlvbjtcbiAgICBjb25zdCBzaXplUGVyUGFnZUxpc3QgPSBvcHRpb25zLnNpemVQZXJQYWdlTGlzdCB8fCBDb25zdC5TSVpFX1BFUl9QQUdFX0xJU1Q7XG5cbiAgICAvLyBpbml0aWFsaXplIGN1cnJlbnQgcGFnZVxuICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5wYWdlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY3VyclBhZ2UgPSBvcHRpb25zLnBhZ2U7XG4gICAgfSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucy5wYWdlU3RhcnRJbmRleCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGN1cnJQYWdlID0gb3B0aW9ucy5wYWdlU3RhcnRJbmRleDtcbiAgICB9IGVsc2Uge1xuICAgICAgY3VyclBhZ2UgPSBDb25zdC5QQUdFX1NUQVJUX0lOREVYO1xuICAgIH1cblxuICAgIC8vIGluaXRpYWxpemUgY3VycmVudCBzaXplUGVyUGFnZVxuICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5zaXplUGVyUGFnZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGN1cnJTaXplUGVyUGFnZSA9IG9wdGlvbnMuc2l6ZVBlclBhZ2U7XG4gICAgfSBlbHNlIGlmICh0eXBlb2Ygc2l6ZVBlclBhZ2VMaXN0WzBdID09PSAnb2JqZWN0Jykge1xuICAgICAgY3VyclNpemVQZXJQYWdlID0gc2l6ZVBlclBhZ2VMaXN0WzBdLnZhbHVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBjdXJyU2l6ZVBlclBhZ2UgPSBzaXplUGVyUGFnZUxpc3RbMF07XG4gICAgfVxuXG4gICAgdGhpcy5jdXJyUGFnZSA9IGN1cnJQYWdlO1xuICAgIHRoaXMuY3VyclNpemVQZXJQYWdlID0gY3VyclNpemVQZXJQYWdlO1xuICB9XG5cbiAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICBjb25zdCB7IGN1c3RvbSB9ID0gbmV4dFByb3BzLnBhZ2luYXRpb24ub3B0aW9ucztcblxuICAgIC8vIHVzZXIgc2hvdWxkIGFsaWduIHRoZSBwYWdlIHdoZW4gdGhlIHBhZ2UgaXMgbm90IGZpdCB0byB0aGUgZGF0YSBzaXplIHdoZW4gcmVtb3RlIGVuYWJsZVxuICAgIGlmICh0aGlzLmlzUmVtb3RlUGFnaW5hdGlvbigpIHx8IGN1c3RvbSkge1xuICAgICAgdGhpcy5jdXJyUGFnZSA9IG5leHRQcm9wcy5wYWdpbmF0aW9uLm9wdGlvbnMucGFnZTtcbiAgICAgIHRoaXMuY3VyclNpemVQZXJQYWdlID0gbmV4dFByb3BzLnBhZ2luYXRpb24ub3B0aW9ucy5zaXplUGVyUGFnZTtcbiAgICB9XG4gIH1cblxuICBnZXRQYWdpbmF0aW9uUHJvcHMgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBwYWdpbmF0aW9uOiB7IG9wdGlvbnMgfSwgYm9vdHN0cmFwNCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IGN1cnJQYWdlLCBjdXJyU2l6ZVBlclBhZ2UgfSA9IHRoaXM7XG4gICAgY29uc3Qgd2l0aEZpcnN0QW5kTGFzdCA9IHR5cGVvZiBvcHRpb25zLndpdGhGaXJzdEFuZExhc3QgPT09ICd1bmRlZmluZWQnID9cbiAgICAgIENvbnN0LldpdGhfRklSU1RfQU5EX0xBU1QgOiBvcHRpb25zLndpdGhGaXJzdEFuZExhc3Q7XG4gICAgY29uc3QgYWx3YXlzU2hvd0FsbEJ0bnMgPSB0eXBlb2Ygb3B0aW9ucy5hbHdheXNTaG93QWxsQnRucyA9PT0gJ3VuZGVmaW5lZCcgP1xuICAgICAgQ29uc3QuU0hPV19BTExfUEFHRV9CVE5TIDogb3B0aW9ucy5hbHdheXNTaG93QWxsQnRucztcbiAgICBjb25zdCBoaWRlU2l6ZVBlclBhZ2UgPSB0eXBlb2Ygb3B0aW9ucy5oaWRlU2l6ZVBlclBhZ2UgPT09ICd1bmRlZmluZWQnID9cbiAgICAgIENvbnN0LkhJREVfU0laRV9QRVJfUEFHRSA6IG9wdGlvbnMuaGlkZVNpemVQZXJQYWdlO1xuICAgIGNvbnN0IGhpZGVQYWdlTGlzdE9ubHlPbmVQYWdlID0gdHlwZW9mIG9wdGlvbnMuaGlkZVBhZ2VMaXN0T25seU9uZVBhZ2UgPT09ICd1bmRlZmluZWQnID9cbiAgICAgIENvbnN0LkhJREVfUEFHRV9MSVNUX09OTFlfT05FX1BBR0UgOiBvcHRpb25zLmhpZGVQYWdlTGlzdE9ubHlPbmVQYWdlO1xuICAgIGNvbnN0IHBhZ2VTdGFydEluZGV4ID0gdHlwZW9mIG9wdGlvbnMucGFnZVN0YXJ0SW5kZXggPT09ICd1bmRlZmluZWQnID9cbiAgICAgIENvbnN0LlBBR0VfU1RBUlRfSU5ERVggOiBvcHRpb25zLnBhZ2VTdGFydEluZGV4O1xuICAgIHJldHVybiB7XG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgYm9vdHN0cmFwNCxcbiAgICAgIHBhZ2U6IGN1cnJQYWdlLFxuICAgICAgc2l6ZVBlclBhZ2U6IGN1cnJTaXplUGVyUGFnZSxcbiAgICAgIHBhZ2VTdGFydEluZGV4LFxuICAgICAgaGlkZVBhZ2VMaXN0T25seU9uZVBhZ2UsXG4gICAgICBoaWRlU2l6ZVBlclBhZ2UsXG4gICAgICBhbHdheXNTaG93QWxsQnRucyxcbiAgICAgIHdpdGhGaXJzdEFuZExhc3QsXG4gICAgICBkYXRhU2l6ZTogb3B0aW9ucy50b3RhbFNpemUsXG4gICAgICBzaXplUGVyUGFnZUxpc3Q6IG9wdGlvbnMuc2l6ZVBlclBhZ2VMaXN0IHx8IENvbnN0LlNJWkVfUEVSX1BBR0VfTElTVCxcbiAgICAgIHBhZ2luYXRpb25TaXplOiBvcHRpb25zLnBhZ2luYXRpb25TaXplIHx8IENvbnN0LlBBR0lOQVRJT05fU0laRSxcbiAgICAgIHNob3dUb3RhbDogb3B0aW9ucy5zaG93VG90YWwsXG4gICAgICBwYWdlTGlzdFJlbmRlcmVyOiBvcHRpb25zLnBhZ2VMaXN0UmVuZGVyZXIsXG4gICAgICBwYWdlQnV0dG9uUmVuZGVyZXI6IG9wdGlvbnMucGFnZUJ1dHRvblJlbmRlcmVyLFxuICAgICAgc2l6ZVBlclBhZ2VSZW5kZXJlcjogb3B0aW9ucy5zaXplUGVyUGFnZVJlbmRlcmVyLFxuICAgICAgcGFnaW5hdGlvblRvdGFsUmVuZGVyZXI6IG9wdGlvbnMucGFnaW5hdGlvblRvdGFsUmVuZGVyZXIsXG4gICAgICBzaXplUGVyUGFnZU9wdGlvblJlbmRlcmVyOiBvcHRpb25zLnNpemVQZXJQYWdlT3B0aW9uUmVuZGVyZXIsXG4gICAgICBmaXJzdFBhZ2VUZXh0OiBvcHRpb25zLmZpcnN0UGFnZVRleHQgfHwgQ29uc3QuRklSU1RfUEFHRV9URVhULFxuICAgICAgcHJlUGFnZVRleHQ6IG9wdGlvbnMucHJlUGFnZVRleHQgfHwgQ29uc3QuUFJFX1BBR0VfVEVYVCxcbiAgICAgIG5leHRQYWdlVGV4dDogb3B0aW9ucy5uZXh0UGFnZVRleHQgfHwgQ29uc3QuTkVYVF9QQUdFX1RFWFQsXG4gICAgICBsYXN0UGFnZVRleHQ6IG9wdGlvbnMubGFzdFBhZ2VUZXh0IHx8IENvbnN0LkxBU1RfUEFHRV9URVhULFxuICAgICAgcHJlUGFnZVRpdGxlOiBvcHRpb25zLnByZVBhZ2VUaXRsZSB8fCBDb25zdC5QUkVfUEFHRV9USVRMRSxcbiAgICAgIG5leHRQYWdlVGl0bGU6IG9wdGlvbnMubmV4dFBhZ2VUaXRsZSB8fCBDb25zdC5ORVhUX1BBR0VfVElUTEUsXG4gICAgICBmaXJzdFBhZ2VUaXRsZTogb3B0aW9ucy5maXJzdFBhZ2VUaXRsZSB8fCBDb25zdC5GSVJTVF9QQUdFX1RJVExFLFxuICAgICAgbGFzdFBhZ2VUaXRsZTogb3B0aW9ucy5sYXN0UGFnZVRpdGxlIHx8IENvbnN0LkxBU1RfUEFHRV9USVRMRSxcbiAgICAgIG9uUGFnZUNoYW5nZTogdGhpcy5oYW5kbGVDaGFuZ2VQYWdlLFxuICAgICAgb25TaXplUGVyUGFnZUNoYW5nZTogdGhpcy5oYW5kbGVDaGFuZ2VTaXplUGVyUGFnZVxuICAgIH07XG4gIH1cblxuICBzZXRQYWdpbmF0aW9uUmVtb3RlRW1pdHRlciA9IChyZW1vdGVFbWl0dGVyKSA9PiB7XG4gICAgdGhpcy5yZW1vdGVFbWl0dGVyID0gcmVtb3RlRW1pdHRlcjtcbiAgfVxuXG4gIGdldFBhZ2luYXRpb25SZW1vdGVFbWl0dGVyID0gKCkgPT4gdGhpcy5yZW1vdGVFbWl0dGVyIHx8IHRoaXMucHJvcHMucmVtb3RlRW1pdHRlcjtcblxuICBpc1JlbW90ZVBhZ2luYXRpb24gPSAoKSA9PiB7XG4gICAgY29uc3QgZSA9IHt9O1xuICAgIHRoaXMucmVtb3RlRW1pdHRlci5lbWl0KCdpc1JlbW90ZVBhZ2luYXRpb24nLCBlKTtcbiAgICByZXR1cm4gZS5yZXN1bHQ7XG4gIH07XG5cbiAgaGFuZGxlQ2hhbmdlUGFnZShjdXJyUGFnZSkge1xuICAgIGNvbnN0IHsgY3VyclNpemVQZXJQYWdlIH0gPSB0aGlzO1xuICAgIGNvbnN0IHsgcGFnaW5hdGlvbjogeyBvcHRpb25zIH0gfSA9IHRoaXMucHJvcHM7XG5cbiAgICBpZiAob3B0aW9ucy5vblBhZ2VDaGFuZ2UpIHtcbiAgICAgIG9wdGlvbnMub25QYWdlQ2hhbmdlKGN1cnJQYWdlLCBjdXJyU2l6ZVBlclBhZ2UpO1xuICAgIH1cblxuICAgIHRoaXMuY3VyclBhZ2UgPSBjdXJyUGFnZTtcblxuICAgIGlmICh0aGlzLmlzUmVtb3RlUGFnaW5hdGlvbigpKSB7XG4gICAgICB0aGlzLmdldFBhZ2luYXRpb25SZW1vdGVFbWl0dGVyKCkuZW1pdCgncGFnaW5hdGlvbkNoYW5nZScsIGN1cnJQYWdlLCBjdXJyU2l6ZVBlclBhZ2UpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLmZvcmNlVXBkYXRlKCk7XG4gIH1cblxuICBoYW5kbGVDaGFuZ2VTaXplUGVyUGFnZShjdXJyU2l6ZVBlclBhZ2UsIGN1cnJQYWdlKSB7XG4gICAgY29uc3QgeyBwYWdpbmF0aW9uOiB7IG9wdGlvbnMgfSB9ID0gdGhpcy5wcm9wcztcblxuICAgIGlmIChvcHRpb25zLm9uU2l6ZVBlclBhZ2VDaGFuZ2UpIHtcbiAgICAgIG9wdGlvbnMub25TaXplUGVyUGFnZUNoYW5nZShjdXJyU2l6ZVBlclBhZ2UsIGN1cnJQYWdlKTtcbiAgICB9XG5cbiAgICB0aGlzLmN1cnJQYWdlID0gY3VyclBhZ2U7XG4gICAgdGhpcy5jdXJyU2l6ZVBlclBhZ2UgPSBjdXJyU2l6ZVBlclBhZ2U7XG5cbiAgICBpZiAodGhpcy5pc1JlbW90ZVBhZ2luYXRpb24oKSkge1xuICAgICAgdGhpcy5nZXRQYWdpbmF0aW9uUmVtb3RlRW1pdHRlcigpLmVtaXQoJ3BhZ2luYXRpb25DaGFuZ2UnLCBjdXJyUGFnZSwgY3VyclNpemVQZXJQYWdlKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5mb3JjZVVwZGF0ZSgpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHBhZ2luYXRpb25Qcm9wcyA9IHRoaXMuZ2V0UGFnaW5hdGlvblByb3BzKCk7XG4gICAgY29uc3QgcGFnaW5hdGlvbiA9IHtcbiAgICAgIC4uLnRoaXMucHJvcHMucGFnaW5hdGlvbixcbiAgICAgIG9wdGlvbnM6IHBhZ2luYXRpb25Qcm9wc1xuICAgIH07XG5cbiAgICByZXR1cm4gKFxuICAgICAgPFN0YXRlQ29udGV4dC5Qcm92aWRlclxuICAgICAgICB2YWx1ZT17IHtcbiAgICAgICAgICBwYWdpbmF0aW9uUHJvcHMsXG4gICAgICAgICAgcGFnaW5hdGlvblRhYmxlUHJvcHM6IHtcbiAgICAgICAgICAgIHBhZ2luYXRpb24sXG4gICAgICAgICAgICBzZXRQYWdpbmF0aW9uUmVtb3RlRW1pdHRlcjogdGhpcy5zZXRQYWdpbmF0aW9uUmVtb3RlRW1pdHRlclxuICAgICAgICAgIH1cbiAgICAgICAgfSB9XG4gICAgICA+XG4gICAgICAgIHsgdGhpcy5wcm9wcy5jaGlsZHJlbiB9XG4gICAgICA8L1N0YXRlQ29udGV4dC5Qcm92aWRlcj5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0ICgpID0+ICh7XG4gIFByb3ZpZGVyOiBTdGF0ZVByb3ZpZGVyLFxuICBDb25zdW1lcjogU3RhdGVDb250ZXh0LkNvbnN1bWVyXG59KTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9zdGF0ZS1jb250ZXh0LmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuLy8gY29uc2lkZXIgdG8gaGF2ZSBhIGNvbW1vbiBsaWI/MVxuZXhwb3J0IGNvbnN0IEJvb3RzdHJhcENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KHtcbiAgYm9vdHN0cmFwNDogZmFsc2Vcbn0pO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL2Jvb3RzdHJhcC5qcyIsIi8qIGVzbGludCByZWFjdC9wcm9wLXR5cGVzOiAwICovXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgcGFnZVJlc29sdmVyIGZyb20gJy4vcGFnZS1yZXNvbHZlcic7XG5pbXBvcnQgU2l6ZVBlclBhZ2VEcm9wRG93biBmcm9tICcuL3NpemUtcGVyLXBhZ2UtZHJvcGRvd24nO1xuXG5jb25zdCBzaXplUGVyUGFnZURyb3Bkb3duQWRhcHRlciA9IFdyYXBwZWRDb21wb25lbnQgPT5cbiAgY2xhc3MgU2l6ZVBlclBhZ2VEcm9wZG93bkFkYXB0ZXIgZXh0ZW5kcyBwYWdlUmVzb2x2ZXIoQ29tcG9uZW50KSB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgIHRoaXMuY2xvc2VEcm9wRG93biA9IHRoaXMuY2xvc2VEcm9wRG93bi5iaW5kKHRoaXMpO1xuICAgICAgdGhpcy50b2dnbGVEcm9wRG93biA9IHRoaXMudG9nZ2xlRHJvcERvd24uYmluZCh0aGlzKTtcbiAgICAgIHRoaXMuaGFuZGxlQ2hhbmdlU2l6ZVBlclBhZ2UgPSB0aGlzLmhhbmRsZUNoYW5nZVNpemVQZXJQYWdlLmJpbmQodGhpcyk7XG4gICAgICB0aGlzLnN0YXRlID0geyBkcm9wZG93bk9wZW46IGZhbHNlIH07XG4gICAgfVxuXG4gICAgdG9nZ2xlRHJvcERvd24oKSB7XG4gICAgICBjb25zdCBkcm9wZG93bk9wZW4gPSAhdGhpcy5zdGF0ZS5kcm9wZG93bk9wZW47XG4gICAgICB0aGlzLnNldFN0YXRlKCgpID0+ICh7IGRyb3Bkb3duT3BlbiB9KSk7XG4gICAgfVxuXG4gICAgY2xvc2VEcm9wRG93bigpIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoKCkgPT4gKHsgZHJvcGRvd25PcGVuOiBmYWxzZSB9KSk7XG4gICAgfVxuXG4gICAgaGFuZGxlQ2hhbmdlU2l6ZVBlclBhZ2Uoc2l6ZVBlclBhZ2UpIHtcbiAgICAgIHRoaXMucHJvcHMub25TaXplUGVyUGFnZUNoYW5nZShzaXplUGVyUGFnZSk7XG4gICAgICB0aGlzLmNsb3NlRHJvcERvd24oKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIHNpemVQZXJQYWdlTGlzdCxcbiAgICAgICAgY3VyclNpemVQZXJQYWdlLFxuICAgICAgICBoaWRlU2l6ZVBlclBhZ2UsXG4gICAgICAgIHNpemVQZXJQYWdlUmVuZGVyZXIsXG4gICAgICAgIHNpemVQZXJQYWdlT3B0aW9uUmVuZGVyZXJcbiAgICAgIH0gPSB0aGlzLnByb3BzO1xuICAgICAgY29uc3QgeyBkcm9wZG93bk9wZW46IG9wZW4gfSA9IHRoaXMuc3RhdGU7XG5cbiAgICAgIGlmIChzaXplUGVyUGFnZUxpc3QubGVuZ3RoID4gMSAmJiAhaGlkZVNpemVQZXJQYWdlKSB7XG4gICAgICAgIGlmIChzaXplUGVyUGFnZVJlbmRlcmVyKSB7XG4gICAgICAgICAgcmV0dXJuIHNpemVQZXJQYWdlUmVuZGVyZXIoe1xuICAgICAgICAgICAgb3B0aW9uczogdGhpcy5jYWxjdWxhdGVTaXplUGVyUGFnZVN0YXR1cygpLFxuICAgICAgICAgICAgY3VyclNpemVQZXJQYWdlOiBgJHtjdXJyU2l6ZVBlclBhZ2V9YCxcbiAgICAgICAgICAgIG9uU2l6ZVBlclBhZ2VDaGFuZ2U6IHRoaXMuaGFuZGxlQ2hhbmdlU2l6ZVBlclBhZ2VcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxXcmFwcGVkQ29tcG9uZW50XG4gICAgICAgICAgICBjdXJyU2l6ZVBlclBhZ2U9eyBgJHtjdXJyU2l6ZVBlclBhZ2V9YCB9XG4gICAgICAgICAgICBvcHRpb25zPXsgdGhpcy5jYWxjdWxhdGVTaXplUGVyUGFnZVN0YXR1cygpIH1cbiAgICAgICAgICAgIG9wdGlvblJlbmRlcmVyPXsgc2l6ZVBlclBhZ2VPcHRpb25SZW5kZXJlciB9XG4gICAgICAgICAgICBvblNpemVQZXJQYWdlQ2hhbmdlPXsgdGhpcy5oYW5kbGVDaGFuZ2VTaXplUGVyUGFnZSB9XG4gICAgICAgICAgICBvbkNsaWNrPXsgdGhpcy50b2dnbGVEcm9wRG93biB9XG4gICAgICAgICAgICBvbkJsdXI9eyB0aGlzLmNsb3NlRHJvcERvd24gfVxuICAgICAgICAgICAgb3Blbj17IG9wZW4gfVxuICAgICAgICAgIC8+XG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH07XG5cblxuZXhwb3J0IGNvbnN0IFNpemVQZXJQYWdlRHJvcGRvd25BZGFwdGVyID0gc2l6ZVBlclBhZ2VEcm9wZG93bkFkYXB0ZXIoU2l6ZVBlclBhZ2VEcm9wRG93bik7XG5leHBvcnQgZGVmYXVsdCBzaXplUGVyUGFnZURyb3Bkb3duQWRhcHRlcjtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9zaXplLXBlci1wYWdlLWRyb3Bkb3duLWFkYXB0ZXIuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IEJvb3RzdHJhcENvbnRleHQgfSBmcm9tICcuL2Jvb3RzdHJhcCc7XG5pbXBvcnQgU2l6ZVBlclBhZ2VPcHRpb24gZnJvbSAnLi9zaXplLXBlci1wYWdlLW9wdGlvbic7XG5cbmNvbnN0IHNpemVQZXJQYWdlRGVmYXVsdENsYXNzID0gJ3JlYWN0LWJzLXRhYmxlLXNpemVQZXJQYWdlLWRyb3Bkb3duJztcblxuY29uc3QgU2l6ZVBlclBhZ2VEcm9wRG93biA9IChwcm9wcykgPT4ge1xuICBjb25zdCB7XG4gICAgb3BlbixcbiAgICBoaWRkZW4sXG4gICAgb25DbGljayxcbiAgICBvbkJsdXIsXG4gICAgb3B0aW9ucyxcbiAgICBjbGFzc05hbWUsXG4gICAgdmFyaWF0aW9uLFxuICAgIGJ0bkNvbnRleHR1YWwsXG4gICAgb3B0aW9uUmVuZGVyZXIsXG4gICAgY3VyclNpemVQZXJQYWdlLFxuICAgIG9uU2l6ZVBlclBhZ2VDaGFuZ2VcbiAgfSA9IHByb3BzO1xuXG4gIGNvbnN0IGRyb3BEb3duU3R5bGUgPSB7IHZpc2liaWxpdHk6IGhpZGRlbiA/ICdoaWRkZW4nIDogJ3Zpc2libGUnIH07XG4gIGNvbnN0IG9wZW5DbGFzcyA9IG9wZW4gPyAnb3BlbiBzaG93JyA6ICcnO1xuICBjb25zdCBkcm9wZG93bkNsYXNzZXMgPSBjcyhcbiAgICBvcGVuQ2xhc3MsXG4gICAgc2l6ZVBlclBhZ2VEZWZhdWx0Q2xhc3MsXG4gICAgdmFyaWF0aW9uLFxuICAgIGNsYXNzTmFtZSxcbiAgKTtcblxuICByZXR1cm4gKFxuICAgIDxCb290c3RyYXBDb250ZXh0LkNvbnN1bWVyPlxuICAgICAge1xuICAgICAgICAoeyBib290c3RyYXA0IH0pID0+IChcbiAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgc3R5bGU9eyBkcm9wRG93blN0eWxlIH1cbiAgICAgICAgICAgIGNsYXNzTmFtZT17IGRyb3Bkb3duQ2xhc3NlcyB9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICBpZD1cInBhZ2VEcm9wRG93blwiXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT17IGBidG4gJHtidG5Db250ZXh0dWFsfSBkcm9wZG93bi10b2dnbGVgIH1cbiAgICAgICAgICAgICAgZGF0YS10b2dnbGU9XCJkcm9wZG93blwiXG4gICAgICAgICAgICAgIGFyaWEtZXhwYW5kZWQ9eyBvcGVuIH1cbiAgICAgICAgICAgICAgb25DbGljaz17IG9uQ2xpY2sgfVxuICAgICAgICAgICAgICBvbkJsdXI9eyBvbkJsdXIgfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7IGN1cnJTaXplUGVyUGFnZSB9XG4gICAgICAgICAgICAgIHsgJyAnIH1cbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGJvb3RzdHJhcDQgPyBudWxsIDogKFxuICAgICAgICAgICAgICAgICAgPHNwYW4+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImNhcmV0XCIgLz5cbiAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgPHVsXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT17IGBkcm9wZG93bi1tZW51ICR7b3BlbkNsYXNzfWAgfVxuICAgICAgICAgICAgICByb2xlPVwibWVudVwiXG4gICAgICAgICAgICAgIGFyaWEtbGFiZWxsZWRieT1cInBhZ2VEcm9wRG93blwiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvcHRpb25zLm1hcCgob3B0aW9uKSA9PiB7XG4gICAgICAgICAgICAgICAgICBpZiAob3B0aW9uUmVuZGVyZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9wdGlvblJlbmRlcmVyKHtcbiAgICAgICAgICAgICAgICAgICAgICAuLi5vcHRpb24sXG4gICAgICAgICAgICAgICAgICAgICAgb25TaXplUGVyUGFnZUNoYW5nZVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgIDxTaXplUGVyUGFnZU9wdGlvblxuICAgICAgICAgICAgICAgICAgICAgIHsgLi4ub3B0aW9uIH1cbiAgICAgICAgICAgICAgICAgICAgICBrZXk9eyBvcHRpb24udGV4dCB9XG4gICAgICAgICAgICAgICAgICAgICAgYm9vdHN0cmFwND17IGJvb3RzdHJhcDQgfVxuICAgICAgICAgICAgICAgICAgICAgIG9uU2l6ZVBlclBhZ2VDaGFuZ2U9eyBvblNpemVQZXJQYWdlQ2hhbmdlIH1cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgIClcbiAgICAgIH1cbiAgICA8L0Jvb3RzdHJhcENvbnRleHQuQ29uc3VtZXI+XG4gICk7XG59O1xuXG5TaXplUGVyUGFnZURyb3BEb3duLnByb3BUeXBlcyA9IHtcbiAgY3VyclNpemVQZXJQYWdlOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIG9wdGlvbnM6IFByb3BUeXBlcy5hcnJheS5pc1JlcXVpcmVkLFxuICBvbkNsaWNrOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBvbkJsdXI6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIG9uU2l6ZVBlclBhZ2VDaGFuZ2U6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIG9wZW46IFByb3BUeXBlcy5ib29sLFxuICBoaWRkZW46IFByb3BUeXBlcy5ib29sLFxuICBidG5Db250ZXh0dWFsOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB2YXJpYXRpb246IFByb3BUeXBlcy5vbmVPZihbJ2Ryb3Bkb3duJywgJ2Ryb3B1cCddKSxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBvcHRpb25SZW5kZXJlcjogUHJvcFR5cGVzLmZ1bmNcbn07XG5TaXplUGVyUGFnZURyb3BEb3duLmRlZmF1bHRQcm9wcyA9IHtcbiAgb3BlbjogZmFsc2UsXG4gIGhpZGRlbjogZmFsc2UsXG4gIGJ0bkNvbnRleHR1YWw6ICdidG4tZGVmYXVsdCBidG4tc2Vjb25kYXJ5JyxcbiAgdmFyaWF0aW9uOiAnZHJvcGRvd24nLFxuICBjbGFzc05hbWU6ICcnLFxuICBvcHRpb25SZW5kZXJlcjogbnVsbFxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBTaXplUGVyUGFnZURyb3BEb3duO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3NpemUtcGVyLXBhZ2UtZHJvcGRvd24uanMiLCIvKiBlc2xpbnQgcmVhY3QvcHJvcC10eXBlczogMCAqL1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHBhZ2VSZXNvbHZlciBmcm9tICcuL3BhZ2UtcmVzb2x2ZXInO1xuaW1wb3J0IFBhZ2luYXRpb25MaXN0IGZyb20gJy4vcGFnaW5hdGlvbi1saXN0JztcblxuY29uc3QgcGFnaW5hdGlvbkxpc3RBZGFwdGVyID0gV3JhcHBlZENvbXBvbmVudCA9PlxuICBjbGFzcyBQYWdpbmF0aW9uTGlzdEFkYXB0ZXIgZXh0ZW5kcyBwYWdlUmVzb2x2ZXIoQ29tcG9uZW50KSB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3QgeyBsYXN0UGFnZSwgdG90YWxQYWdlcywgcGFnZUJ1dHRvblJlbmRlcmVyLCBvblBhZ2VDaGFuZ2UgfSA9IHRoaXMucHJvcHM7XG4gICAgICBjb25zdCBwYWdlcyA9IHRoaXMuY2FsY3VsYXRlUGFnZVN0YXR1cyh0aGlzLmNhbGN1bGF0ZVBhZ2VzKHRvdGFsUGFnZXMsIGxhc3RQYWdlKSwgbGFzdFBhZ2UpO1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPFdyYXBwZWRDb21wb25lbnRcbiAgICAgICAgICBwYWdlQnV0dG9uUmVuZGVyZXI9eyBwYWdlQnV0dG9uUmVuZGVyZXIgfVxuICAgICAgICAgIG9uUGFnZUNoYW5nZT17IG9uUGFnZUNoYW5nZSB9XG4gICAgICAgICAgcGFnZXM9eyBwYWdlcyB9XG4gICAgICAgIC8+XG4gICAgICApO1xuICAgIH1cbiAgfTtcblxuXG5leHBvcnQgY29uc3QgUGFnaW5hdGlvbkxpc3RXaXRoQWRhcHRlciA9IHBhZ2luYXRpb25MaXN0QWRhcHRlcihQYWdpbmF0aW9uTGlzdCk7XG5leHBvcnQgZGVmYXVsdCBwYWdpbmF0aW9uTGlzdEFkYXB0ZXI7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvcGFnaW5hdGlvbi1saXN0LWFkYXB0ZXIuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuaW1wb3J0IFBhZ2VCdXR0b24gZnJvbSAnLi9wYWdlLWJ1dHRvbic7XG5cbmNvbnN0IFBhZ2luYXRvbkxpc3QgPSBwcm9wcyA9PiAoXG4gIDx1bCBjbGFzc05hbWU9XCJwYWdpbmF0aW9uIHJlYWN0LWJvb3RzdHJhcC10YWJsZS1wYWdlLWJ0bnMtdWxcIj5cbiAgICB7XG4gICAgICBwcm9wcy5wYWdlcy5tYXAoKHBhZ2VQcm9wcykgPT4ge1xuICAgICAgICBpZiAocHJvcHMucGFnZUJ1dHRvblJlbmRlcmVyKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLnBhZ2VCdXR0b25SZW5kZXJlcih7XG4gICAgICAgICAgICAuLi5wYWdlUHJvcHMsXG4gICAgICAgICAgICBvblBhZ2VDaGFuZ2U6IHByb3BzLm9uUGFnZUNoYW5nZVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgPFBhZ2VCdXR0b25cbiAgICAgICAgICAgIGtleT17IHBhZ2VQcm9wcy5wYWdlIH1cbiAgICAgICAgICAgIHsgLi4ucGFnZVByb3BzIH1cbiAgICAgICAgICAgIG9uUGFnZUNoYW5nZT17IHByb3BzLm9uUGFnZUNoYW5nZSB9XG4gICAgICAgICAgLz5cbiAgICAgICAgKTtcbiAgICAgIH0pXG4gICAgfVxuICA8L3VsPlxuKTtcblxuUGFnaW5hdG9uTGlzdC5wcm9wVHlwZXMgPSB7XG4gIHBhZ2VzOiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuc2hhcGUoe1xuICAgIHBhZ2U6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5udW1iZXIsIFByb3BUeXBlcy5zdHJpbmddKSxcbiAgICBhY3RpdmU6IFByb3BUeXBlcy5ib29sLFxuICAgIGRpc2FibGU6IFByb3BUeXBlcy5ib29sLFxuICAgIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nXG4gIH0pKS5pc1JlcXVpcmVkLFxuICBvblBhZ2VDaGFuZ2U6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIHBhZ2VCdXR0b25SZW5kZXJlcjogUHJvcFR5cGVzLmZ1bmNcbn07XG5cblBhZ2luYXRvbkxpc3QuZGVmYXVsdFByb3BzID0ge1xuICBwYWdlQnV0dG9uUmVuZGVyZXI6IG51bGxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFBhZ2luYXRvbkxpc3Q7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvcGFnaW5hdGlvbi1saXN0LmpzIiwiLyogZXNsaW50IHJlYWN0L3Byb3AtdHlwZXM6IDAgKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCBkZWZhdWx0IFdyYXBwZWRDb21wb25lbnQgPT4gKHtcbiAgcGFnZSxcbiAgc2l6ZVBlclBhZ2UsXG4gIC4uLnJlc3Rcbn0pID0+IChcbiAgPFdyYXBwZWRDb21wb25lbnRcbiAgICB7IC4uLnJlc3QgfVxuICAgIGN1cnJQYWdlPXsgcGFnZSB9XG4gICAgY3VyclNpemVQZXJQYWdlPXsgc2l6ZVBlclBhZ2UgfVxuICAvPlxuKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9zdGFuZGFsb25lLWFkYXB0ZXIuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjcmVhdGVCYXNlQ29udGV4dCBmcm9tICcuL3NyYy9zdGF0ZS1jb250ZXh0JztcbmltcG9ydCBjcmVhdGVEYXRhQ29udGV4dCBmcm9tICcuL3NyYy9kYXRhLWNvbnRleHQnO1xuaW1wb3J0IFBhZ2luYXRpb25MaXN0U3RhbmRhbG9uZSBmcm9tICcuL3NyYy9wYWdpbmF0aW9uLWxpc3Qtc3RhbmRhbG9uZSc7XG5pbXBvcnQgU2l6ZVBlclBhZ2VEcm9wZG93blN0YW5kYWxvbmUgZnJvbSAnLi9zcmMvc2l6ZS1wZXItcGFnZS1kcm9wZG93bi1zdGFuZGFsb25lJztcblxuZXhwb3J0IGRlZmF1bHQgKG9wdGlvbnMgPSB7fSkgPT4gKHtcbiAgY3JlYXRlQ29udGV4dDogY3JlYXRlRGF0YUNvbnRleHQsXG4gIG9wdGlvbnNcbn0pO1xuXG5jb25zdCB7IFByb3ZpZGVyLCBDb25zdW1lciB9ID0gY3JlYXRlQmFzZUNvbnRleHQoKTtcblxuY29uc3QgQ3VzdG9taXphYmxlUHJvdmlkZXIgPSBwcm9wcyA9PiAoXG4gIDxQcm92aWRlciB7IC4uLnByb3BzIH0+XG4gICAgPENvbnN1bWVyPnsgcGFnaW5hdGlvblByb3BzID0+IHByb3BzLmNoaWxkcmVuKHBhZ2luYXRpb25Qcm9wcykgfTwvQ29uc3VtZXI+XG4gIDwvUHJvdmlkZXI+XG4pO1xuXG5DdXN0b21pemFibGVQcm92aWRlci5wcm9wVHlwZXMgPSB7XG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59O1xuXG5leHBvcnQgY29uc3QgUGFnaW5hdGlvblByb3ZpZGVyID0gQ3VzdG9taXphYmxlUHJvdmlkZXI7XG5leHBvcnQgeyBQYWdpbmF0aW9uTGlzdFN0YW5kYWxvbmUsIFNpemVQZXJQYWdlRHJvcGRvd25TdGFuZGFsb25lIH07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9pbmRleC5qcyIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGVtcHR5RnVuY3Rpb24gPSByZXF1aXJlKCdmYmpzL2xpYi9lbXB0eUZ1bmN0aW9uJyk7XG52YXIgaW52YXJpYW50ID0gcmVxdWlyZSgnZmJqcy9saWIvaW52YXJpYW50Jyk7XG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaW52YXJpYW50KFxuICAgICAgZmFsc2UsXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbVxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzID0gZW1wdHlGdW5jdGlvbjtcbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzXG4vLyBtb2R1bGUgaWQgPSAxNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSIsIlwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIFxuICovXG5cbmZ1bmN0aW9uIG1ha2VFbXB0eUZ1bmN0aW9uKGFyZykge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBhcmc7XG4gIH07XG59XG5cbi8qKlxuICogVGhpcyBmdW5jdGlvbiBhY2NlcHRzIGFuZCBkaXNjYXJkcyBpbnB1dHM7IGl0IGhhcyBubyBzaWRlIGVmZmVjdHMuIFRoaXMgaXNcbiAqIHByaW1hcmlseSB1c2VmdWwgaWRpb21hdGljYWxseSBmb3Igb3ZlcnJpZGFibGUgZnVuY3Rpb24gZW5kcG9pbnRzIHdoaWNoXG4gKiBhbHdheXMgbmVlZCB0byBiZSBjYWxsYWJsZSwgc2luY2UgSlMgbGFja3MgYSBudWxsLWNhbGwgaWRpb20gYWxhIENvY29hLlxuICovXG52YXIgZW1wdHlGdW5jdGlvbiA9IGZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fTtcblxuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJucyA9IG1ha2VFbXB0eUZ1bmN0aW9uO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc0ZhbHNlID0gbWFrZUVtcHR5RnVuY3Rpb24oZmFsc2UpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc1RydWUgPSBtYWtlRW1wdHlGdW5jdGlvbih0cnVlKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNOdWxsID0gbWFrZUVtcHR5RnVuY3Rpb24obnVsbCk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zVGhpcyA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXM7XG59O1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc0FyZ3VtZW50ID0gZnVuY3Rpb24gKGFyZykge1xuICByZXR1cm4gYXJnO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBlbXB0eUZ1bmN0aW9uO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2VtcHR5RnVuY3Rpb24uanNcbi8vIG1vZHVsZSBpZCA9IDE1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFVzZSBpbnZhcmlhbnQoKSB0byBhc3NlcnQgc3RhdGUgd2hpY2ggeW91ciBwcm9ncmFtIGFzc3VtZXMgdG8gYmUgdHJ1ZS5cbiAqXG4gKiBQcm92aWRlIHNwcmludGYtc3R5bGUgZm9ybWF0IChvbmx5ICVzIGlzIHN1cHBvcnRlZCkgYW5kIGFyZ3VtZW50c1xuICogdG8gcHJvdmlkZSBpbmZvcm1hdGlvbiBhYm91dCB3aGF0IGJyb2tlIGFuZCB3aGF0IHlvdSB3ZXJlXG4gKiBleHBlY3RpbmcuXG4gKlxuICogVGhlIGludmFyaWFudCBtZXNzYWdlIHdpbGwgYmUgc3RyaXBwZWQgaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBpbnZhcmlhbnRcbiAqIHdpbGwgcmVtYWluIHRvIGVuc3VyZSBsb2dpYyBkb2VzIG5vdCBkaWZmZXIgaW4gcHJvZHVjdGlvbi5cbiAqL1xuXG52YXIgdmFsaWRhdGVGb3JtYXQgPSBmdW5jdGlvbiB2YWxpZGF0ZUZvcm1hdChmb3JtYXQpIHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YWxpZGF0ZUZvcm1hdCA9IGZ1bmN0aW9uIHZhbGlkYXRlRm9ybWF0KGZvcm1hdCkge1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhcmlhbnQgcmVxdWlyZXMgYW4gZXJyb3IgbWVzc2FnZSBhcmd1bWVudCcpO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgZm9ybWF0LCBhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIHZhbGlkYXRlRm9ybWF0KGZvcm1hdCk7XG5cbiAgaWYgKCFjb25kaXRpb24pIHtcbiAgICB2YXIgZXJyb3I7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcignTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgJyArICdmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLicpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYXJncyA9IFthLCBiLCBjLCBkLCBlLCBmXTtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gYXJnc1thcmdJbmRleCsrXTtcbiAgICAgIH0pKTtcbiAgICAgIGVycm9yLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgfVxuXG4gICAgZXJyb3IuZnJhbWVzVG9Qb3AgPSAxOyAvLyB3ZSBkb24ndCBjYXJlIGFib3V0IGludmFyaWFudCdzIG93biBmcmFtZVxuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW52YXJpYW50O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2ludmFyaWFudC5qc1xuLy8gbW9kdWxlIGlkID0gMTZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCIvKipcbiAqIENvcHlyaWdodCAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qc1xuLy8gbW9kdWxlIGlkID0gMTdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCIvKiBlc2xpbnQgcmVhY3QvcHJvcC10eXBlczogMCAqL1xuLyogZXNsaW50IHJlYWN0L3JlcXVpcmUtZGVmYXVsdC1wcm9wczogMCAqL1xuLyogZXNsaW50IG5vLWxvbmVseS1pZjogMCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmltcG9ydCBDb25zdCBmcm9tICcuL2NvbnN0JztcbmltcG9ydCB7IEJvb3RzdHJhcENvbnRleHQgfSBmcm9tICcuL2Jvb3RzdHJhcCc7XG5pbXBvcnQgUGFnaW5hdGlvbiBmcm9tICcuL3BhZ2luYXRpb24nO1xuaW1wb3J0IHsgZ2V0QnlDdXJyUGFnZSwgYWxpZ25QYWdlIH0gZnJvbSAnLi9wYWdlJztcbmltcG9ydCBjcmVhdGVCYXNlQ29udGV4dCBmcm9tICcuL3N0YXRlLWNvbnRleHQnO1xuXG5jb25zdCB7IFByb3ZpZGVyIH0gPSBjcmVhdGVCYXNlQ29udGV4dCgpO1xuXG5jb25zdCBQYWdpbmF0aW9uRGF0YUNvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KCk7XG5cbmNsYXNzIFBhZ2luYXRpb25EYXRhUHJvdmlkZXIgZXh0ZW5kcyBQcm92aWRlciB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgZGF0YTogUHJvcFR5cGVzLmFycmF5LmlzUmVxdWlyZWQsXG4gICAgcmVtb3RlRW1pdHRlcjogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIGlzUmVtb3RlUGFnaW5hdGlvbjogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxuICB9XG5cbiAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICBzdXBlci5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcyk7XG4gICAgY29uc3QgeyBjdXJyU2l6ZVBlclBhZ2UgfSA9IHRoaXM7XG4gICAgY29uc3QgeyBjdXN0b20sIG9uUGFnZUNoYW5nZSB9ID0gbmV4dFByb3BzLnBhZ2luYXRpb24ub3B0aW9ucztcblxuICAgIGNvbnN0IHBhZ2VTdGFydEluZGV4ID0gdHlwZW9mIG5leHRQcm9wcy5wYWdpbmF0aW9uLm9wdGlvbnMucGFnZVN0YXJ0SW5kZXggIT09ICd1bmRlZmluZWQnID9cbiAgICAgIG5leHRQcm9wcy5wYWdpbmF0aW9uLm9wdGlvbnMucGFnZVN0YXJ0SW5kZXggOiBDb25zdC5QQUdFX1NUQVJUX0lOREVYO1xuXG4gICAgLy8gdXNlciBzaG91bGQgYWxpZ24gdGhlIHBhZ2Ugd2hlbiB0aGUgcGFnZSBpcyBub3QgZml0IHRvIHRoZSBkYXRhIHNpemUgd2hlbiByZW1vdGUgZW5hYmxlXG4gICAgaWYgKCF0aGlzLmlzUmVtb3RlUGFnaW5hdGlvbigpICYmICFjdXN0b20pIHtcbiAgICAgIGNvbnN0IG5ld1BhZ2UgPSBhbGlnblBhZ2UoXG4gICAgICAgIG5leHRQcm9wcy5kYXRhLmxlbmd0aCwgdGhpcy5jdXJyUGFnZSwgY3VyclNpemVQZXJQYWdlLCBwYWdlU3RhcnRJbmRleCk7XG5cbiAgICAgIGlmICh0aGlzLmN1cnJQYWdlICE9PSBuZXdQYWdlKSB7XG4gICAgICAgIGlmIChvblBhZ2VDaGFuZ2UpIHtcbiAgICAgICAgICBvblBhZ2VDaGFuZ2UobmV3UGFnZSwgY3VyclNpemVQZXJQYWdlKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmN1cnJQYWdlID0gbmV3UGFnZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBpc1JlbW90ZVBhZ2luYXRpb24gPSAoKSA9PiB0aGlzLnByb3BzLmlzUmVtb3RlUGFnaW5hdGlvbigpO1xuXG4gIHJlbmRlckRlZmF1bHRQYWdpbmF0aW9uID0gKCkgPT4ge1xuICAgIGlmICghdGhpcy5wcm9wcy5wYWdpbmF0aW9uLm9wdGlvbnMuY3VzdG9tKSB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGJvb3RzdHJhcDQsXG4gICAgICAgIHBhZ2U6IGN1cnJQYWdlLFxuICAgICAgICBzaXplUGVyUGFnZTogY3VyclNpemVQZXJQYWdlLFxuICAgICAgICBkYXRhU2l6ZSxcbiAgICAgICAgLi4ucmVzdFxuICAgICAgfSA9IHRoaXMuZ2V0UGFnaW5hdGlvblByb3BzKCk7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8Qm9vdHN0cmFwQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17IHsgYm9vdHN0cmFwNCB9IH0+XG4gICAgICAgICAgPFBhZ2luYXRpb25cbiAgICAgICAgICAgIHsgLi4ucmVzdCB9XG4gICAgICAgICAgICBrZXk9XCJwYWdpbmF0aW9uXCJcbiAgICAgICAgICAgIGRhdGFTaXplPXsgZGF0YVNpemUgfHwgdGhpcy5wcm9wcy5kYXRhLmxlbmd0aCB9XG4gICAgICAgICAgICBjdXJyUGFnZT17IGN1cnJQYWdlIH1cbiAgICAgICAgICAgIGN1cnJTaXplUGVyUGFnZT17IGN1cnJTaXplUGVyUGFnZSB9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9Cb290c3RyYXBDb250ZXh0LlByb3ZpZGVyPlxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgbGV0IHsgZGF0YSB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IHBhZ2luYXRpb246IHsgb3B0aW9ucyB9IH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHsgY3VyclBhZ2UsIGN1cnJTaXplUGVyUGFnZSB9ID0gdGhpcztcbiAgICBjb25zdCBwYWdlU3RhcnRJbmRleCA9IHR5cGVvZiBvcHRpb25zLnBhZ2VTdGFydEluZGV4ID09PSAndW5kZWZpbmVkJyA/XG4gICAgICBDb25zdC5QQUdFX1NUQVJUX0lOREVYIDogb3B0aW9ucy5wYWdlU3RhcnRJbmRleDtcblxuICAgIGRhdGEgPSB0aGlzLmlzUmVtb3RlUGFnaW5hdGlvbigpID9cbiAgICAgIGRhdGEgOlxuICAgICAgZ2V0QnlDdXJyUGFnZShcbiAgICAgICAgZGF0YSxcbiAgICAgICAgY3VyclBhZ2UsXG4gICAgICAgIGN1cnJTaXplUGVyUGFnZSxcbiAgICAgICAgcGFnZVN0YXJ0SW5kZXhcbiAgICAgICk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPFBhZ2luYXRpb25EYXRhQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17IHsgZGF0YSwgc2V0UmVtb3RlRW1pdHRlcjogdGhpcy5zZXRSZW1vdGVFbWl0dGVyIH0gfT5cbiAgICAgICAgeyB0aGlzLnByb3BzLmNoaWxkcmVuIH1cbiAgICAgICAgeyB0aGlzLnJlbmRlckRlZmF1bHRQYWdpbmF0aW9uKCkgfVxuICAgICAgPC9QYWdpbmF0aW9uRGF0YUNvbnRleHQuUHJvdmlkZXI+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCAoKSA9PiAoe1xuICBQcm92aWRlcjogUGFnaW5hdGlvbkRhdGFQcm92aWRlcixcbiAgQ29uc3VtZXI6IFBhZ2luYXRpb25EYXRhQ29udGV4dC5Db25zdW1lclxufSk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvZGF0YS1jb250ZXh0LmpzIiwiLyogZXNsaW50IHJlYWN0L3JlcXVpcmUtZGVmYXVsdC1wcm9wczogMCAqL1xuLyogZXNsaW50IGFycm93LWJvZHktc3R5bGU6IDAgKi9cbmltcG9ydCBjcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHBhZ2VSZXNvbHZlciBmcm9tICcuL3BhZ2UtcmVzb2x2ZXInO1xuaW1wb3J0IHBhZ2luYXRpb25IYW5kbGVyIGZyb20gJy4vcGFnaW5hdGlvbi1oYW5kbGVyJztcbmltcG9ydCB7IFNpemVQZXJQYWdlRHJvcGRvd25BZGFwdGVyIH0gZnJvbSAnLi9zaXplLXBlci1wYWdlLWRyb3Bkb3duLWFkYXB0ZXInO1xuaW1wb3J0IHsgUGFnaW5hdGlvbkxpc3RXaXRoQWRhcHRlciB9IGZyb20gJy4vcGFnaW5hdGlvbi1saXN0LWFkYXB0ZXInO1xuaW1wb3J0IFBhZ2luYXRpb25Ub3RhbCBmcm9tICcuL3BhZ2luYXRpb24tdG90YWwnO1xuaW1wb3J0IENvbnN0IGZyb20gJy4vY29uc3QnO1xuXG5jbGFzcyBQYWdpbmF0aW9uIGV4dGVuZHMgcGFnZVJlc29sdmVyKENvbXBvbmVudCkge1xuICBkZWZhdWx0VG90YWwgPSAoZnJvbSwgdG8sIHNpemUpID0+IChcbiAgICA8UGFnaW5hdGlvblRvdGFsXG4gICAgICBmcm9tPXsgZnJvbSB9XG4gICAgICB0bz17IHRvIH1cbiAgICAgIGRhdGFTaXplPXsgc2l6ZSB9XG4gICAgLz5cbiAgKTtcblxuICBzZXRUb3RhbCA9IChmcm9tLCB0bywgc2l6ZSwgdG90YWwpID0+IHtcbiAgICBpZiAodG90YWwgJiYgKHR5cGVvZiB0b3RhbCA9PT0gJ2Z1bmN0aW9uJykpIHtcbiAgICAgIHJldHVybiB0b3RhbChmcm9tLCB0bywgc2l6ZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuZGVmYXVsdFRvdGFsKGZyb20sIHRvLCBzaXplKTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgc2hvd1RvdGFsLFxuICAgICAgZGF0YVNpemUsXG4gICAgICBwYWdlTGlzdFJlbmRlcmVyLFxuICAgICAgcGFnZUJ1dHRvblJlbmRlcmVyLFxuICAgICAgcGFnaW5hdGlvblRvdGFsUmVuZGVyZXIsXG4gICAgICBoaWRlUGFnZUxpc3RPbmx5T25lUGFnZSxcbiAgICAgIHRvdGFsUGFnZXMsXG4gICAgICBsYXN0UGFnZSxcbiAgICAgIG9uUGFnZUNoYW5nZSxcbiAgICAgIHNpemVQZXJQYWdlTGlzdCxcbiAgICAgIGN1cnJTaXplUGVyUGFnZSxcbiAgICAgIGhpZGVTaXplUGVyUGFnZSxcbiAgICAgIHNpemVQZXJQYWdlUmVuZGVyZXIsXG4gICAgICBzaXplUGVyUGFnZU9wdGlvblJlbmRlcmVyLFxuICAgICAgb25TaXplUGVyUGFnZUNoYW5nZSxcbiAgICAgIC4uLnJlc3RcbiAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgIGNvbnN0IHBhZ2VzID0gdGhpcy5jYWxjdWxhdGVQYWdlU3RhdHVzKHRoaXMuY2FsY3VsYXRlUGFnZXModG90YWxQYWdlcywgbGFzdFBhZ2UpLCBsYXN0UGFnZSk7XG4gICAgY29uc3QgW2Zyb20sIHRvXSA9IHRoaXMuY2FsY3VsYXRlRnJvbVRvKCk7XG4gICAgY29uc3QgcGFnZUxpc3RDbGFzcyA9IGNzKFxuICAgICAgJ3JlYWN0LWJvb3RzdHJhcC10YWJsZS1wYWdpbmF0aW9uLWxpc3QnLFxuICAgICAgJ2NvbC1tZC02IGNvbC14cy02IGNvbC1zbS02IGNvbC1sZy02Jywge1xuICAgICAgICAncmVhY3QtYm9vdHN0cmFwLXRhYmxlLXBhZ2luYXRpb24tbGlzdC1oaWRkZW4nOiAoaGlkZVBhZ2VMaXN0T25seU9uZVBhZ2UgJiYgdG90YWxQYWdlcyA9PT0gMSlcbiAgICAgIH0pO1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvdyByZWFjdC1ib290c3RyYXAtdGFibGUtcGFnaW5hdGlvblwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC1tZC02IGNvbC14cy02IGNvbC1zbS02IGNvbC1sZy02XCI+XG4gICAgICAgICAgPFNpemVQZXJQYWdlRHJvcGRvd25BZGFwdGVyXG4gICAgICAgICAgICBzaXplUGVyUGFnZUxpc3Q9eyBzaXplUGVyUGFnZUxpc3QgfVxuICAgICAgICAgICAgY3VyclNpemVQZXJQYWdlPXsgY3VyclNpemVQZXJQYWdlIH1cbiAgICAgICAgICAgIGhpZGVTaXplUGVyUGFnZT17IGhpZGVTaXplUGVyUGFnZSB9XG4gICAgICAgICAgICBzaXplUGVyUGFnZVJlbmRlcmVyPXsgc2l6ZVBlclBhZ2VSZW5kZXJlciB9XG4gICAgICAgICAgICBzaXplUGVyUGFnZU9wdGlvblJlbmRlcmVyPXsgc2l6ZVBlclBhZ2VPcHRpb25SZW5kZXJlciB9XG4gICAgICAgICAgICBvblNpemVQZXJQYWdlQ2hhbmdlPXsgb25TaXplUGVyUGFnZUNoYW5nZSB9XG4gICAgICAgICAgLz5cbiAgICAgICAgICB7XG4gICAgICAgICAgICBzaG93VG90YWwgP1xuICAgICAgICAgICAgICB0aGlzLnNldFRvdGFsKFxuICAgICAgICAgICAgICAgIGZyb20sXG4gICAgICAgICAgICAgICAgdG8sXG4gICAgICAgICAgICAgICAgZGF0YVNpemUsXG4gICAgICAgICAgICAgICAgcGFnaW5hdGlvblRvdGFsUmVuZGVyZXJcbiAgICAgICAgICAgICAgKSA6IG51bGxcbiAgICAgICAgICB9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICB7XG4gICAgICAgICAgcGFnZUxpc3RSZW5kZXJlciA/IHBhZ2VMaXN0UmVuZGVyZXIoe1xuICAgICAgICAgICAgcGFnZXMsXG4gICAgICAgICAgICBvblBhZ2VDaGFuZ2VcbiAgICAgICAgICB9KSA6IChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXsgcGFnZUxpc3RDbGFzcyB9PlxuICAgICAgICAgICAgICA8UGFnaW5hdGlvbkxpc3RXaXRoQWRhcHRlclxuICAgICAgICAgICAgICAgIHsgLi4ucmVzdCB9XG4gICAgICAgICAgICAgICAgbGFzdFBhZ2U9eyBsYXN0UGFnZSB9XG4gICAgICAgICAgICAgICAgdG90YWxQYWdlcz17IHRvdGFsUGFnZXMgfVxuICAgICAgICAgICAgICAgIHBhZ2VCdXR0b25SZW5kZXJlcj17IHBhZ2VCdXR0b25SZW5kZXJlciB9XG4gICAgICAgICAgICAgICAgb25QYWdlQ2hhbmdlPXsgb25QYWdlQ2hhbmdlIH1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIClcbiAgICAgICAgfVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5QYWdpbmF0aW9uLnByb3BUeXBlcyA9IHtcbiAgZGF0YVNpemU6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgc2l6ZVBlclBhZ2VMaXN0OiBQcm9wVHlwZXMuYXJyYXkuaXNSZXF1aXJlZCxcbiAgY3VyclBhZ2U6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgY3VyclNpemVQZXJQYWdlOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIG9uUGFnZUNoYW5nZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgb25TaXplUGVyUGFnZUNoYW5nZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgcGFnZVN0YXJ0SW5kZXg6IFByb3BUeXBlcy5udW1iZXIsXG4gIHBhZ2luYXRpb25TaXplOiBQcm9wVHlwZXMubnVtYmVyLFxuICBzaG93VG90YWw6IFByb3BUeXBlcy5ib29sLFxuICBwYWdlTGlzdFJlbmRlcmVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgcGFnZUJ1dHRvblJlbmRlcmVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgc2l6ZVBlclBhZ2VSZW5kZXJlcjogUHJvcFR5cGVzLmZ1bmMsXG4gIHBhZ2luYXRpb25Ub3RhbFJlbmRlcmVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgc2l6ZVBlclBhZ2VPcHRpb25SZW5kZXJlcjogUHJvcFR5cGVzLmZ1bmMsXG4gIGZpcnN0UGFnZVRleHQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHByZVBhZ2VUZXh0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBuZXh0UGFnZVRleHQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGxhc3RQYWdlVGV4dDogUHJvcFR5cGVzLnN0cmluZyxcbiAgbmV4dFBhZ2VUaXRsZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgcHJlUGFnZVRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBmaXJzdFBhZ2VUaXRsZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgbGFzdFBhZ2VUaXRsZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgd2l0aEZpcnN0QW5kTGFzdDogUHJvcFR5cGVzLmJvb2wsXG4gIGFsd2F5c1Nob3dBbGxCdG5zOiBQcm9wVHlwZXMuYm9vbCxcbiAgaGlkZVNpemVQZXJQYWdlOiBQcm9wVHlwZXMuYm9vbCxcbiAgaGlkZVBhZ2VMaXN0T25seU9uZVBhZ2U6IFByb3BUeXBlcy5ib29sXG59O1xuXG5QYWdpbmF0aW9uLmRlZmF1bHRQcm9wcyA9IHtcbiAgcGFnZVN0YXJ0SW5kZXg6IENvbnN0LlBBR0VfU1RBUlRfSU5ERVgsXG4gIHBhZ2luYXRpb25TaXplOiBDb25zdC5QQUdJTkFUSU9OX1NJWkUsXG4gIHdpdGhGaXJzdEFuZExhc3Q6IENvbnN0LldpdGhfRklSU1RfQU5EX0xBU1QsXG4gIGFsd2F5c1Nob3dBbGxCdG5zOiBDb25zdC5TSE9XX0FMTF9QQUdFX0JUTlMsXG4gIHNob3dUb3RhbDogQ29uc3QuU0hPV19UT1RBTCxcbiAgcGFnZUxpc3RSZW5kZXJlcjogbnVsbCxcbiAgcGFnZUJ1dHRvblJlbmRlcmVyOiBudWxsLFxuICBzaXplUGVyUGFnZVJlbmRlcmVyOiBudWxsLFxuICBwYWdpbmF0aW9uVG90YWxSZW5kZXJlcjogQ29uc3QuUEFHSU5BVElPTl9UT1RBTCxcbiAgc2l6ZVBlclBhZ2VPcHRpb25SZW5kZXJlcjogbnVsbCxcbiAgZmlyc3RQYWdlVGV4dDogQ29uc3QuRklSU1RfUEFHRV9URVhULFxuICBwcmVQYWdlVGV4dDogQ29uc3QuUFJFX1BBR0VfVEVYVCxcbiAgbmV4dFBhZ2VUZXh0OiBDb25zdC5ORVhUX1BBR0VfVEVYVCxcbiAgbGFzdFBhZ2VUZXh0OiBDb25zdC5MQVNUX1BBR0VfVEVYVCxcbiAgc2l6ZVBlclBhZ2VMaXN0OiBDb25zdC5TSVpFX1BFUl9QQUdFX0xJU1QsXG4gIG5leHRQYWdlVGl0bGU6IENvbnN0Lk5FWFRfUEFHRV9USVRMRSxcbiAgcHJlUGFnZVRpdGxlOiBDb25zdC5QUkVfUEFHRV9USVRMRSxcbiAgZmlyc3RQYWdlVGl0bGU6IENvbnN0LkZJUlNUX1BBR0VfVElUTEUsXG4gIGxhc3RQYWdlVGl0bGU6IENvbnN0LkxBU1RfUEFHRV9USVRMRSxcbiAgaGlkZVNpemVQZXJQYWdlOiBDb25zdC5ISURFX1NJWkVfUEVSX1BBR0UsXG4gIGhpZGVQYWdlTGlzdE9ubHlPbmVQYWdlOiBDb25zdC5ISURFX1BBR0VfTElTVF9PTkxZX09ORV9QQUdFXG59O1xuXG5leHBvcnQgZGVmYXVsdCBwYWdpbmF0aW9uSGFuZGxlcihQYWdpbmF0aW9uKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9wYWdpbmF0aW9uLmpzIiwiLyogZXNsaW50IGpzeC1hMTF5L2hyZWYtbm8taGFzaDogMCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmNvbnN0IFNpemVQZXJQYWdlT3B0aW9uID0gKHtcbiAgdGV4dCxcbiAgcGFnZSxcbiAgb25TaXplUGVyUGFnZUNoYW5nZSxcbiAgYm9vdHN0cmFwNFxufSkgPT4gKGJvb3RzdHJhcDQgPyAoXG4gIDxhXG4gICAgaHJlZj1cIiNcIlxuICAgIHRhYkluZGV4PVwiLTFcIlxuICAgIHJvbGU9XCJtZW51aXRlbVwiXG4gICAgY2xhc3NOYW1lPVwiZHJvcGRvd24taXRlbVwiXG4gICAgZGF0YS1wYWdlPXsgcGFnZSB9XG4gICAgb25Nb3VzZURvd249eyAoZSkgPT4ge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgb25TaXplUGVyUGFnZUNoYW5nZShwYWdlKTtcbiAgICB9IH1cbiAgPlxuICAgIHsgdGV4dCB9XG4gIDwvYT5cbikgOiAoXG4gIDxsaVxuICAgIGtleT17IHRleHQgfVxuICAgIHJvbGU9XCJwcmVzZW50YXRpb25cIlxuICAgIGNsYXNzTmFtZT1cImRyb3Bkb3duLWl0ZW1cIlxuICA+XG4gICAgPGFcbiAgICAgIGhyZWY9XCIjXCJcbiAgICAgIHRhYkluZGV4PVwiLTFcIlxuICAgICAgcm9sZT1cIm1lbnVpdGVtXCJcbiAgICAgIGRhdGEtcGFnZT17IHBhZ2UgfVxuICAgICAgb25Nb3VzZURvd249eyAoZSkgPT4ge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIG9uU2l6ZVBlclBhZ2VDaGFuZ2UocGFnZSk7XG4gICAgICB9IH1cbiAgICA+XG4gICAgICB7IHRleHQgfVxuICAgIDwvYT5cbiAgPC9saT5cbikpO1xuXG5TaXplUGVyUGFnZU9wdGlvbi5wcm9wVHlwZXMgPSB7XG4gIHRleHQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgcGFnZTogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICBvblNpemVQZXJQYWdlQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBib290c3RyYXA0OiBQcm9wVHlwZXMuYm9vbFxufTtcblxuU2l6ZVBlclBhZ2VPcHRpb24uZGVmYXVsdFByb3BzID0ge1xuICBib290c3RyYXA0OiBmYWxzZVxufTtcblxuZXhwb3J0IGRlZmF1bHQgU2l6ZVBlclBhZ2VPcHRpb247XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvc2l6ZS1wZXItcGFnZS1vcHRpb24uanMiLCIvKiBlc2xpbnQgcmVhY3QvcmVxdWlyZS1kZWZhdWx0LXByb3BzOiAwICovXG4vKiBlc2xpbnQganN4LWExMXkvaHJlZi1uby1oYXNoOiAwICovXG5pbXBvcnQgY3MgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuY2xhc3MgUGFnZUJ1dHRvbiBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuaGFuZGxlQ2xpY2sgPSB0aGlzLmhhbmRsZUNsaWNrLmJpbmQodGhpcyk7XG4gIH1cblxuICBoYW5kbGVDbGljayhlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRoaXMucHJvcHMub25QYWdlQ2hhbmdlKHRoaXMucHJvcHMucGFnZSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgcGFnZSxcbiAgICAgIHRpdGxlLFxuICAgICAgYWN0aXZlLFxuICAgICAgZGlzYWJsZWQsXG4gICAgICBjbGFzc05hbWVcbiAgICB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBjbGFzc2VzID0gY3Moe1xuICAgICAgYWN0aXZlLFxuICAgICAgZGlzYWJsZWQsXG4gICAgICAncGFnZS1pdGVtJzogdHJ1ZVxuICAgIH0sIGNsYXNzTmFtZSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGxpIGNsYXNzTmFtZT17IGNsYXNzZXMgfSB0aXRsZT17IHRpdGxlIH0+XG4gICAgICAgIDxhIGhyZWY9XCIjXCIgb25DbGljaz17IHRoaXMuaGFuZGxlQ2xpY2sgfSBjbGFzc05hbWU9XCJwYWdlLWxpbmtcIj57IHBhZ2UgfTwvYT5cbiAgICAgIDwvbGk+XG4gICAgKTtcbiAgfVxufVxuXG5QYWdlQnV0dG9uLnByb3BUeXBlcyA9IHtcbiAgb25QYWdlQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBwYWdlOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMuc3RyaW5nXSkuaXNSZXF1aXJlZCxcbiAgYWN0aXZlOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBkaXNhYmxlZDogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB0aXRsZTogUHJvcFR5cGVzLnN0cmluZ1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUGFnZUJ1dHRvbjtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9wYWdlLWJ1dHRvbi5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5jb25zdCBQYWdpbmF0aW9uVG90YWwgPSBwcm9wcyA9PiAoXG4gIDxzcGFuIGNsYXNzTmFtZT1cInJlYWN0LWJvb3RzdHJhcC10YWJsZS1wYWdpbmF0aW9uLXRvdGFsXCI+XG4gICAgJm5ic3A7U2hvd2luZyByb3dzIHsgcHJvcHMuZnJvbSB9IHRvJm5ic3A7eyBwcm9wcy50byB9IG9mJm5ic3A7eyBwcm9wcy5kYXRhU2l6ZSB9XG4gIDwvc3Bhbj5cbik7XG5cblBhZ2luYXRpb25Ub3RhbC5wcm9wVHlwZXMgPSB7XG4gIGZyb206IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgdG86IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgZGF0YVNpemU6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgUGFnaW5hdGlvblRvdGFsO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2luYXRpb24tdG90YWwuanMiLCJjb25zdCBnZXROb3JtYWxpemVkUGFnZSA9IChcbiAgcGFnZSxcbiAgcGFnZVN0YXJ0SW5kZXhcbikgPT4ge1xuICBjb25zdCBvZmZzZXQgPSBNYXRoLmFicygxIC0gcGFnZVN0YXJ0SW5kZXgpO1xuICByZXR1cm4gcGFnZSArIG9mZnNldDtcbn07XG5cbmNvbnN0IGVuZEluZGV4ID0gKFxuICBwYWdlLFxuICBzaXplUGVyUGFnZSxcbiAgcGFnZVN0YXJ0SW5kZXhcbikgPT4gKGdldE5vcm1hbGl6ZWRQYWdlKHBhZ2UsIHBhZ2VTdGFydEluZGV4KSAqIHNpemVQZXJQYWdlKSAtIDE7XG5cbmNvbnN0IHN0YXJ0SW5kZXggPSAoXG4gIGVuZCxcbiAgc2l6ZVBlclBhZ2UsXG4pID0+IGVuZCAtIChzaXplUGVyUGFnZSAtIDEpO1xuXG5leHBvcnQgY29uc3QgYWxpZ25QYWdlID0gKFxuICBkYXRhU2l6ZSxcbiAgcGFnZSxcbiAgc2l6ZVBlclBhZ2UsXG4gIHBhZ2VTdGFydEluZGV4XG4pID0+IHtcbiAgaWYgKHBhZ2UgPCBwYWdlU3RhcnRJbmRleCB8fCBwYWdlID4gKE1hdGguZmxvb3IoZGF0YVNpemUgLyBzaXplUGVyUGFnZSkgKyBwYWdlU3RhcnRJbmRleCkpIHtcbiAgICByZXR1cm4gcGFnZVN0YXJ0SW5kZXg7XG4gIH1cbiAgcmV0dXJuIHBhZ2U7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0QnlDdXJyUGFnZSA9IChcbiAgZGF0YSxcbiAgcGFnZSxcbiAgc2l6ZVBlclBhZ2UsXG4gIHBhZ2VTdGFydEluZGV4XG4pID0+IHtcbiAgY29uc3QgZGF0YVNpemUgPSBkYXRhLmxlbmd0aDtcbiAgaWYgKCFkYXRhU2l6ZSkgcmV0dXJuIFtdO1xuXG4gIGNvbnN0IGVuZCA9IGVuZEluZGV4KHBhZ2UsIHNpemVQZXJQYWdlLCBwYWdlU3RhcnRJbmRleCk7XG4gIGNvbnN0IHN0YXJ0ID0gc3RhcnRJbmRleChlbmQsIHNpemVQZXJQYWdlKTtcblxuICBjb25zdCByZXN1bHQgPSBbXTtcbiAgZm9yIChsZXQgaSA9IHN0YXJ0OyBpIDw9IGVuZDsgaSArPSAxKSB7XG4gICAgcmVzdWx0LnB1c2goZGF0YVtpXSk7XG4gICAgaWYgKGkgKyAxID09PSBkYXRhU2l6ZSkgYnJlYWs7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvcGFnZS5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUGFnaW5hdGlvbkxpc3QgZnJvbSAnLi9wYWdpbmF0aW9uLWxpc3QnO1xuaW1wb3J0IHN0YW5kYWxvbmVBZGFwdGVyIGZyb20gJy4vc3RhbmRhbG9uZS1hZGFwdGVyJztcbmltcG9ydCBQYWdpbmF0aW9uSGFuZGxlciBmcm9tICcuL3BhZ2luYXRpb24taGFuZGxlcic7XG5pbXBvcnQgcGFnaW5hdGlvbkxpc3RBZGFwdGVyIGZyb20gJy4vcGFnaW5hdGlvbi1saXN0LWFkYXB0ZXInO1xuXG5jb25zdCBQYWdpbmF0aW9uTGlzdFN0YW5kYWxvbmUgPSBwcm9wcyA9PiAoXG4gIDxQYWdpbmF0aW9uTGlzdCB7IC4uLnByb3BzIH0gLz5cbik7XG5cbmV4cG9ydCBkZWZhdWx0XG5zdGFuZGFsb25lQWRhcHRlcihQYWdpbmF0aW9uSGFuZGxlcihwYWdpbmF0aW9uTGlzdEFkYXB0ZXIoUGFnaW5hdGlvbkxpc3RTdGFuZGFsb25lKSkpO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2luYXRpb24tbGlzdC1zdGFuZGFsb25lLmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBTaXplUGVyUGFnZURyb3Bkb3duIGZyb20gJy4vc2l6ZS1wZXItcGFnZS1kcm9wZG93bic7XG5pbXBvcnQgc3RhbmRhbG9uZUFkYXB0ZXIgZnJvbSAnLi9zdGFuZGFsb25lLWFkYXB0ZXInO1xuaW1wb3J0IHBhZ2luYXRpb25IYW5kbGVyIGZyb20gJy4vcGFnaW5hdGlvbi1oYW5kbGVyJztcbmltcG9ydCBzaXplUGVyUGFnZURyb3Bkb3duQWRhcHRlciBmcm9tICcuL3NpemUtcGVyLXBhZ2UtZHJvcGRvd24tYWRhcHRlcic7XG5cbmNvbnN0IFNpemVQZXJQYWdlRHJvcGRvd25TdGFuZGFsb25lID0gcHJvcHMgPT4gKFxuICA8U2l6ZVBlclBhZ2VEcm9wZG93biB7IC4uLnByb3BzIH0gLz5cbik7XG5cbmV4cG9ydCBkZWZhdWx0XG5zdGFuZGFsb25lQWRhcHRlcihwYWdpbmF0aW9uSGFuZGxlcihzaXplUGVyUGFnZURyb3Bkb3duQWRhcHRlcihTaXplUGVyUGFnZURyb3Bkb3duU3RhbmRhbG9uZSkpKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9zaXplLXBlci1wYWdlLWRyb3Bkb3duLXN0YW5kYWxvbmUuanMiXSwic291cmNlUm9vdCI6IiJ9
//# sourceMappingURL=react-bootstrap-table2-paginator.js.map