{"version":3,"sources":["../src/GridTable.js"],"names":["React","PropTypes","cn","FixedSizeGrid","Grid","Header","GridTable","props","_setHeaderRef","bind","_setBodyRef","_itemKey","_handleItemsRendered","renderRow","forceUpdateTable","headerRef","forceUpdate","bodyRef","scrollToPosition","args","scrollTo","scrollLeft","scrollToTop","scrollTop","scrollToLeft","scrollToRow","rowIndex","align","scrollToItem","data","columns","rowRenderer","rowData","render","containerStyle","classPrefix","className","frozenData","width","height","rowHeight","headerWidth","bodyWidth","useIsScrolling","onScroll","hoveredRowKey","overscanRowCount","style","onScrollbarPresenceChange","rest","headerHeight","_getHeaderHeight","frozenRowCount","length","frozenRowsHeight","cls","containerProps","Math","max","min","headerRenderer","ref","rowKey","Array","isArray","reduce","sum","overscanRowStartIndex","overscanRowStopIndex","visibleRowStartIndex","visibleRowStopIndex","onRowsRendered","overscanStartIndex","overscanStopIndex","startIndex","stopIndex","PureComponent","propTypes","object","string","number","isRequired","oneOfType","arrayOf","bool","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { FixedSizeGrid as Grid } from 'react-window';\n\nimport Header from './TableHeader';\n\n/**\n * A wrapper of the Grid for internal only\n */\nclass GridTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this._setHeaderRef = this._setHeaderRef.bind(this);\n    this._setBodyRef = this._setBodyRef.bind(this);\n    this._itemKey = this._itemKey.bind(this);\n    this._handleItemsRendered = this._handleItemsRendered.bind(this);\n\n    this.renderRow = this.renderRow.bind(this);\n  }\n\n  forceUpdateTable() {\n    this.headerRef && this.headerRef.forceUpdate();\n    this.bodyRef && this.bodyRef.forceUpdate();\n  }\n\n  scrollToPosition(args) {\n    this.headerRef && this.headerRef.scrollTo(args.scrollLeft);\n    this.bodyRef && this.bodyRef.scrollTo(args);\n  }\n\n  scrollToTop(scrollTop) {\n    this.bodyRef && this.bodyRef.scrollTo({ scrollTop });\n  }\n\n  scrollToLeft(scrollLeft) {\n    this.headerRef && this.headerRef.scrollTo(scrollLeft);\n    this.bodyRef && this.bodyRef.scrollToPosition({ scrollLeft });\n  }\n\n  scrollToRow(rowIndex = 0, align = 'auto') {\n    this.bodyRef && this.bodyRef.scrollToItem({ rowIndex, align });\n  }\n\n  renderRow(args) {\n    const { data, columns, rowRenderer } = this.props;\n    const rowData = data[args.rowIndex];\n    return rowRenderer({ ...args, columns, rowData });\n  }\n\n  render() {\n    const {\n      containerStyle,\n      classPrefix,\n      className,\n      data,\n      frozenData,\n      width,\n      height,\n      rowHeight,\n      headerWidth,\n      bodyWidth,\n      useIsScrolling,\n      onScroll,\n      hoveredRowKey,\n      overscanRowCount,\n      // omit from rest\n      style,\n      onScrollbarPresenceChange,\n      ...rest\n    } = this.props;\n    const headerHeight = this._getHeaderHeight();\n    const frozenRowCount = frozenData.length;\n    const frozenRowsHeight = rowHeight * frozenRowCount;\n    const cls = cn(`${classPrefix}__table`, className);\n    const containerProps = containerStyle ? { style: containerStyle } : null;\n    return (\n      <div role=\"table\" className={cls} {...containerProps}>\n        <Grid\n          {...rest}\n          className={`${classPrefix}__body`}\n          ref={this._setBodyRef}\n          data={data}\n          itemKey={this._itemKey}\n          frozenData={frozenData}\n          width={width}\n          height={Math.max(height - headerHeight - frozenRowsHeight, 0)}\n          rowHeight={rowHeight}\n          rowCount={data.length}\n          overscanRowCount={overscanRowCount}\n          columnWidth={bodyWidth}\n          columnCount={1}\n          overscanColumnCount={0}\n          useIsScrolling={useIsScrolling}\n          hoveredRowKey={hoveredRowKey}\n          onScroll={onScroll}\n          onItemsRendered={this._handleItemsRendered}\n          children={this.renderRow}\n        />\n        {headerHeight + frozenRowsHeight > 0 && (\n          // put header after body and reverse the display order via css\n          // to prevent header's shadow being covered by body\n          <Header\n            {...rest}\n            className={`${classPrefix}__header`}\n            ref={this._setHeaderRef}\n            data={data}\n            frozenData={frozenData}\n            width={width}\n            height={Math.min(headerHeight + frozenRowsHeight, height)}\n            rowWidth={headerWidth}\n            rowHeight={rowHeight}\n            headerHeight={this.props.headerHeight}\n            headerRenderer={this.props.headerRenderer}\n            rowRenderer={this.props.rowRenderer}\n            hoveredRowKey={frozenRowCount > 0 ? hoveredRowKey : null}\n          />\n        )}\n      </div>\n    );\n  }\n\n  _setHeaderRef(ref) {\n    this.headerRef = ref;\n  }\n\n  _setBodyRef(ref) {\n    this.bodyRef = ref;\n  }\n\n  _itemKey({ rowIndex }) {\n    const { data, rowKey } = this.props;\n    return data[rowIndex][rowKey];\n  }\n\n  _getHeaderHeight() {\n    const { headerHeight } = this.props;\n    if (Array.isArray(headerHeight)) {\n      return headerHeight.reduce((sum, height) => sum + height, 0);\n    }\n    return headerHeight;\n  }\n\n  _handleItemsRendered({ overscanRowStartIndex, overscanRowStopIndex, visibleRowStartIndex, visibleRowStopIndex }) {\n    this.props.onRowsRendered({\n      overscanStartIndex: overscanRowStartIndex,\n      overscanStopIndex: overscanRowStopIndex,\n      startIndex: visibleRowStartIndex,\n      stopIndex: visibleRowStopIndex,\n    });\n  }\n}\n\nGridTable.propTypes = {\n  containerStyle: PropTypes.object,\n  classPrefix: PropTypes.string,\n  className: PropTypes.string,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  headerHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]).isRequired,\n  headerWidth: PropTypes.number.isRequired,\n  bodyWidth: PropTypes.number.isRequired,\n  rowHeight: PropTypes.number.isRequired,\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  frozenData: PropTypes.arrayOf(PropTypes.object),\n  useIsScrolling: PropTypes.bool,\n  overscanRowCount: PropTypes.number,\n  hoveredRowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  style: PropTypes.object,\n  onScrollbarPresenceChange: PropTypes.func,\n\n  onScroll: PropTypes.func,\n  onRowsRendered: PropTypes.func,\n  headerRenderer: PropTypes.func.isRequired,\n  rowRenderer: PropTypes.func.isRequired,\n};\n\nexport default GridTable;\n"],"file":"GridTable.js"}