{"version":3,"sources":["../src/TableRow.js"],"names":["React","PropTypes","renderElement","TableRow","props","_handleExpand","bind","render","isScrolling","className","style","columns","rowIndex","rowData","expandColumnKey","depth","rowEventHandlers","rowRenderer","cellRenderer","expandIconRenderer","Tag","tagName","rowKey","onRowHover","onRowExpand","rest","expandIcon","onExpand","cells","map","column","columnIndex","key","eventHandlers","_getEventHandlers","expanded","handlers","Object","keys","forEach","eventKey","callback","event","mouseEnterHandler","hovered","mouseLeaveHandler","PureComponent","defaultProps","propTypes","bool","string","object","arrayOf","isRequired","number","oneOfType","func","element","elementType"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { renderElement } from './utils';\n\n/**\n * Row component for BaseTable\n */\nclass TableRow extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this._handleExpand = this._handleExpand.bind(this);\n  }\n\n  render() {\n    /* eslint-disable no-unused-vars */\n    const {\n      isScrolling,\n      className,\n      style,\n      columns,\n      rowIndex,\n      rowData,\n      expandColumnKey,\n      depth,\n      rowEventHandlers,\n      rowRenderer,\n      cellRenderer,\n      expandIconRenderer,\n      tagName: Tag,\n      // omit the following from rest\n      rowKey,\n      onRowHover,\n      onRowExpand,\n      ...rest\n    } = this.props;\n    /* eslint-enable no-unused-vars */\n\n    const expandIcon = expandIconRenderer({ rowData, rowIndex, depth, onExpand: this._handleExpand });\n    let cells = columns.map((column, columnIndex) =>\n      cellRenderer({\n        isScrolling,\n        columns,\n        column,\n        columnIndex,\n        rowData,\n        rowIndex,\n        expandIcon: column.key === expandColumnKey && expandIcon,\n      })\n    );\n\n    if (rowRenderer) {\n      cells = renderElement(rowRenderer, { isScrolling, cells, columns, rowData, rowIndex, depth });\n    }\n\n    const eventHandlers = this._getEventHandlers(rowEventHandlers);\n\n    return (\n      <Tag {...rest} className={className} style={style} {...eventHandlers}>\n        {cells}\n      </Tag>\n    );\n  }\n\n  _handleExpand(expanded) {\n    const { onRowExpand, rowData, rowIndex, rowKey } = this.props;\n    onRowExpand && onRowExpand({ expanded, rowData, rowIndex, rowKey });\n  }\n\n  _getEventHandlers(handlers = {}) {\n    const { rowData, rowIndex, rowKey, onRowHover } = this.props;\n    const eventHandlers = {};\n    Object.keys(handlers).forEach(eventKey => {\n      const callback = handlers[eventKey];\n      if (typeof callback === 'function') {\n        eventHandlers[eventKey] = event => {\n          callback({ rowData, rowIndex, rowKey, event });\n        };\n      }\n    });\n\n    if (onRowHover) {\n      const mouseEnterHandler = eventHandlers['onMouseEnter'];\n      eventHandlers['onMouseEnter'] = event => {\n        onRowHover({\n          hovered: true,\n          rowData,\n          rowIndex,\n          rowKey,\n          event,\n        });\n        mouseEnterHandler && mouseEnterHandler(event);\n      };\n\n      const mouseLeaveHandler = eventHandlers['onMouseLeave'];\n      eventHandlers['onMouseLeave'] = event => {\n        onRowHover({\n          hovered: false,\n          rowData,\n          rowIndex,\n          rowKey,\n          event,\n        });\n        mouseLeaveHandler && mouseLeaveHandler(event);\n      };\n    }\n\n    return eventHandlers;\n  }\n}\n\nTableRow.defaultProps = {\n  tagName: 'div',\n};\n\nTableRow.propTypes = {\n  isScrolling: PropTypes.bool,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  rowData: PropTypes.object.isRequired,\n  rowIndex: PropTypes.number.isRequired,\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  expandColumnKey: PropTypes.string,\n  depth: PropTypes.number,\n  rowEventHandlers: PropTypes.object,\n  rowRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  cellRenderer: PropTypes.func,\n  expandIconRenderer: PropTypes.func,\n  onRowHover: PropTypes.func,\n  onRowExpand: PropTypes.func,\n  tagName: PropTypes.elementType,\n};\n\nexport default TableRow;\n"],"file":"TableRow.js"}