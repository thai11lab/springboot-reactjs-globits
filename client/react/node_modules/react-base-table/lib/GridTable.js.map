{"version":3,"sources":["../src/GridTable.js"],"names":["GridTable","props","_setHeaderRef","bind","_setBodyRef","_itemKey","_handleItemsRendered","renderRow","headerRef","forceUpdate","bodyRef","args","scrollTo","scrollLeft","scrollTop","scrollToPosition","rowIndex","align","scrollToItem","data","columns","rowRenderer","rowData","containerStyle","classPrefix","className","frozenData","width","height","rowHeight","headerWidth","bodyWidth","useIsScrolling","onScroll","hoveredRowKey","overscanRowCount","style","onScrollbarPresenceChange","rest","headerHeight","_getHeaderHeight","frozenRowCount","length","frozenRowsHeight","cls","containerProps","Math","max","min","headerRenderer","ref","rowKey","Array","isArray","reduce","sum","overscanRowStartIndex","overscanRowStopIndex","visibleRowStartIndex","visibleRowStopIndex","onRowsRendered","overscanStartIndex","overscanStopIndex","startIndex","stopIndex","React","PureComponent","propTypes","PropTypes","object","string","number","isRequired","oneOfType","arrayOf","bool","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { FixedSizeGrid as Grid } from 'react-window';\n\nimport Header from './TableHeader';\n\n/**\n * A wrapper of the Grid for internal only\n */\nclass GridTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this._setHeaderRef = this._setHeaderRef.bind(this);\n    this._setBodyRef = this._setBodyRef.bind(this);\n    this._itemKey = this._itemKey.bind(this);\n    this._handleItemsRendered = this._handleItemsRendered.bind(this);\n\n    this.renderRow = this.renderRow.bind(this);\n  }\n\n  forceUpdateTable() {\n    this.headerRef && this.headerRef.forceUpdate();\n    this.bodyRef && this.bodyRef.forceUpdate();\n  }\n\n  scrollToPosition(args) {\n    this.headerRef && this.headerRef.scrollTo(args.scrollLeft);\n    this.bodyRef && this.bodyRef.scrollTo(args);\n  }\n\n  scrollToTop(scrollTop) {\n    this.bodyRef && this.bodyRef.scrollTo({ scrollTop });\n  }\n\n  scrollToLeft(scrollLeft) {\n    this.headerRef && this.headerRef.scrollTo(scrollLeft);\n    this.bodyRef && this.bodyRef.scrollToPosition({ scrollLeft });\n  }\n\n  scrollToRow(rowIndex = 0, align = 'auto') {\n    this.bodyRef && this.bodyRef.scrollToItem({ rowIndex, align });\n  }\n\n  renderRow(args) {\n    const { data, columns, rowRenderer } = this.props;\n    const rowData = data[args.rowIndex];\n    return rowRenderer({ ...args, columns, rowData });\n  }\n\n  render() {\n    const {\n      containerStyle,\n      classPrefix,\n      className,\n      data,\n      frozenData,\n      width,\n      height,\n      rowHeight,\n      headerWidth,\n      bodyWidth,\n      useIsScrolling,\n      onScroll,\n      hoveredRowKey,\n      overscanRowCount,\n      // omit from rest\n      style,\n      onScrollbarPresenceChange,\n      ...rest\n    } = this.props;\n    const headerHeight = this._getHeaderHeight();\n    const frozenRowCount = frozenData.length;\n    const frozenRowsHeight = rowHeight * frozenRowCount;\n    const cls = cn(`${classPrefix}__table`, className);\n    const containerProps = containerStyle ? { style: containerStyle } : null;\n    return (\n      <div role=\"table\" className={cls} {...containerProps}>\n        <Grid\n          {...rest}\n          className={`${classPrefix}__body`}\n          ref={this._setBodyRef}\n          data={data}\n          itemKey={this._itemKey}\n          frozenData={frozenData}\n          width={width}\n          height={Math.max(height - headerHeight - frozenRowsHeight, 0)}\n          rowHeight={rowHeight}\n          rowCount={data.length}\n          overscanRowCount={overscanRowCount}\n          columnWidth={bodyWidth}\n          columnCount={1}\n          overscanColumnCount={0}\n          useIsScrolling={useIsScrolling}\n          hoveredRowKey={hoveredRowKey}\n          onScroll={onScroll}\n          onItemsRendered={this._handleItemsRendered}\n          children={this.renderRow}\n        />\n        {headerHeight + frozenRowsHeight > 0 && (\n          // put header after body and reverse the display order via css\n          // to prevent header's shadow being covered by body\n          <Header\n            {...rest}\n            className={`${classPrefix}__header`}\n            ref={this._setHeaderRef}\n            data={data}\n            frozenData={frozenData}\n            width={width}\n            height={Math.min(headerHeight + frozenRowsHeight, height)}\n            rowWidth={headerWidth}\n            rowHeight={rowHeight}\n            headerHeight={this.props.headerHeight}\n            headerRenderer={this.props.headerRenderer}\n            rowRenderer={this.props.rowRenderer}\n            hoveredRowKey={frozenRowCount > 0 ? hoveredRowKey : null}\n          />\n        )}\n      </div>\n    );\n  }\n\n  _setHeaderRef(ref) {\n    this.headerRef = ref;\n  }\n\n  _setBodyRef(ref) {\n    this.bodyRef = ref;\n  }\n\n  _itemKey({ rowIndex }) {\n    const { data, rowKey } = this.props;\n    return data[rowIndex][rowKey];\n  }\n\n  _getHeaderHeight() {\n    const { headerHeight } = this.props;\n    if (Array.isArray(headerHeight)) {\n      return headerHeight.reduce((sum, height) => sum + height, 0);\n    }\n    return headerHeight;\n  }\n\n  _handleItemsRendered({ overscanRowStartIndex, overscanRowStopIndex, visibleRowStartIndex, visibleRowStopIndex }) {\n    this.props.onRowsRendered({\n      overscanStartIndex: overscanRowStartIndex,\n      overscanStopIndex: overscanRowStopIndex,\n      startIndex: visibleRowStartIndex,\n      stopIndex: visibleRowStopIndex,\n    });\n  }\n}\n\nGridTable.propTypes = {\n  containerStyle: PropTypes.object,\n  classPrefix: PropTypes.string,\n  className: PropTypes.string,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  headerHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]).isRequired,\n  headerWidth: PropTypes.number.isRequired,\n  bodyWidth: PropTypes.number.isRequired,\n  rowHeight: PropTypes.number.isRequired,\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  frozenData: PropTypes.arrayOf(PropTypes.object),\n  useIsScrolling: PropTypes.bool,\n  overscanRowCount: PropTypes.number,\n  hoveredRowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  style: PropTypes.object,\n  onScrollbarPresenceChange: PropTypes.func,\n\n  onScroll: PropTypes.func,\n  onRowsRendered: PropTypes.func,\n  headerRenderer: PropTypes.func.isRequired,\n  rowRenderer: PropTypes.func.isRequired,\n};\n\nexport default GridTable;\n"],"file":"GridTable.js"}